// Package nodes contains generated types and Get/Update functions for sophos.Node(s)
//
// This file was generated by bin/gen.go! DO NOT EDIT!
package nodes

import "github.com/esurdam/go-sophos"

// AccServer1AuthSecret represents the acc.server1.auth.secret node and implements sophos.Node
type AccServer1AuthSecret struct{ Value string }

// Get gets the acc.server1.auth.secret value from the UTM
func (a *AccServer1AuthSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.auth.secret", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1AuthSecret
func (a *AccServer1AuthSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.auth.secret", a.Value, options...)
}

// AccServer1AuthServerCert represents the acc.server1.auth.server_cert node and implements sophos.Node
type AccServer1AuthServerCert struct{ Value string }

// Get gets the acc.server1.auth.server_cert value from the UTM
func (a *AccServer1AuthServerCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.auth.server_cert", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1AuthServerCert
func (a *AccServer1AuthServerCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.auth.server_cert", a.Value, options...)
}

// AccServer1AuthStatus represents the acc.server1.auth.status node and implements sophos.Node
type AccServer1AuthStatus struct{ Value bool }

// Get gets the acc.server1.auth.status value from the UTM
func (a *AccServer1AuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.auth.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1AuthStatus
func (a *AccServer1AuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.auth.status", a.Value, options...)
}

// AccServer1Port represents the acc.server1.port node and implements sophos.Node
type AccServer1Port struct{ Value int64 }

// Get gets the acc.server1.port value from the UTM
func (a *AccServer1Port) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1Port
func (a *AccServer1Port) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.port", a.Value, options...)
}

// AccServer1Roles represents the acc.server1.roles node and implements sophos.Node
type AccServer1Roles struct{ Value []string }

// Get gets the acc.server1.roles value from the UTM
func (a *AccServer1Roles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.roles", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1Roles
func (a *AccServer1Roles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.roles", a.Value, options...)
}

// AccServer1Server represents the acc.server1.server node and implements sophos.Node
type AccServer1Server struct{ Value string }

// Get gets the acc.server1.server value from the UTM
func (a *AccServer1Server) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server1.server", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer1Server
func (a *AccServer1Server) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server1.server", a.Value, options...)
}

// AccServer2AuthSecret represents the acc.server2.auth.secret node and implements sophos.Node
type AccServer2AuthSecret struct{ Value string }

// Get gets the acc.server2.auth.secret value from the UTM
func (a *AccServer2AuthSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.auth.secret", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2AuthSecret
func (a *AccServer2AuthSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.auth.secret", a.Value, options...)
}

// AccServer2AuthServerCert represents the acc.server2.auth.server_cert node and implements sophos.Node
type AccServer2AuthServerCert struct{ Value string }

// Get gets the acc.server2.auth.server_cert value from the UTM
func (a *AccServer2AuthServerCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.auth.server_cert", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2AuthServerCert
func (a *AccServer2AuthServerCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.auth.server_cert", a.Value, options...)
}

// AccServer2AuthStatus represents the acc.server2.auth.status node and implements sophos.Node
type AccServer2AuthStatus struct{ Value bool }

// Get gets the acc.server2.auth.status value from the UTM
func (a *AccServer2AuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.auth.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2AuthStatus
func (a *AccServer2AuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.auth.status", a.Value, options...)
}

// AccServer2Port represents the acc.server2.port node and implements sophos.Node
type AccServer2Port struct{ Value int64 }

// Get gets the acc.server2.port value from the UTM
func (a *AccServer2Port) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2Port
func (a *AccServer2Port) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.port", a.Value, options...)
}

// AccServer2Roles represents the acc.server2.roles node and implements sophos.Node
type AccServer2Roles struct{ Value []string }

// Get gets the acc.server2.roles value from the UTM
func (a *AccServer2Roles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.roles", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2Roles
func (a *AccServer2Roles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.roles", a.Value, options...)
}

// AccServer2Server represents the acc.server2.server node and implements sophos.Node
type AccServer2Server struct{ Value string }

// Get gets the acc.server2.server value from the UTM
func (a *AccServer2Server) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.server", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2Server
func (a *AccServer2Server) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.server", a.Value, options...)
}

// AccServer2Status represents the acc.server2.status node and implements sophos.Node
type AccServer2Status struct{ Value bool }

// Get gets the acc.server2.status value from the UTM
func (a *AccServer2Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.server2.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccServer2Status
func (a *AccServer2Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.server2.status", a.Value, options...)
}

// AccSsoAdminGroup represents the acc.sso_admin_group node and implements sophos.Node
type AccSsoAdminGroup struct{ Value string }

// Get gets the acc.sso_admin_group value from the UTM
func (a *AccSsoAdminGroup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.sso_admin_group", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccSsoAdminGroup
func (a *AccSsoAdminGroup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.sso_admin_group", a.Value, options...)
}

// AccSsoAuditorGroup represents the acc.sso_auditor_group node and implements sophos.Node
type AccSsoAuditorGroup struct{ Value string }

// Get gets the acc.sso_auditor_group value from the UTM
func (a *AccSsoAuditorGroup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.sso_auditor_group", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccSsoAuditorGroup
func (a *AccSsoAuditorGroup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.sso_auditor_group", a.Value, options...)
}

// AccStatus represents the acc.status node and implements sophos.Node
type AccStatus struct{ Value bool }

// Get gets the acc.status value from the UTM
func (a *AccStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/acc.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccStatus
func (a *AccStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/acc.status", a.Value, options...)
}

// AccdAccessAllowedAdmins represents the accd.access.allowed_admins node and implements sophos.Node
type AccdAccessAllowedAdmins struct{ Value []interface{} }

// Get gets the accd.access.allowed_admins value from the UTM
func (a *AccdAccessAllowedAdmins) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.access.allowed_admins", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdAccessAllowedAdmins
func (a *AccdAccessAllowedAdmins) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.access.allowed_admins", a.Value, options...)
}

// AccdAccessAllowedNetworks represents the accd.access.allowed_networks node and implements sophos.Node
type AccdAccessAllowedNetworks struct{ Value []interface{} }

// Get gets the accd.access.allowed_networks value from the UTM
func (a *AccdAccessAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.access.allowed_networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdAccessAllowedNetworks
func (a *AccdAccessAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.access.allowed_networks", a.Value, options...)
}

// AccdAccessAllowedUsers represents the accd.access.allowed_users node and implements sophos.Node
type AccdAccessAllowedUsers struct{ Value []interface{} }

// Get gets the accd.access.allowed_users value from the UTM
func (a *AccdAccessAllowedUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.access.allowed_users", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdAccessAllowedUsers
func (a *AccdAccessAllowedUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.access.allowed_users", a.Value, options...)
}

// AccdAccessCert represents the accd.access.cert node and implements sophos.Node
type AccdAccessCert struct{ Value string }

// Get gets the accd.access.cert value from the UTM
func (a *AccdAccessCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.access.cert", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdAccessCert
func (a *AccdAccessCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.access.cert", a.Value, options...)
}

// AccdAccessPort represents the accd.access.port node and implements sophos.Node
type AccdAccessPort struct{ Value int64 }

// Get gets the accd.access.port value from the UTM
func (a *AccdAccessPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.access.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdAccessPort
func (a *AccdAccessPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.access.port", a.Value, options...)
}

// AccdDevicesAllowedNetworks represents the accd.devices.allowed_networks node and implements sophos.Node
type AccdDevicesAllowedNetworks struct{ Value []interface{} }

// Get gets the accd.devices.allowed_networks value from the UTM
func (a *AccdDevicesAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.allowed_networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesAllowedNetworks
func (a *AccdDevicesAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.allowed_networks", a.Value, options...)
}

// AccdDevicesAuthAuto represents the accd.devices.auth.auto node and implements sophos.Node
type AccdDevicesAuthAuto struct{ Value bool }

// Get gets the accd.devices.auth.auto value from the UTM
func (a *AccdDevicesAuthAuto) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.auth.auto", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesAuthAuto
func (a *AccdDevicesAuthAuto) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.auth.auto", a.Value, options...)
}

// AccdDevicesAuthSecret represents the accd.devices.auth.secret node and implements sophos.Node
type AccdDevicesAuthSecret struct{ Value string }

// Get gets the accd.devices.auth.secret value from the UTM
func (a *AccdDevicesAuthSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.auth.secret", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesAuthSecret
func (a *AccdDevicesAuthSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.auth.secret", a.Value, options...)
}

// AccdDevicesAuthStatus represents the accd.devices.auth.status node and implements sophos.Node
type AccdDevicesAuthStatus struct{ Value bool }

// Get gets the accd.devices.auth.status value from the UTM
func (a *AccdDevicesAuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.auth.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesAuthStatus
func (a *AccdDevicesAuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.auth.status", a.Value, options...)
}

// AccdDevicesCert represents the accd.devices.cert node and implements sophos.Node
type AccdDevicesCert struct{ Value string }

// Get gets the accd.devices.cert value from the UTM
func (a *AccdDevicesCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.cert", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesCert
func (a *AccdDevicesCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.cert", a.Value, options...)
}

// AccdDevicesPort represents the accd.devices.port node and implements sophos.Node
type AccdDevicesPort struct{ Value int64 }

// Get gets the accd.devices.port value from the UTM
func (a *AccdDevicesPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.devices.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdDevicesPort
func (a *AccdDevicesPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.devices.port", a.Value, options...)
}

// AccdGeneralAllowedNetworks represents the accd.general.allowed_networks node and implements sophos.Node
type AccdGeneralAllowedNetworks struct{ Value []interface{} }

// Get gets the accd.general.allowed_networks value from the UTM
func (a *AccdGeneralAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.general.allowed_networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdGeneralAllowedNetworks
func (a *AccdGeneralAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.general.allowed_networks", a.Value, options...)
}

// AccdGeneralCert represents the accd.general.cert node and implements sophos.Node
type AccdGeneralCert struct{ Value string }

// Get gets the accd.general.cert value from the UTM
func (a *AccdGeneralCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.general.cert", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdGeneralCert
func (a *AccdGeneralCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.general.cert", a.Value, options...)
}

// AccdGeneralLanguage represents the accd.general.language node and implements sophos.Node
type AccdGeneralLanguage struct{ Value string }

// Get gets the accd.general.language value from the UTM
func (a *AccdGeneralLanguage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.general.language", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdGeneralLanguage
func (a *AccdGeneralLanguage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.general.language", a.Value, options...)
}

// AccdGeneralPort represents the accd.general.port node and implements sophos.Node
type AccdGeneralPort struct{ Value int64 }

// Get gets the accd.general.port value from the UTM
func (a *AccdGeneralPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.general.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdGeneralPort
func (a *AccdGeneralPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.general.port", a.Value, options...)
}

// AccdGeneralTimeout represents the accd.general.timeout node and implements sophos.Node
type AccdGeneralTimeout struct{ Value int64 }

// Get gets the accd.general.timeout value from the UTM
func (a *AccdGeneralTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accd.general.timeout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccdGeneralTimeout
func (a *AccdGeneralTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accd.general.timeout", a.Value, options...)
}

// AccountingIpfixConnections represents the accounting.ipfix.connections node and implements sophos.Node
type AccountingIpfixConnections struct{ Value []interface{} }

// Get gets the accounting.ipfix.connections value from the UTM
func (a *AccountingIpfixConnections) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accounting.ipfix.connections", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccountingIpfixConnections
func (a *AccountingIpfixConnections) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accounting.ipfix.connections", a.Value, options...)
}

// AccountingIpfixStatus represents the accounting.ipfix.status node and implements sophos.Node
type AccountingIpfixStatus struct{ Value bool }

// Get gets the accounting.ipfix.status value from the UTM
func (a *AccountingIpfixStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/accounting.ipfix.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAccountingIpfixStatus
func (a *AccountingIpfixStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/accounting.ipfix.status", a.Value, options...)
}

// AfcControlledNetworks represents the afc.controlled_networks node and implements sophos.Node
type AfcControlledNetworks struct{ Value []string }

// Get gets the afc.controlled_networks value from the UTM
func (a *AfcControlledNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.controlled_networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcControlledNetworks
func (a *AfcControlledNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.controlled_networks", a.Value, options...)
}

// AfcHiddenSkip represents the afc.hidden_skip node and implements sophos.Node
type AfcHiddenSkip struct{ Value []string }

// Get gets the afc.hidden_skip value from the UTM
func (a *AfcHiddenSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.hidden_skip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcHiddenSkip
func (a *AfcHiddenSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.hidden_skip", a.Value, options...)
}

// AfcHttpRedirectUrl represents the afc.http_redirect_url node and implements sophos.Node
type AfcHttpRedirectUrl struct{ Value string }

// Get gets the afc.http_redirect_url value from the UTM
func (a *AfcHttpRedirectUrl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.http_redirect_url", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcHttpRedirectUrl
func (a *AfcHttpRedirectUrl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.http_redirect_url", a.Value, options...)
}

// AfcLog represents the afc.log node and implements sophos.Node
type AfcLog struct{ Value string }

// Get gets the afc.log value from the UTM
func (a *AfcLog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.log", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcLog
func (a *AfcLog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.log", a.Value, options...)
}

// AfcNfqueueLength represents the afc.nfqueue_length node and implements sophos.Node
type AfcNfqueueLength struct{ Value int64 }

// Get gets the afc.nfqueue_length value from the UTM
func (a *AfcNfqueueLength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.nfqueue_length", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcNfqueueLength
func (a *AfcNfqueueLength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.nfqueue_length", a.Value, options...)
}

// AfcNumQueues represents the afc.num_queues node and implements sophos.Node
type AfcNumQueues struct{ Value map[string]interface{} }

// Get gets the afc.num_queues value from the UTM
func (a *AfcNumQueues) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.num_queues", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcNumQueues
func (a *AfcNumQueues) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.num_queues", a.Value, options...)
}

// AfcRules represents the afc.rules node and implements sophos.Node
type AfcRules struct{ Value []interface{} }

// Get gets the afc.rules value from the UTM
func (a *AfcRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.rules", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcRules
func (a *AfcRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.rules", a.Value, options...)
}

// AfcStatus represents the afc.status node and implements sophos.Node
type AfcStatus struct{ Value bool }

// Get gets the afc.status value from the UTM
func (a *AfcStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcStatus
func (a *AfcStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.status", a.Value, options...)
}

// AfcSubappDetection represents the afc.subapp_detection node and implements sophos.Node
type AfcSubappDetection struct{ Value bool }

// Get gets the afc.subapp_detection value from the UTM
func (a *AfcSubappDetection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.subapp_detection", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcSubappDetection
func (a *AfcSubappDetection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.subapp_detection", a.Value, options...)
}

// AfcSubmitUnknownTrafficData represents the afc.submit_unknown_traffic_data node and implements sophos.Node
type AfcSubmitUnknownTrafficData struct{ Value bool }

// Get gets the afc.submit_unknown_traffic_data value from the UTM
func (a *AfcSubmitUnknownTrafficData) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.submit_unknown_traffic_data", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcSubmitUnknownTrafficData
func (a *AfcSubmitUnknownTrafficData) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.submit_unknown_traffic_data", a.Value, options...)
}

// AfcTransparentSkip represents the afc.transparent_skip node and implements sophos.Node
type AfcTransparentSkip struct{ Value []interface{} }

// Get gets the afc.transparent_skip value from the UTM
func (a *AfcTransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/afc.transparent_skip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAfcTransparentSkip
func (a *AfcTransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/afc.transparent_skip", a.Value, options...)
}

// AmazonVpcAutoPfrule represents the amazon_vpc.auto_pfrule node and implements sophos.Node
type AmazonVpcAutoPfrule struct{ Value bool }

// Get gets the amazon_vpc.auto_pfrule value from the UTM
func (a *AmazonVpcAutoPfrule) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/amazon_vpc.auto_pfrule", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAmazonVpcAutoPfrule
func (a *AmazonVpcAutoPfrule) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/amazon_vpc.auto_pfrule", a.Value, options...)
}

// AmazonVpcConnections represents the amazon_vpc.connections node and implements sophos.Node
type AmazonVpcConnections struct{ Value []string }

// Get gets the amazon_vpc.connections value from the UTM
func (a *AmazonVpcConnections) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/amazon_vpc.connections", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAmazonVpcConnections
func (a *AmazonVpcConnections) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/amazon_vpc.connections", a.Value, options...)
}

// AmazonVpcNetworks represents the amazon_vpc.networks node and implements sophos.Node
type AmazonVpcNetworks struct{ Value []string }

// Get gets the amazon_vpc.networks value from the UTM
func (a *AmazonVpcNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/amazon_vpc.networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAmazonVpcNetworks
func (a *AmazonVpcNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/amazon_vpc.networks", a.Value, options...)
}

// AmazonVpcStatus represents the amazon_vpc.status node and implements sophos.Node
type AmazonVpcStatus struct{ Value bool }

// Get gets the amazon_vpc.status value from the UTM
func (a *AmazonVpcStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/amazon_vpc.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAmazonVpcStatus
func (a *AmazonVpcStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/amazon_vpc.status", a.Value, options...)
}

// AptpDbPlugin represents the aptp.db_plugin node and implements sophos.Node
type AptpDbPlugin struct{ Value string }

// Get gets the aptp.db_plugin value from the UTM
func (a *AptpDbPlugin) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.db_plugin", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpDbPlugin
func (a *AptpDbPlugin) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.db_plugin", a.Value, options...)
}

// AptpNumServers represents the aptp.num_servers node and implements sophos.Node
type AptpNumServers struct{ Value int64 }

// Get gets the aptp.num_servers value from the UTM
func (a *AptpNumServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.num_servers", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpNumServers
func (a *AptpNumServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.num_servers", a.Value, options...)
}

// AptpNumThreads represents the aptp.num_threads node and implements sophos.Node
type AptpNumThreads struct{ Value int64 }

// Get gets the aptp.num_threads value from the UTM
func (a *AptpNumThreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.num_threads", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpNumThreads
func (a *AptpNumThreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.num_threads", a.Value, options...)
}

// AptpPolicy represents the aptp.policy node and implements sophos.Node
type AptpPolicy struct{ Value string }

// Get gets the aptp.policy value from the UTM
func (a *AptpPolicy) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.policy", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpPolicy
func (a *AptpPolicy) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.policy", a.Value, options...)
}

// AptpPort represents the aptp.port node and implements sophos.Node
type AptpPort struct{ Value int64 }

// Get gets the aptp.port value from the UTM
func (a *AptpPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.port", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpPort
func (a *AptpPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.port", a.Value, options...)
}

// AptpRuleModifiers represents the aptp.rule_modifiers node and implements sophos.Node
type AptpRuleModifiers struct{ Value []interface{} }

// Get gets the aptp.rule_modifiers value from the UTM
func (a *AptpRuleModifiers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.rule_modifiers", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpRuleModifiers
func (a *AptpRuleModifiers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.rule_modifiers", a.Value, options...)
}

// AptpStatus represents the aptp.status node and implements sophos.Node
type AptpStatus struct{ Value bool }

// Get gets the aptp.status value from the UTM
func (a *AptpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpStatus
func (a *AptpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.status", a.Value, options...)
}

// AptpTransparentSkip represents the aptp.transparent_skip node and implements sophos.Node
type AptpTransparentSkip struct{ Value []interface{} }

// Get gets the aptp.transparent_skip value from the UTM
func (a *AptpTransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/aptp.transparent_skip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAptpTransparentSkip
func (a *AptpTransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/aptp.transparent_skip", a.Value, options...)
}

// ArmLicensedIp represents the arm.licensed_ip node and implements sophos.Node
type ArmLicensedIp struct{ Value string }

// Get gets the arm.licensed_ip value from the UTM
func (a *ArmLicensedIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.licensed_ip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmLicensedIp
func (a *ArmLicensedIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.licensed_ip", a.Value, options...)
}

// ArmRemoteHost represents the arm.remote.host node and implements sophos.Node
type ArmRemoteHost struct{ Value string }

// Get gets the arm.remote.host value from the UTM
func (a *ArmRemoteHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.host", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteHost
func (a *ArmRemoteHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.host", a.Value, options...)
}

// ArmRemoteMethod represents the arm.remote.method node and implements sophos.Node
type ArmRemoteMethod struct{ Value string }

// Get gets the arm.remote.method value from the UTM
func (a *ArmRemoteMethod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.method", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteMethod
func (a *ArmRemoteMethod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.method", a.Value, options...)
}

// ArmRemoteSmbPassword represents the arm.remote.smb_password node and implements sophos.Node
type ArmRemoteSmbPassword struct{ Value string }

// Get gets the arm.remote.smb_password value from the UTM
func (a *ArmRemoteSmbPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.smb_password", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteSmbPassword
func (a *ArmRemoteSmbPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.smb_password", a.Value, options...)
}

// ArmRemoteSmbShare represents the arm.remote.smb_share node and implements sophos.Node
type ArmRemoteSmbShare struct{ Value string }

// Get gets the arm.remote.smb_share value from the UTM
func (a *ArmRemoteSmbShare) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.smb_share", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteSmbShare
func (a *ArmRemoteSmbShare) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.smb_share", a.Value, options...)
}

// ArmRemoteSmbUser represents the arm.remote.smb_user node and implements sophos.Node
type ArmRemoteSmbUser struct{ Value string }

// Get gets the arm.remote.smb_user value from the UTM
func (a *ArmRemoteSmbUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.smb_user", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteSmbUser
func (a *ArmRemoteSmbUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.smb_user", a.Value, options...)
}

// ArmRemoteStatus represents the arm.remote.status node and implements sophos.Node
type ArmRemoteStatus struct{ Value bool }

// Get gets the arm.remote.status value from the UTM
func (a *ArmRemoteStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteStatus
func (a *ArmRemoteStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.status", a.Value, options...)
}

// ArmRemoteSyslogService represents the arm.remote.syslog_service node and implements sophos.Node
type ArmRemoteSyslogService struct{ Value string }

// Get gets the arm.remote.syslog_service value from the UTM
func (a *ArmRemoteSyslogService) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.remote.syslog_service", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmRemoteSyslogService
func (a *ArmRemoteSyslogService) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.remote.syslog_service", a.Value, options...)
}

// ArmStatus represents the arm.status node and implements sophos.Node
type ArmStatus struct{ Value bool }

// Get gets the arm.status value from the UTM
func (a *ArmStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/arm.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateArmStatus
func (a *ArmStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/arm.status", a.Value, options...)
}

// AuthAdSsoForceUtf8Sync represents the auth.ad_sso.force_utf8_sync node and implements sophos.Node
type AuthAdSsoForceUtf8Sync struct{ Value bool }

// Get gets the auth.ad_sso.force_utf8_sync value from the UTM
func (a *AuthAdSsoForceUtf8Sync) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.force_utf8_sync", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoForceUtf8Sync
func (a *AuthAdSsoForceUtf8Sync) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.force_utf8_sync", a.Value, options...)
}

// AuthAdSsoJoinresult represents the auth.ad_sso.joinresult node and implements sophos.Node
type AuthAdSsoJoinresult struct{ Value string }

// Get gets the auth.ad_sso.joinresult value from the UTM
func (a *AuthAdSsoJoinresult) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.joinresult", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoJoinresult
func (a *AuthAdSsoJoinresult) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.joinresult", a.Value, options...)
}

// AuthAdSsoLoadbalancerFqdn represents the auth.ad_sso.loadbalancer_fqdn node and implements sophos.Node
type AuthAdSsoLoadbalancerFqdn struct{ Value string }

// Get gets the auth.ad_sso.loadbalancer_fqdn value from the UTM
func (a *AuthAdSsoLoadbalancerFqdn) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.loadbalancer_fqdn", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoLoadbalancerFqdn
func (a *AuthAdSsoLoadbalancerFqdn) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.loadbalancer_fqdn", a.Value, options...)
}

// AuthAdSsoNtlmv2Auth represents the auth.ad_sso.ntlmv2_auth node and implements sophos.Node
type AuthAdSsoNtlmv2Auth struct{ Value bool }

// Get gets the auth.ad_sso.ntlmv2_auth value from the UTM
func (a *AuthAdSsoNtlmv2Auth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.ntlmv2_auth", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoNtlmv2Auth
func (a *AuthAdSsoNtlmv2Auth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.ntlmv2_auth", a.Value, options...)
}

// AuthAdSsoSecrets represents the auth.ad_sso.secrets node and implements sophos.Node
type AuthAdSsoSecrets struct{ Value string }

// Get gets the auth.ad_sso.secrets value from the UTM
func (a *AuthAdSsoSecrets) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.secrets", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSecrets
func (a *AuthAdSsoSecrets) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.secrets", a.Value, options...)
}

// AuthAdSsoSmbconf represents the auth.ad_sso.smbconf node and implements sophos.Node
type AuthAdSsoSmbconf struct{ Value string }

// Get gets the auth.ad_sso.smbconf value from the UTM
func (a *AuthAdSsoSmbconf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.smbconf", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSmbconf
func (a *AuthAdSsoSmbconf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.smbconf", a.Value, options...)
}

// AuthAdSsoSsoDomain represents the auth.ad_sso.sso_domain node and implements sophos.Node
type AuthAdSsoSsoDomain struct{ Value string }

// Get gets the auth.ad_sso.sso_domain value from the UTM
func (a *AuthAdSsoSsoDomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_domain", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoDomain
func (a *AuthAdSsoSsoDomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_domain", a.Value, options...)
}

// AuthAdSsoSsoNetbiosDomain represents the auth.ad_sso.sso_netbios_domain node and implements sophos.Node
type AuthAdSsoSsoNetbiosDomain struct{ Value string }

// Get gets the auth.ad_sso.sso_netbios_domain value from the UTM
func (a *AuthAdSsoSsoNetbiosDomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_netbios_domain", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoNetbiosDomain
func (a *AuthAdSsoSsoNetbiosDomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_netbios_domain", a.Value, options...)
}

// AuthAdSsoSsoNetbiosHost represents the auth.ad_sso.sso_netbios_host node and implements sophos.Node
type AuthAdSsoSsoNetbiosHost struct{ Value string }

// Get gets the auth.ad_sso.sso_netbios_host value from the UTM
func (a *AuthAdSsoSsoNetbiosHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_netbios_host", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoNetbiosHost
func (a *AuthAdSsoSsoNetbiosHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_netbios_host", a.Value, options...)
}

// AuthAdSsoSsoPassword represents the auth.ad_sso.sso_password node and implements sophos.Node
type AuthAdSsoSsoPassword struct{ Value string }

// Get gets the auth.ad_sso.sso_password value from the UTM
func (a *AuthAdSsoSsoPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_password", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoPassword
func (a *AuthAdSsoSsoPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_password", a.Value, options...)
}

// AuthAdSsoSsoServer represents the auth.ad_sso.sso_server node and implements sophos.Node
type AuthAdSsoSsoServer struct{ Value string }

// Get gets the auth.ad_sso.sso_server value from the UTM
func (a *AuthAdSsoSsoServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_server", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoServer
func (a *AuthAdSsoSsoServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_server", a.Value, options...)
}

// AuthAdSsoSsoStatus represents the auth.ad_sso.sso_status node and implements sophos.Node
type AuthAdSsoSsoStatus struct{ Value bool }

// Get gets the auth.ad_sso.sso_status value from the UTM
func (a *AuthAdSsoSsoStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoStatus
func (a *AuthAdSsoSsoStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_status", a.Value, options...)
}

// AuthAdSsoSsoSync represents the auth.ad_sso.sso_sync node and implements sophos.Node
type AuthAdSsoSsoSync struct{ Value bool }

// Get gets the auth.ad_sso.sso_sync value from the UTM
func (a *AuthAdSsoSsoSync) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_sync", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoSync
func (a *AuthAdSsoSsoSync) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_sync", a.Value, options...)
}

// AuthAdSsoSsoUsername represents the auth.ad_sso.sso_username node and implements sophos.Node
type AuthAdSsoSsoUsername struct{ Value string }

// Get gets the auth.ad_sso.sso_username value from the UTM
func (a *AuthAdSsoSsoUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.ad_sso.sso_username", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAdSsoSsoUsername
func (a *AuthAdSsoSsoUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.ad_sso.sso_username", a.Value, options...)
}

// AuthApiTokens represents the auth.api_tokens node and implements sophos.Node
type AuthApiTokens struct{ Value map[string]interface{} }

// Get gets the auth.api_tokens value from the UTM
func (a *AuthApiTokens) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.api_tokens", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthApiTokens
func (a *AuthApiTokens) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.api_tokens", a.Value, options...)
}

// AuthAutoAddToFacility represents the auth.auto_add_to_facility node and implements sophos.Node
type AuthAutoAddToFacility struct{ Value []string }

// Get gets the auth.auto_add_to_facility value from the UTM
func (a *AuthAutoAddToFacility) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.auto_add_to_facility", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAutoAddToFacility
func (a *AuthAutoAddToFacility) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.auto_add_to_facility", a.Value, options...)
}

// AuthAutoAddUsers represents the auth.auto_add_users node and implements sophos.Node
type AuthAutoAddUsers struct{ Value bool }

// Get gets the auth.auto_add_users value from the UTM
func (a *AuthAutoAddUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.auto_add_users", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthAutoAddUsers
func (a *AuthAutoAddUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.auto_add_users", a.Value, options...)
}

// AuthBlockAttempts represents the auth.block.attempts node and implements sophos.Node
type AuthBlockAttempts struct{ Value int64 }

// Get gets the auth.block.attempts value from the UTM
func (a *AuthBlockAttempts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.block.attempts", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthBlockAttempts
func (a *AuthBlockAttempts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.block.attempts", a.Value, options...)
}

// AuthBlockFacilities represents the auth.block.facilities node and implements sophos.Node
type AuthBlockFacilities struct{ Value []string }

// Get gets the auth.block.facilities value from the UTM
func (a *AuthBlockFacilities) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.block.facilities", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthBlockFacilities
func (a *AuthBlockFacilities) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.block.facilities", a.Value, options...)
}

// AuthBlockLockout represents the auth.block.lockout node and implements sophos.Node
type AuthBlockLockout struct{ Value bool }

// Get gets the auth.block.lockout value from the UTM
func (a *AuthBlockLockout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.block.lockout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthBlockLockout
func (a *AuthBlockLockout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.block.lockout", a.Value, options...)
}

// AuthBlockNever represents the auth.block.never node and implements sophos.Node
type AuthBlockNever struct{ Value []interface{} }

// Get gets the auth.block.never value from the UTM
func (a *AuthBlockNever) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.block.never", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthBlockNever
func (a *AuthBlockNever) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.block.never", a.Value, options...)
}

// AuthBlockSeconds represents the auth.block.seconds node and implements sophos.Node
type AuthBlockSeconds struct{ Value int64 }

// Get gets the auth.block.seconds value from the UTM
func (a *AuthBlockSeconds) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.block.seconds", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthBlockSeconds
func (a *AuthBlockSeconds) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.block.seconds", a.Value, options...)
}

// AuthCacheLifetime represents the auth.cache_lifetime node and implements sophos.Node
type AuthCacheLifetime struct{ Value int64 }

// Get gets the auth.cache_lifetime value from the UTM
func (a *AuthCacheLifetime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.cache_lifetime", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthCacheLifetime
func (a *AuthCacheLifetime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.cache_lifetime", a.Value, options...)
}

// AuthDelayedIpsetExpansion represents the auth.delayed_ipset_expansion node and implements sophos.Node
type AuthDelayedIpsetExpansion struct{ Value map[string]interface{} }

// Get gets the auth.delayed_ipset_expansion value from the UTM
func (a *AuthDelayedIpsetExpansion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.delayed_ipset_expansion", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthDelayedIpsetExpansion
func (a *AuthDelayedIpsetExpansion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.delayed_ipset_expansion", a.Value, options...)
}

// AuthEdirSsoEmConflict represents the auth.edir_sso.em_conflict node and implements sophos.Node
type AuthEdirSsoEmConflict struct{ Value string }

// Get gets the auth.edir_sso.em_conflict value from the UTM
func (a *AuthEdirSsoEmConflict) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.em_conflict", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoEmConflict
func (a *AuthEdirSsoEmConflict) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.em_conflict", a.Value, options...)
}

// AuthEdirSsoEmSocketTimeout represents the auth.edir_sso.em_socket_timeout node and implements sophos.Node
type AuthEdirSsoEmSocketTimeout struct{ Value int64 }

// Get gets the auth.edir_sso.em_socket_timeout value from the UTM
func (a *AuthEdirSsoEmSocketTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.em_socket_timeout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoEmSocketTimeout
func (a *AuthEdirSsoEmSocketTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.em_socket_timeout", a.Value, options...)
}

// AuthEdirSsoEmVerifyLogout represents the auth.edir_sso.em_verify_logout node and implements sophos.Node
type AuthEdirSsoEmVerifyLogout struct{ Value bool }

// Get gets the auth.edir_sso.em_verify_logout value from the UTM
func (a *AuthEdirSsoEmVerifyLogout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.em_verify_logout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoEmVerifyLogout
func (a *AuthEdirSsoEmVerifyLogout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.em_verify_logout", a.Value, options...)
}

// AuthEdirSsoSsoAuaSearchIp represents the auth.edir_sso.sso_aua_search_ip node and implements sophos.Node
type AuthEdirSsoSsoAuaSearchIp struct{ Value bool }

// Get gets the auth.edir_sso.sso_aua_search_ip value from the UTM
func (a *AuthEdirSsoSsoAuaSearchIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.sso_aua_search_ip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoSsoAuaSearchIp
func (a *AuthEdirSsoSsoAuaSearchIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.sso_aua_search_ip", a.Value, options...)
}

// AuthEdirSsoSsoMode represents the auth.edir_sso.sso_mode node and implements sophos.Node
type AuthEdirSsoSsoMode struct{ Value string }

// Get gets the auth.edir_sso.sso_mode value from the UTM
func (a *AuthEdirSsoSsoMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.sso_mode", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoSsoMode
func (a *AuthEdirSsoSsoMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.sso_mode", a.Value, options...)
}

// AuthEdirSsoSsoServer represents the auth.edir_sso.sso_server node and implements sophos.Node
type AuthEdirSsoSsoServer struct{ Value string }

// Get gets the auth.edir_sso.sso_server value from the UTM
func (a *AuthEdirSsoSsoServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.sso_server", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoSsoServer
func (a *AuthEdirSsoSsoServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.sso_server", a.Value, options...)
}

// AuthEdirSsoSyncInterval represents the auth.edir_sso.sync_interval node and implements sophos.Node
type AuthEdirSsoSyncInterval struct{ Value int64 }

// Get gets the auth.edir_sso.sync_interval value from the UTM
func (a *AuthEdirSsoSyncInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.edir_sso.sync_interval", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthEdirSsoSyncInterval
func (a *AuthEdirSsoSyncInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.edir_sso.sync_interval", a.Value, options...)
}

// AuthOtpAutoCreateToken represents the auth.otp.auto_create_token node and implements sophos.Node
type AuthOtpAutoCreateToken struct{ Value bool }

// Get gets the auth.otp.auto_create_token value from the UTM
func (a *AuthOtpAutoCreateToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.auto_create_token", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpAutoCreateToken
func (a *AuthOtpAutoCreateToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.auto_create_token", a.Value, options...)
}

// AuthOtpAutoTokenDigest represents the auth.otp.auto_token_digest node and implements sophos.Node
type AuthOtpAutoTokenDigest struct{ Value string }

// Get gets the auth.otp.auto_token_digest value from the UTM
func (a *AuthOtpAutoTokenDigest) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.auto_token_digest", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpAutoTokenDigest
func (a *AuthOtpAutoTokenDigest) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.auto_token_digest", a.Value, options...)
}

// AuthOtpDefaultTimestep represents the auth.otp.default_timestep node and implements sophos.Node
type AuthOtpDefaultTimestep struct{ Value int64 }

// Get gets the auth.otp.default_timestep value from the UTM
func (a *AuthOtpDefaultTimestep) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.default_timestep", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpDefaultTimestep
func (a *AuthOtpDefaultTimestep) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.default_timestep", a.Value, options...)
}

// AuthOtpFacilities represents the auth.otp.facilities node and implements sophos.Node
type AuthOtpFacilities struct{ Value []string }

// Get gets the auth.otp.facilities value from the UTM
func (a *AuthOtpFacilities) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.facilities", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpFacilities
func (a *AuthOtpFacilities) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.facilities", a.Value, options...)
}

// AuthOtpMaxInitTimestepDiff represents the auth.otp.max_init_timestep_diff node and implements sophos.Node
type AuthOtpMaxInitTimestepDiff struct{ Value int64 }

// Get gets the auth.otp.max_init_timestep_diff value from the UTM
func (a *AuthOtpMaxInitTimestepDiff) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.max_init_timestep_diff", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpMaxInitTimestepDiff
func (a *AuthOtpMaxInitTimestepDiff) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.max_init_timestep_diff", a.Value, options...)
}

// AuthOtpMaxTimestepDiff represents the auth.otp.max_timestep_diff node and implements sophos.Node
type AuthOtpMaxTimestepDiff struct{ Value int64 }

// Get gets the auth.otp.max_timestep_diff value from the UTM
func (a *AuthOtpMaxTimestepDiff) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.max_timestep_diff", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpMaxTimestepDiff
func (a *AuthOtpMaxTimestepDiff) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.max_timestep_diff", a.Value, options...)
}

// AuthOtpRequireAllUsers represents the auth.otp.require_all_users node and implements sophos.Node
type AuthOtpRequireAllUsers struct{ Value bool }

// Get gets the auth.otp.require_all_users value from the UTM
func (a *AuthOtpRequireAllUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.require_all_users", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpRequireAllUsers
func (a *AuthOtpRequireAllUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.require_all_users", a.Value, options...)
}

// AuthOtpRequiredUsers represents the auth.otp.required_users node and implements sophos.Node
type AuthOtpRequiredUsers struct{ Value []interface{} }

// Get gets the auth.otp.required_users value from the UTM
func (a *AuthOtpRequiredUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.required_users", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpRequiredUsers
func (a *AuthOtpRequiredUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.required_users", a.Value, options...)
}

// AuthOtpStatus represents the auth.otp.status node and implements sophos.Node
type AuthOtpStatus struct{ Value bool }

// Get gets the auth.otp.status value from the UTM
func (a *AuthOtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.otp.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthOtpStatus
func (a *AuthOtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.otp.status", a.Value, options...)
}

// AuthServers represents the auth.servers node and implements sophos.Node
type AuthServers struct{ Value []interface{} }

// Get gets the auth.servers value from the UTM
func (a *AuthServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.servers", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthServers
func (a *AuthServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.servers", a.Value, options...)
}

// AuthUpdateBackendGroupMembersDebug represents the auth.update_backend_group_members.debug node and implements sophos.Node
type AuthUpdateBackendGroupMembersDebug struct{ Value bool }

// Get gets the auth.update_backend_group_members.debug value from the UTM
func (a *AuthUpdateBackendGroupMembersDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.update_backend_group_members.debug", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthUpdateBackendGroupMembersDebug
func (a *AuthUpdateBackendGroupMembersDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.update_backend_group_members.debug", a.Value, options...)
}

// AuthUpdateBackendGroupMembersStatus represents the auth.update_backend_group_members.status node and implements sophos.Node
type AuthUpdateBackendGroupMembersStatus struct{ Value bool }

// Get gets the auth.update_backend_group_members.status value from the UTM
func (a *AuthUpdateBackendGroupMembersStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/auth.update_backend_group_members.status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAuthUpdateBackendGroupMembersStatus
func (a *AuthUpdateBackendGroupMembersStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/auth.update_backend_group_members.status", a.Value, options...)
}

// AweAllowedInterfaces represents the awe.allowed_interfaces node and implements sophos.Node
type AweAllowedInterfaces struct{ Value []string }

// Get gets the awe.allowed_interfaces value from the UTM
func (a *AweAllowedInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.allowed_interfaces", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweAllowedInterfaces
func (a *AweAllowedInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.allowed_interfaces", a.Value, options...)
}

// AweClients represents the awe.clients node and implements sophos.Node
type AweClients struct{ Value []interface{} }

// Get gets the awe.clients value from the UTM
func (a *AweClients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.clients", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweClients
func (a *AweClients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.clients", a.Value, options...)
}

// AweDevices represents the awe.devices node and implements sophos.Node
type AweDevices struct{ Value []interface{} }

// Get gets the awe.devices value from the UTM
func (a *AweDevices) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.devices", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweDevices
func (a *AweDevices) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.devices", a.Value, options...)
}

// AweGlobalApAutoaccept represents the awe.global.ap_autoaccept node and implements sophos.Node
type AweGlobalApAutoaccept struct{ Value bool }

// Get gets the awe.global.ap_autoaccept value from the UTM
func (a *AweGlobalApAutoaccept) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.ap_autoaccept", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalApAutoaccept
func (a *AweGlobalApAutoaccept) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.ap_autoaccept", a.Value, options...)
}

// AweGlobalApDebuglevel represents the awe.global.ap_debuglevel node and implements sophos.Node
type AweGlobalApDebuglevel struct{ Value map[string]interface{} }

// Get gets the awe.global.ap_debuglevel value from the UTM
func (a *AweGlobalApDebuglevel) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.ap_debuglevel", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalApDebuglevel
func (a *AweGlobalApDebuglevel) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.ap_debuglevel", a.Value, options...)
}

// AweGlobalApSoftlimit represents the awe.global.ap_softlimit node and implements sophos.Node
type AweGlobalApSoftlimit struct{ Value int64 }

// Get gets the awe.global.ap_softlimit value from the UTM
func (a *AweGlobalApSoftlimit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.ap_softlimit", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalApSoftlimit
func (a *AweGlobalApSoftlimit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.ap_softlimit", a.Value, options...)
}

// AweGlobalApVlantag represents the awe.global.ap_vlantag node and implements sophos.Node
type AweGlobalApVlantag struct{ Value map[string]interface{} }

// Get gets the awe.global.ap_vlantag value from the UTM
func (a *AweGlobalApVlantag) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.ap_vlantag", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalApVlantag
func (a *AweGlobalApVlantag) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.ap_vlantag", a.Value, options...)
}

// AweGlobalAweStatus represents the awe.global.awe_status node and implements sophos.Node
type AweGlobalAweStatus struct{ Value int64 }

// Get gets the awe.global.awe_status value from the UTM
func (a *AweGlobalAweStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.awe_status", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalAweStatus
func (a *AweGlobalAweStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.awe_status", a.Value, options...)
}

// AweGlobalBridgeUpdateKickout represents the awe.global.bridge_update_kickout node and implements sophos.Node
type AweGlobalBridgeUpdateKickout struct{ Value bool }

// Get gets the awe.global.bridge_update_kickout value from the UTM
func (a *AweGlobalBridgeUpdateKickout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.bridge_update_kickout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalBridgeUpdateKickout
func (a *AweGlobalBridgeUpdateKickout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.bridge_update_kickout", a.Value, options...)
}

// AweGlobalInitialSetup represents the awe.global.initial_setup node and implements sophos.Node
type AweGlobalInitialSetup struct{ Value bool }

// Get gets the awe.global.initial_setup value from the UTM
func (a *AweGlobalInitialSetup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.initial_setup", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalInitialSetup
func (a *AweGlobalInitialSetup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.initial_setup", a.Value, options...)
}

// AweGlobalLogLevel represents the awe.global.log_level node and implements sophos.Node
type AweGlobalLogLevel struct{ Value int64 }

// Get gets the awe.global.log_level value from the UTM
func (a *AweGlobalLogLevel) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.log_level", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalLogLevel
func (a *AweGlobalLogLevel) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.log_level", a.Value, options...)
}

// AweGlobalMagicIp represents the awe.global.magic_ip node and implements sophos.Node
type AweGlobalMagicIp struct{ Value string }

// Get gets the awe.global.magic_ip value from the UTM
func (a *AweGlobalMagicIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.magic_ip", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalMagicIp
func (a *AweGlobalMagicIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.magic_ip", a.Value, options...)
}

// AweGlobalMultiWifiIfaceBr represents the awe.global.multi_wifi_iface_br node and implements sophos.Node
type AweGlobalMultiWifiIfaceBr struct{ Value bool }

// Get gets the awe.global.multi_wifi_iface_br value from the UTM
func (a *AweGlobalMultiWifiIfaceBr) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.multi_wifi_iface_br", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalMultiWifiIfaceBr
func (a *AweGlobalMultiWifiIfaceBr) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.multi_wifi_iface_br", a.Value, options...)
}

// AweGlobalNotificationTimeout represents the awe.global.notification_timeout node and implements sophos.Node
type AweGlobalNotificationTimeout struct{ Value int64 }

// Get gets the awe.global.notification_timeout value from the UTM
func (a *AweGlobalNotificationTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.notification_timeout", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalNotificationTimeout
func (a *AweGlobalNotificationTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.notification_timeout", a.Value, options...)
}

// AweGlobalRadiusConf represents the awe.global.radius_conf node and implements sophos.Node
type AweGlobalRadiusConf struct{ Value string }

// Get gets the awe.global.radius_conf value from the UTM
func (a *AweGlobalRadiusConf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.radius_conf", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalRadiusConf
func (a *AweGlobalRadiusConf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.radius_conf", a.Value, options...)
}

// AweGlobalRootpw represents the awe.global.rootpw node and implements sophos.Node
type AweGlobalRootpw struct{ Value string }

// Get gets the awe.global.rootpw value from the UTM
func (a *AweGlobalRootpw) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.rootpw", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalRootpw
func (a *AweGlobalRootpw) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.rootpw", a.Value, options...)
}

// AweGlobalStayOnline represents the awe.global.stay_online node and implements sophos.Node
type AweGlobalStayOnline struct{ Value bool }

// Get gets the awe.global.stay_online value from the UTM
func (a *AweGlobalStayOnline) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.stay_online", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalStayOnline
func (a *AweGlobalStayOnline) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.stay_online", a.Value, options...)
}

// AweGlobalStoreBssStats represents the awe.global.store_bss_stats node and implements sophos.Node
type AweGlobalStoreBssStats struct{ Value bool }

// Get gets the awe.global.store_bss_stats value from the UTM
func (a *AweGlobalStoreBssStats) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.store_bss_stats", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalStoreBssStats
func (a *AweGlobalStoreBssStats) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.store_bss_stats", a.Value, options...)
}

// AweGlobalTunnelIdOffset represents the awe.global.tunnel_id_offset node and implements sophos.Node
type AweGlobalTunnelIdOffset struct{ Value int64 }

// Get gets the awe.global.tunnel_id_offset value from the UTM
func (a *AweGlobalTunnelIdOffset) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.tunnel_id_offset", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalTunnelIdOffset
func (a *AweGlobalTunnelIdOffset) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.tunnel_id_offset", a.Value, options...)
}

// AweGlobalVlantagging represents the awe.global.vlantagging node and implements sophos.Node
type AweGlobalVlantagging struct{ Value bool }

// Get gets the awe.global.vlantagging value from the UTM
func (a *AweGlobalVlantagging) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.global.vlantagging", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweGlobalVlantagging
func (a *AweGlobalVlantagging) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.global.vlantagging", a.Value, options...)
}

// AweNetworks represents the awe.networks node and implements sophos.Node
type AweNetworks struct{ Value []interface{} }

// Get gets the awe.networks value from the UTM
func (a *AweNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awe.networks", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAweNetworks
func (a *AweNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awe.networks", a.Value, options...)
}

// AwscliProfiles represents the awscli.profiles node and implements sophos.Node
type AwscliProfiles struct{ Value []interface{} }

// Get gets the awscli.profiles value from the UTM
func (a *AwscliProfiles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/awscli.profiles", &a.Value, options...)
}

// Update is syntactic sugar for UpdateAwscliProfiles
func (a *AwscliProfiles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/awscli.profiles", a.Value, options...)
}

// BackupEncryption represents the backup.encryption node and implements sophos.Node
type BackupEncryption struct{ Value bool }

// Get gets the backup.encryption value from the UTM
func (b *BackupEncryption) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.encryption", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupEncryption
func (b *BackupEncryption) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.encryption", b.Value, options...)
}

// BackupInterval represents the backup.interval node and implements sophos.Node
type BackupInterval struct{ Value string }

// Get gets the backup.interval value from the UTM
func (b *BackupInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.interval", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupInterval
func (b *BackupInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.interval", b.Value, options...)
}

// BackupMaxBackups represents the backup.max_backups node and implements sophos.Node
type BackupMaxBackups struct{ Value int64 }

// Get gets the backup.max_backups value from the UTM
func (b *BackupMaxBackups) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.max_backups", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupMaxBackups
func (b *BackupMaxBackups) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.max_backups", b.Value, options...)
}

// BackupPassword represents the backup.password node and implements sophos.Node
type BackupPassword struct{ Value string }

// Get gets the backup.password value from the UTM
func (b *BackupPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.password", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupPassword
func (b *BackupPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.password", b.Value, options...)
}

// BackupRecipients represents the backup.recipients node and implements sophos.Node
type BackupRecipients struct{ Value []string }

// Get gets the backup.recipients value from the UTM
func (b *BackupRecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.recipients", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupRecipients
func (b *BackupRecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.recipients", b.Value, options...)
}

// BackupStatus represents the backup.status node and implements sophos.Node
type BackupStatus struct{ Value bool }

// Get gets the backup.status value from the UTM
func (b *BackupStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/backup.status", &b.Value, options...)
}

// Update is syntactic sugar for UpdateBackupStatus
func (b *BackupStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/backup.status", b.Value, options...)
}

// CaCaGost represents the ca.ca_gost node and implements sophos.Node
type CaCaGost struct{ Value string }

// Get gets the ca.ca_gost value from the UTM
func (c *CaCaGost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.ca_gost", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaCaGost
func (c *CaCaGost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.ca_gost", c.Value, options...)
}

// CaCaIpsec represents the ca.ca_ipsec node and implements sophos.Node
type CaCaIpsec struct{ Value string }

// Get gets the ca.ca_ipsec value from the UTM
func (c *CaCaIpsec) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.ca_ipsec", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaCaIpsec
func (c *CaCaIpsec) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.ca_ipsec", c.Value, options...)
}

// CaCaProxies represents the ca.ca_proxies node and implements sophos.Node
type CaCaProxies struct{ Value string }

// Get gets the ca.ca_proxies value from the UTM
func (c *CaCaProxies) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.ca_proxies", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaCaProxies
func (c *CaCaProxies) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.ca_proxies", c.Value, options...)
}

// CaCaRed represents the ca.ca_red node and implements sophos.Node
type CaCaRed struct{ Value string }

// Get gets the ca.ca_red value from the UTM
func (c *CaCaRed) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.ca_red", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaCaRed
func (c *CaCaRed) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.ca_red", c.Value, options...)
}

// CaDefKeysize represents the ca.def_keysize node and implements sophos.Node
type CaDefKeysize struct{ Value int64 }

// Get gets the ca.def_keysize value from the UTM
func (c *CaDefKeysize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.def_keysize", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaDefKeysize
func (c *CaDefKeysize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.def_keysize", c.Value, options...)
}

// CaGlobalCasEmailEncryptionTrustNewCas represents the ca.global_cas.email_encryption.trust_new_cas node and implements sophos.Node
type CaGlobalCasEmailEncryptionTrustNewCas struct{ Value bool }

// Get gets the ca.global_cas.email_encryption.trust_new_cas value from the UTM
func (c *CaGlobalCasEmailEncryptionTrustNewCas) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.email_encryption.trust_new_cas", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasEmailEncryptionTrustNewCas
func (c *CaGlobalCasEmailEncryptionTrustNewCas) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.email_encryption.trust_new_cas", c.Value, options...)
}

// CaGlobalCasEmailEncryptionTrusted represents the ca.global_cas.email_encryption.trusted node and implements sophos.Node
type CaGlobalCasEmailEncryptionTrusted struct{ Value []interface{} }

// Get gets the ca.global_cas.email_encryption.trusted value from the UTM
func (c *CaGlobalCasEmailEncryptionTrusted) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.email_encryption.trusted", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasEmailEncryptionTrusted
func (c *CaGlobalCasEmailEncryptionTrusted) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.email_encryption.trusted", c.Value, options...)
}

// CaGlobalCasEmailEncryptionUntrusted represents the ca.global_cas.email_encryption.untrusted node and implements sophos.Node
type CaGlobalCasEmailEncryptionUntrusted struct{ Value []interface{} }

// Get gets the ca.global_cas.email_encryption.untrusted value from the UTM
func (c *CaGlobalCasEmailEncryptionUntrusted) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.email_encryption.untrusted", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasEmailEncryptionUntrusted
func (c *CaGlobalCasEmailEncryptionUntrusted) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.email_encryption.untrusted", c.Value, options...)
}

// CaGlobalCasHttpProxyTrustNewCas represents the ca.global_cas.http_proxy.trust_new_cas node and implements sophos.Node
type CaGlobalCasHttpProxyTrustNewCas struct{ Value bool }

// Get gets the ca.global_cas.http_proxy.trust_new_cas value from the UTM
func (c *CaGlobalCasHttpProxyTrustNewCas) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.http_proxy.trust_new_cas", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasHttpProxyTrustNewCas
func (c *CaGlobalCasHttpProxyTrustNewCas) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.http_proxy.trust_new_cas", c.Value, options...)
}

// CaGlobalCasHttpProxyTrusted represents the ca.global_cas.http_proxy.trusted node and implements sophos.Node
type CaGlobalCasHttpProxyTrusted struct{ Value []interface{} }

// Get gets the ca.global_cas.http_proxy.trusted value from the UTM
func (c *CaGlobalCasHttpProxyTrusted) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.http_proxy.trusted", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasHttpProxyTrusted
func (c *CaGlobalCasHttpProxyTrusted) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.http_proxy.trusted", c.Value, options...)
}

// CaGlobalCasHttpProxyUntrusted represents the ca.global_cas.http_proxy.untrusted node and implements sophos.Node
type CaGlobalCasHttpProxyUntrusted struct{ Value []interface{} }

// Get gets the ca.global_cas.http_proxy.untrusted value from the UTM
func (c *CaGlobalCasHttpProxyUntrusted) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.global_cas.http_proxy.untrusted", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaGlobalCasHttpProxyUntrusted
func (c *CaGlobalCasHttpProxyUntrusted) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.global_cas.http_proxy.untrusted", c.Value, options...)
}

// CaLetsencryptAccountId represents the ca.letsencrypt.account_id node and implements sophos.Node
type CaLetsencryptAccountId struct{ Value string }

// Get gets the ca.letsencrypt.account_id value from the UTM
func (c *CaLetsencryptAccountId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.account_id", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptAccountId
func (c *CaLetsencryptAccountId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.account_id", c.Value, options...)
}

// CaLetsencryptAccountKey represents the ca.letsencrypt.account_key node and implements sophos.Node
type CaLetsencryptAccountKey struct{ Value string }

// Get gets the ca.letsencrypt.account_key value from the UTM
func (c *CaLetsencryptAccountKey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.account_key", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptAccountKey
func (c *CaLetsencryptAccountKey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.account_key", c.Value, options...)
}

// CaLetsencryptAcmeServer represents the ca.letsencrypt.acme_server node and implements sophos.Node
type CaLetsencryptAcmeServer struct{ Value string }

// Get gets the ca.letsencrypt.acme_server value from the UTM
func (c *CaLetsencryptAcmeServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.acme_server", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptAcmeServer
func (c *CaLetsencryptAcmeServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.acme_server", c.Value, options...)
}

// CaLetsencryptDebug represents the ca.letsencrypt.debug node and implements sophos.Node
type CaLetsencryptDebug struct{ Value bool }

// Get gets the ca.letsencrypt.debug value from the UTM
func (c *CaLetsencryptDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.debug", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptDebug
func (c *CaLetsencryptDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.debug", c.Value, options...)
}

// CaLetsencryptErrorInfo represents the ca.letsencrypt.error_info node and implements sophos.Node
type CaLetsencryptErrorInfo struct{ Value string }

// Get gets the ca.letsencrypt.error_info value from the UTM
func (c *CaLetsencryptErrorInfo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.error_info", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptErrorInfo
func (c *CaLetsencryptErrorInfo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.error_info", c.Value, options...)
}

// CaLetsencryptErrorMessage represents the ca.letsencrypt.error_message node and implements sophos.Node
type CaLetsencryptErrorMessage struct{ Value string }

// Get gets the ca.letsencrypt.error_message value from the UTM
func (c *CaLetsencryptErrorMessage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.error_message", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptErrorMessage
func (c *CaLetsencryptErrorMessage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.error_message", c.Value, options...)
}

// CaLetsencryptRegistrationInfo represents the ca.letsencrypt.registration_info node and implements sophos.Node
type CaLetsencryptRegistrationInfo struct{ Value string }

// Get gets the ca.letsencrypt.registration_info value from the UTM
func (c *CaLetsencryptRegistrationInfo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.registration_info", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptRegistrationInfo
func (c *CaLetsencryptRegistrationInfo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.registration_info", c.Value, options...)
}

// CaLetsencryptStatus represents the ca.letsencrypt.status node and implements sophos.Node
type CaLetsencryptStatus struct{ Value bool }

// Get gets the ca.letsencrypt.status value from the UTM
func (c *CaLetsencryptStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.status", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptStatus
func (c *CaLetsencryptStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.status", c.Value, options...)
}

// CaLetsencryptTosUrl represents the ca.letsencrypt.tos_url node and implements sophos.Node
type CaLetsencryptTosUrl struct{ Value string }

// Get gets the ca.letsencrypt.tos_url value from the UTM
func (c *CaLetsencryptTosUrl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ca.letsencrypt.tos_url", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCaLetsencryptTosUrl
func (c *CaLetsencryptTosUrl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ca.letsencrypt.tos_url", c.Value, options...)
}

// CrlsCrls represents the crls.crls node and implements sophos.Node
type CrlsCrls struct{ Value []interface{} }

// Get gets the crls.crls value from the UTM
func (c *CrlsCrls) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/crls.crls", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCrlsCrls
func (c *CrlsCrls) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/crls.crls", c.Value, options...)
}

// CssAvPrimaryEngine represents the css.av_primary_engine node and implements sophos.Node
type CssAvPrimaryEngine struct{ Value string }

// Get gets the css.av_primary_engine value from the UTM
func (c *CssAvPrimaryEngine) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/css.av_primary_engine", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCssAvPrimaryEngine
func (c *CssAvPrimaryEngine) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/css.av_primary_engine", c.Value, options...)
}

// CssSxlLiveprotection represents the css.sxl_liveprotection node and implements sophos.Node
type CssSxlLiveprotection struct{ Value bool }

// Get gets the css.sxl_liveprotection value from the UTM
func (c *CssSxlLiveprotection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/css.sxl_liveprotection", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCssSxlLiveprotection
func (c *CssSxlLiveprotection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/css.sxl_liveprotection", c.Value, options...)
}

// CssSxlSampleSubmit represents the css.sxl_sample_submit node and implements sophos.Node
type CssSxlSampleSubmit struct{ Value bool }

// Get gets the css.sxl_sample_submit value from the UTM
func (c *CssSxlSampleSubmit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/css.sxl_sample_submit", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCssSxlSampleSubmit
func (c *CssSxlSampleSubmit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/css.sxl_sample_submit", c.Value, options...)
}

// CustomizationEppLastUpdated represents the customization.epp.last_updated node and implements sophos.Node
type CustomizationEppLastUpdated struct{ Value int64 }

// Get gets the customization.epp.last_updated value from the UTM
func (c *CustomizationEppLastUpdated) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/customization.epp.last_updated", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCustomizationEppLastUpdated
func (c *CustomizationEppLastUpdated) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/customization.epp.last_updated", c.Value, options...)
}

// CustomizationEppResourcesRoot represents the customization.epp.resources_root node and implements sophos.Node
type CustomizationEppResourcesRoot struct{ Value string }

// Get gets the customization.epp.resources_root value from the UTM
func (c *CustomizationEppResourcesRoot) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/customization.epp.resources_root", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCustomizationEppResourcesRoot
func (c *CustomizationEppResourcesRoot) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/customization.epp.resources_root", c.Value, options...)
}

// CustomizationHttpCustomAssets represents the customization.http.custom_assets node and implements sophos.Node
type CustomizationHttpCustomAssets struct{ Value map[string]interface{} }

// Get gets the customization.http.custom_assets value from the UTM
func (c *CustomizationHttpCustomAssets) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/customization.http.custom_assets", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCustomizationHttpCustomAssets
func (c *CustomizationHttpCustomAssets) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/customization.http.custom_assets", c.Value, options...)
}

// CustomizationHttpCustomTemplates represents the customization.http.custom_templates node and implements sophos.Node
type CustomizationHttpCustomTemplates struct{ Value map[string]interface{} }

// Get gets the customization.http.custom_templates value from the UTM
func (c *CustomizationHttpCustomTemplates) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/customization.http.custom_templates", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCustomizationHttpCustomTemplates
func (c *CustomizationHttpCustomTemplates) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/customization.http.custom_templates", c.Value, options...)
}

// CustomizationHttpLastUpdated represents the customization.http.last_updated node and implements sophos.Node
type CustomizationHttpLastUpdated struct{ Value int64 }

// Get gets the customization.http.last_updated value from the UTM
func (c *CustomizationHttpLastUpdated) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/customization.http.last_updated", &c.Value, options...)
}

// Update is syntactic sugar for UpdateCustomizationHttpLastUpdated
func (c *CustomizationHttpLastUpdated) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/customization.http.last_updated", c.Value, options...)
}

// DebugmodeCrashReport represents the debugmode.crash_report node and implements sophos.Node
type DebugmodeCrashReport struct{ Value bool }

// Get gets the debugmode.crash_report value from the UTM
func (d *DebugmodeCrashReport) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/debugmode.crash_report", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDebugmodeCrashReport
func (d *DebugmodeCrashReport) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/debugmode.crash_report", d.Value, options...)
}

// DebugmodeEnabled represents the debugmode.enabled node and implements sophos.Node
type DebugmodeEnabled struct{ Value bool }

// Get gets the debugmode.enabled value from the UTM
func (d *DebugmodeEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/debugmode.enabled", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDebugmodeEnabled
func (d *DebugmodeEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/debugmode.enabled", d.Value, options...)
}

// DhcpDhclientBindToInterface represents the dhcp.dhclient_bind_to_interface node and implements sophos.Node
type DhcpDhclientBindToInterface struct{ Value bool }

// Get gets the dhcp.dhclient_bind_to_interface value from the UTM
func (d *DhcpDhclientBindToInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.dhclient_bind_to_interface", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpDhclientBindToInterface
func (d *DhcpDhclientBindToInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.dhclient_bind_to_interface", d.Value, options...)
}

// DhcpRelayDhcpServer represents the dhcp.relay.dhcp_server node and implements sophos.Node
type DhcpRelayDhcpServer struct{ Value string }

// Get gets the dhcp.relay.dhcp_server value from the UTM
func (d *DhcpRelayDhcpServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay.dhcp_server", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelayDhcpServer
func (d *DhcpRelayDhcpServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay.dhcp_server", d.Value, options...)
}

// DhcpRelayInterfaces represents the dhcp.relay.interfaces node and implements sophos.Node
type DhcpRelayInterfaces struct{ Value []interface{} }

// Get gets the dhcp.relay.interfaces value from the UTM
func (d *DhcpRelayInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay.interfaces", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelayInterfaces
func (d *DhcpRelayInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay.interfaces", d.Value, options...)
}

// DhcpRelayStatus represents the dhcp.relay.status node and implements sophos.Node
type DhcpRelayStatus struct{ Value bool }

// Get gets the dhcp.relay.status value from the UTM
func (d *DhcpRelayStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay.status", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelayStatus
func (d *DhcpRelayStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay.status", d.Value, options...)
}

// DhcpRelay6ItfsFacingClients represents the dhcp.relay6.itfs_facing_clients node and implements sophos.Node
type DhcpRelay6ItfsFacingClients struct{ Value []interface{} }

// Get gets the dhcp.relay6.itfs_facing_clients value from the UTM
func (d *DhcpRelay6ItfsFacingClients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay6.itfs_facing_clients", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelay6ItfsFacingClients
func (d *DhcpRelay6ItfsFacingClients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay6.itfs_facing_clients", d.Value, options...)
}

// DhcpRelay6ItfsFacingServer6 represents the dhcp.relay6.itfs_facing_server6 node and implements sophos.Node
type DhcpRelay6ItfsFacingServer6 struct{ Value []interface{} }

// Get gets the dhcp.relay6.itfs_facing_server6 value from the UTM
func (d *DhcpRelay6ItfsFacingServer6) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay6.itfs_facing_server6", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelay6ItfsFacingServer6
func (d *DhcpRelay6ItfsFacingServer6) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay6.itfs_facing_server6", d.Value, options...)
}

// DhcpRelay6Status represents the dhcp.relay6.status node and implements sophos.Node
type DhcpRelay6Status struct{ Value bool }

// Get gets the dhcp.relay6.status value from the UTM
func (d *DhcpRelay6Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.relay6.status", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpRelay6Status
func (d *DhcpRelay6Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.relay6.status", d.Value, options...)
}

// DhcpServerCustom4 represents the dhcp.server.custom4 node and implements sophos.Node
type DhcpServerCustom4 struct{ Value string }

// Get gets the dhcp.server.custom4 value from the UTM
func (d *DhcpServerCustom4) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.server.custom4", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpServerCustom4
func (d *DhcpServerCustom4) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.server.custom4", d.Value, options...)
}

// DhcpServerCustom6 represents the dhcp.server.custom6 node and implements sophos.Node
type DhcpServerCustom6 struct{ Value string }

// Get gets the dhcp.server.custom6 value from the UTM
func (d *DhcpServerCustom6) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.server.custom6", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpServerCustom6
func (d *DhcpServerCustom6) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.server.custom6", d.Value, options...)
}

// DhcpServerServers represents the dhcp.server.servers node and implements sophos.Node
type DhcpServerServers struct{ Value []string }

// Get gets the dhcp.server.servers value from the UTM
func (d *DhcpServerServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dhcp.server.servers", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDhcpServerServers
func (d *DhcpServerServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dhcp.server.servers", d.Value, options...)
}

// DigestAllowedNetworks represents the digest.allowed_networks node and implements sophos.Node
type DigestAllowedNetworks struct{ Value []interface{} }

// Get gets the digest.allowed_networks value from the UTM
func (d *DigestAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.allowed_networks", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestAllowedNetworks
func (d *DigestAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.allowed_networks", d.Value, options...)
}

// DigestCustomText represents the digest.custom_text node and implements sophos.Node
type DigestCustomText struct{ Value string }

// Get gets the digest.custom_text value from the UTM
func (d *DigestCustomText) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.custom_text", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestCustomText
func (d *DigestCustomText) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.custom_text", d.Value, options...)
}

// DigestDomains represents the digest.domains node and implements sophos.Node
type DigestDomains struct{ Value []string }

// Get gets the digest.domains value from the UTM
func (d *DigestDomains) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.domains", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestDomains
func (d *DigestDomains) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.domains", d.Value, options...)
}

// DigestHostname represents the digest.hostname node and implements sophos.Node
type DigestHostname struct{ Value string }

// Get gets the digest.hostname value from the UTM
func (d *DigestHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.hostname", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestHostname
func (d *DigestHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.hostname", d.Value, options...)
}

// DigestMailinglists represents the digest.mailinglists node and implements sophos.Node
type DigestMailinglists struct{ Value []interface{} }

// Get gets the digest.mailinglists value from the UTM
func (d *DigestMailinglists) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.mailinglists", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestMailinglists
func (d *DigestMailinglists) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.mailinglists", d.Value, options...)
}

// DigestPort represents the digest.port node and implements sophos.Node
type DigestPort struct{ Value int64 }

// Get gets the digest.port value from the UTM
func (d *DigestPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.port", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestPort
func (d *DigestPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.port", d.Value, options...)
}

// DigestSendTimeOne represents the digest.send_time_one node and implements sophos.Node
type DigestSendTimeOne struct{ Value string }

// Get gets the digest.send_time_one value from the UTM
func (d *DigestSendTimeOne) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.send_time_one", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestSendTimeOne
func (d *DigestSendTimeOne) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.send_time_one", d.Value, options...)
}

// DigestSendTimeTwo represents the digest.send_time_two node and implements sophos.Node
type DigestSendTimeTwo struct{ Value string }

// Get gets the digest.send_time_two value from the UTM
func (d *DigestSendTimeTwo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.send_time_two", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestSendTimeTwo
func (d *DigestSendTimeTwo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.send_time_two", d.Value, options...)
}

// DigestSkiplist represents the digest.skiplist node and implements sophos.Node
type DigestSkiplist struct{ Value []interface{} }

// Get gets the digest.skiplist value from the UTM
func (d *DigestSkiplist) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.skiplist", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestSkiplist
func (d *DigestSkiplist) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.skiplist", d.Value, options...)
}

// DigestStatus represents the digest.status node and implements sophos.Node
type DigestStatus struct{ Value bool }

// Get gets the digest.status value from the UTM
func (d *DigestStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.status", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestStatus
func (d *DigestStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.status", d.Value, options...)
}

// DigestUserRelease represents the digest.user_release node and implements sophos.Node
type DigestUserRelease struct{ Value []string }

// Get gets the digest.user_release value from the UTM
func (d *DigestUserRelease) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/digest.user_release", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDigestUserRelease
func (d *DigestUserRelease) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/digest.user_release", d.Value, options...)
}

// DnsAllowedNetworks represents the dns.allowed_networks node and implements sophos.Node
type DnsAllowedNetworks struct{ Value []string }

// Get gets the dns.allowed_networks value from the UTM
func (d *DnsAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.allowed_networks", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsAllowedNetworks
func (d *DnsAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.allowed_networks", d.Value, options...)
}

// DnsAxfr represents the dns.axfr node and implements sophos.Node
type DnsAxfr struct{ Value []interface{} }

// Get gets the dns.axfr value from the UTM
func (d *DnsAxfr) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.axfr", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsAxfr
func (d *DnsAxfr) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.axfr", d.Value, options...)
}

// DnsDnssec represents the dns.dnssec node and implements sophos.Node
type DnsDnssec struct{ Value bool }

// Get gets the dns.dnssec value from the UTM
func (d *DnsDnssec) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.dnssec", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsDnssec
func (d *DnsDnssec) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.dnssec", d.Value, options...)
}

// DnsEmail represents the dns.email node and implements sophos.Node
type DnsEmail struct{ Value string }

// Get gets the dns.email value from the UTM
func (d *DnsEmail) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.email", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsEmail
func (d *DnsEmail) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.email", d.Value, options...)
}

// DnsEmptyZones represents the dns.empty_zones node and implements sophos.Node
type DnsEmptyZones struct{ Value string }

// Get gets the dns.empty_zones value from the UTM
func (d *DnsEmptyZones) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.empty_zones", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsEmptyZones
func (d *DnsEmptyZones) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.empty_zones", d.Value, options...)
}

// DnsFwdDynamic represents the dns.fwd_dynamic node and implements sophos.Node
type DnsFwdDynamic struct{ Value bool }

// Get gets the dns.fwd_dynamic value from the UTM
func (d *DnsFwdDynamic) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.fwd_dynamic", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsFwdDynamic
func (d *DnsFwdDynamic) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.fwd_dynamic", d.Value, options...)
}

// DnsFwdStatic represents the dns.fwd_static node and implements sophos.Node
type DnsFwdStatic struct{ Value []string }

// Get gets the dns.fwd_static value from the UTM
func (d *DnsFwdStatic) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.fwd_static", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsFwdStatic
func (d *DnsFwdStatic) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.fwd_static", d.Value, options...)
}

// DnsRecheckInterval represents the dns.recheck_interval node and implements sophos.Node
type DnsRecheckInterval struct{ Value int64 }

// Get gets the dns.recheck_interval value from the UTM
func (d *DnsRecheckInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.recheck_interval", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsRecheckInterval
func (d *DnsRecheckInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.recheck_interval", d.Value, options...)
}

// DnsRetryForNonexistingNxdomain represents the dns.retry_for_nonexisting_nxdomain node and implements sophos.Node
type DnsRetryForNonexistingNxdomain struct{ Value int64 }

// Get gets the dns.retry_for_nonexisting_nxdomain value from the UTM
func (d *DnsRetryForNonexistingNxdomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.retry_for_nonexisting_nxdomain", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsRetryForNonexistingNxdomain
func (d *DnsRetryForNonexistingNxdomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.retry_for_nonexisting_nxdomain", d.Value, options...)
}

// DnsRoutes represents the dns.routes node and implements sophos.Node
type DnsRoutes struct{ Value []interface{} }

// Get gets the dns.routes value from the UTM
func (d *DnsRoutes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dns.routes", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDnsRoutes
func (d *DnsRoutes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dns.routes", d.Value, options...)
}

// DyndnsRules represents the dyndns.rules node and implements sophos.Node
type DyndnsRules struct{ Value []interface{} }

// Get gets the dyndns.rules value from the UTM
func (d *DyndnsRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/dyndns.rules", &d.Value, options...)
}

// Update is syntactic sugar for UpdateDyndnsRules
func (d *DyndnsRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/dyndns.rules", d.Value, options...)
}

// EmailpkiAuthorityCert represents the emailpki.authority.cert node and implements sophos.Node
type EmailpkiAuthorityCert struct{ Value string }

// Get gets the emailpki.authority.cert value from the UTM
func (e *EmailpkiAuthorityCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.cert", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityCert
func (e *EmailpkiAuthorityCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.cert", e.Value, options...)
}

// EmailpkiAuthorityFingerprint represents the emailpki.authority.fingerprint node and implements sophos.Node
type EmailpkiAuthorityFingerprint struct{ Value string }

// Get gets the emailpki.authority.fingerprint value from the UTM
func (e *EmailpkiAuthorityFingerprint) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.fingerprint", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityFingerprint
func (e *EmailpkiAuthorityFingerprint) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.fingerprint", e.Value, options...)
}

// EmailpkiAuthorityKey represents the emailpki.authority.key node and implements sophos.Node
type EmailpkiAuthorityKey struct{ Value string }

// Get gets the emailpki.authority.key value from the UTM
func (e *EmailpkiAuthorityKey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.key", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityKey
func (e *EmailpkiAuthorityKey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.key", e.Value, options...)
}

// EmailpkiAuthorityPostmasterFingerprint represents the emailpki.authority.postmaster_fingerprint node and implements sophos.Node
type EmailpkiAuthorityPostmasterFingerprint struct{ Value string }

// Get gets the emailpki.authority.postmaster_fingerprint value from the UTM
func (e *EmailpkiAuthorityPostmasterFingerprint) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.postmaster_fingerprint", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityPostmasterFingerprint
func (e *EmailpkiAuthorityPostmasterFingerprint) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.postmaster_fingerprint", e.Value, options...)
}

// EmailpkiAuthorityPostmasterPrivkey represents the emailpki.authority.postmaster_privkey node and implements sophos.Node
type EmailpkiAuthorityPostmasterPrivkey struct{ Value string }

// Get gets the emailpki.authority.postmaster_privkey value from the UTM
func (e *EmailpkiAuthorityPostmasterPrivkey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.postmaster_privkey", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityPostmasterPrivkey
func (e *EmailpkiAuthorityPostmasterPrivkey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.postmaster_privkey", e.Value, options...)
}

// EmailpkiAuthorityPostmasterPubkey represents the emailpki.authority.postmaster_pubkey node and implements sophos.Node
type EmailpkiAuthorityPostmasterPubkey struct{ Value string }

// Get gets the emailpki.authority.postmaster_pubkey value from the UTM
func (e *EmailpkiAuthorityPostmasterPubkey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.authority.postmaster_pubkey", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiAuthorityPostmasterPubkey
func (e *EmailpkiAuthorityPostmasterPubkey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.authority.postmaster_pubkey", e.Value, options...)
}

// EmailpkiGlobalCity represents the emailpki.global.city node and implements sophos.Node
type EmailpkiGlobalCity struct{ Value string }

// Get gets the emailpki.global.city value from the UTM
func (e *EmailpkiGlobalCity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.global.city", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiGlobalCity
func (e *EmailpkiGlobalCity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.global.city", e.Value, options...)
}

// EmailpkiGlobalCountry represents the emailpki.global.country node and implements sophos.Node
type EmailpkiGlobalCountry struct{ Value string }

// Get gets the emailpki.global.country value from the UTM
func (e *EmailpkiGlobalCountry) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.global.country", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiGlobalCountry
func (e *EmailpkiGlobalCountry) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.global.country", e.Value, options...)
}

// EmailpkiGlobalOrganization represents the emailpki.global.organization node and implements sophos.Node
type EmailpkiGlobalOrganization struct{ Value string }

// Get gets the emailpki.global.organization value from the UTM
func (e *EmailpkiGlobalOrganization) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.global.organization", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiGlobalOrganization
func (e *EmailpkiGlobalOrganization) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.global.organization", e.Value, options...)
}

// EmailpkiGlobalPostmaster represents the emailpki.global.postmaster node and implements sophos.Node
type EmailpkiGlobalPostmaster struct{ Value string }

// Get gets the emailpki.global.postmaster value from the UTM
func (e *EmailpkiGlobalPostmaster) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.global.postmaster", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiGlobalPostmaster
func (e *EmailpkiGlobalPostmaster) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.global.postmaster", e.Value, options...)
}

// EmailpkiGlobalStatus represents the emailpki.global.status node and implements sophos.Node
type EmailpkiGlobalStatus struct{ Value bool }

// Get gets the emailpki.global.status value from the UTM
func (e *EmailpkiGlobalStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.global.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiGlobalStatus
func (e *EmailpkiGlobalStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.global.status", e.Value, options...)
}

// EmailpkiObjectsCas represents the emailpki.objects.cas node and implements sophos.Node
type EmailpkiObjectsCas struct{ Value []string }

// Get gets the emailpki.objects.cas value from the UTM
func (e *EmailpkiObjectsCas) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.objects.cas", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiObjectsCas
func (e *EmailpkiObjectsCas) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.objects.cas", e.Value, options...)
}

// EmailpkiObjectsOpenpgp represents the emailpki.objects.openpgp node and implements sophos.Node
type EmailpkiObjectsOpenpgp struct{ Value []interface{} }

// Get gets the emailpki.objects.openpgp value from the UTM
func (e *EmailpkiObjectsOpenpgp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.objects.openpgp", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiObjectsOpenpgp
func (e *EmailpkiObjectsOpenpgp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.objects.openpgp", e.Value, options...)
}

// EmailpkiObjectsSmime represents the emailpki.objects.smime node and implements sophos.Node
type EmailpkiObjectsSmime struct{ Value []interface{} }

// Get gets the emailpki.objects.smime value from the UTM
func (e *EmailpkiObjectsSmime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.objects.smime", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiObjectsSmime
func (e *EmailpkiObjectsSmime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.objects.smime", e.Value, options...)
}

// EmailpkiObjectsUsers represents the emailpki.objects.users node and implements sophos.Node
type EmailpkiObjectsUsers struct{ Value []interface{} }

// Get gets the emailpki.objects.users value from the UTM
func (e *EmailpkiObjectsUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.objects.users", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiObjectsUsers
func (e *EmailpkiObjectsUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.objects.users", e.Value, options...)
}

// EmailpkiOpenpgpMainKeysize represents the emailpki.openpgp.main_keysize node and implements sophos.Node
type EmailpkiOpenpgpMainKeysize struct{ Value int64 }

// Get gets the emailpki.openpgp.main_keysize value from the UTM
func (e *EmailpkiOpenpgpMainKeysize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.openpgp.main_keysize", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOpenpgpMainKeysize
func (e *EmailpkiOpenpgpMainKeysize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.openpgp.main_keysize", e.Value, options...)
}

// EmailpkiOpenpgpSubKeysize represents the emailpki.openpgp.sub_keysize node and implements sophos.Node
type EmailpkiOpenpgpSubKeysize struct{ Value int64 }

// Get gets the emailpki.openpgp.sub_keysize value from the UTM
func (e *EmailpkiOpenpgpSubKeysize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.openpgp.sub_keysize", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOpenpgpSubKeysize
func (e *EmailpkiOpenpgpSubKeysize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.openpgp.sub_keysize", e.Value, options...)
}

// EmailpkiOptionsExternalAuto represents the emailpki.options.external_auto node and implements sophos.Node
type EmailpkiOptionsExternalAuto struct{ Value bool }

// Get gets the emailpki.options.external_auto value from the UTM
func (e *EmailpkiOptionsExternalAuto) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.external_auto", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsExternalAuto
func (e *EmailpkiOptionsExternalAuto) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.external_auto", e.Value, options...)
}

// EmailpkiOptionsKeyserver represents the emailpki.options.keyserver node and implements sophos.Node
type EmailpkiOptionsKeyserver struct{ Value string }

// Get gets the emailpki.options.keyserver value from the UTM
func (e *EmailpkiOptionsKeyserver) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.keyserver", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsKeyserver
func (e *EmailpkiOptionsKeyserver) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.keyserver", e.Value, options...)
}

// EmailpkiOptionsPolicyDecryption represents the emailpki.options.policy_decryption node and implements sophos.Node
type EmailpkiOptionsPolicyDecryption struct{ Value bool }

// Get gets the emailpki.options.policy_decryption value from the UTM
func (e *EmailpkiOptionsPolicyDecryption) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.policy_decryption", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsPolicyDecryption
func (e *EmailpkiOptionsPolicyDecryption) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.policy_decryption", e.Value, options...)
}

// EmailpkiOptionsPolicyEncryption represents the emailpki.options.policy_encryption node and implements sophos.Node
type EmailpkiOptionsPolicyEncryption struct{ Value bool }

// Get gets the emailpki.options.policy_encryption value from the UTM
func (e *EmailpkiOptionsPolicyEncryption) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.policy_encryption", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsPolicyEncryption
func (e *EmailpkiOptionsPolicyEncryption) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.policy_encryption", e.Value, options...)
}

// EmailpkiOptionsPolicySign represents the emailpki.options.policy_sign node and implements sophos.Node
type EmailpkiOptionsPolicySign struct{ Value bool }

// Get gets the emailpki.options.policy_sign value from the UTM
func (e *EmailpkiOptionsPolicySign) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.policy_sign", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsPolicySign
func (e *EmailpkiOptionsPolicySign) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.policy_sign", e.Value, options...)
}

// EmailpkiOptionsPolicyVerify represents the emailpki.options.policy_verify node and implements sophos.Node
type EmailpkiOptionsPolicyVerify struct{ Value bool }

// Get gets the emailpki.options.policy_verify value from the UTM
func (e *EmailpkiOptionsPolicyVerify) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/emailpki.options.policy_verify", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEmailpkiOptionsPolicyVerify
func (e *EmailpkiOptionsPolicyVerify) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/emailpki.options.policy_verify", e.Value, options...)
}

// EndpointAacAllowedNetworks represents the endpoint.aac.allowed_networks node and implements sophos.Node
type EndpointAacAllowedNetworks struct{ Value []interface{} }

// Get gets the endpoint.aac.allowed_networks value from the UTM
func (e *EndpointAacAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.allowed_networks", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacAllowedNetworks
func (e *EndpointAacAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.allowed_networks", e.Value, options...)
}

// EndpointAacAllowedUsers represents the endpoint.aac.allowed_users node and implements sophos.Node
type EndpointAacAllowedUsers struct{ Value []interface{} }

// Get gets the endpoint.aac.allowed_users value from the UTM
func (e *EndpointAacAllowedUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.allowed_users", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacAllowedUsers
func (e *EndpointAacAllowedUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.allowed_users", e.Value, options...)
}

// EndpointAacCa represents the endpoint.aac.ca node and implements sophos.Node
type EndpointAacCa struct{ Value string }

// Get gets the endpoint.aac.ca value from the UTM
func (e *EndpointAacCa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.ca", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacCa
func (e *EndpointAacCa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.ca", e.Value, options...)
}

// EndpointAacCert represents the endpoint.aac.cert node and implements sophos.Node
type EndpointAacCert struct{ Value string }

// Get gets the endpoint.aac.cert value from the UTM
func (e *EndpointAacCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.cert", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacCert
func (e *EndpointAacCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.cert", e.Value, options...)
}

// EndpointAacMagicIp represents the endpoint.aac.magic_ip node and implements sophos.Node
type EndpointAacMagicIp struct{ Value string }

// Get gets the endpoint.aac.magic_ip value from the UTM
func (e *EndpointAacMagicIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.magic_ip", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacMagicIp
func (e *EndpointAacMagicIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.magic_ip", e.Value, options...)
}

// EndpointAacMaxUserLogins represents the endpoint.aac.max_user_logins node and implements sophos.Node
type EndpointAacMaxUserLogins struct{ Value int64 }

// Get gets the endpoint.aac.max_user_logins value from the UTM
func (e *EndpointAacMaxUserLogins) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.max_user_logins", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacMaxUserLogins
func (e *EndpointAacMaxUserLogins) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.max_user_logins", e.Value, options...)
}

// EndpointAacStatus represents the endpoint.aac.status node and implements sophos.Node
type EndpointAacStatus struct{ Value bool }

// Get gets the endpoint.aac.status value from the UTM
func (e *EndpointAacStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.aac.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointAacStatus
func (e *EndpointAacStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.aac.status", e.Value, options...)
}

// EndpointStasCollectors represents the endpoint.stas.collectors node and implements sophos.Node
type EndpointStasCollectors struct{ Value []interface{} }

// Get gets the endpoint.stas.collectors value from the UTM
func (e *EndpointStasCollectors) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.stas.collectors", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointStasCollectors
func (e *EndpointStasCollectors) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.stas.collectors", e.Value, options...)
}

// EndpointStasStatus represents the endpoint.stas.status node and implements sophos.Node
type EndpointStasStatus struct{ Value bool }

// Get gets the endpoint.stas.status value from the UTM
func (e *EndpointStasStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/endpoint.stas.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEndpointStasStatus
func (e *EndpointStasStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/endpoint.stas.status", e.Value, options...)
}

// EnduserMessagesCompanyLogo represents the enduser_messages.company_logo node and implements sophos.Node
type EnduserMessagesCompanyLogo struct{ Value string }

// Get gets the enduser_messages.company_logo value from the UTM
func (e *EnduserMessagesCompanyLogo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.company_logo", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesCompanyLogo
func (e *EnduserMessagesCompanyLogo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.company_logo", e.Value, options...)
}

// EnduserMessagesCompanyText represents the enduser_messages.company_text node and implements sophos.Node
type EnduserMessagesCompanyText struct{ Value string }

// Get gets the enduser_messages.company_text value from the UTM
func (e *EnduserMessagesCompanyText) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.company_text", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesCompanyText
func (e *EnduserMessagesCompanyText) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.company_text", e.Value, options...)
}

// EnduserMessagesDlpBlackholePart represents the enduser_messages.dlp.blackhole_part node and implements sophos.Node
type EnduserMessagesDlpBlackholePart struct{ Value string }

// Get gets the enduser_messages.dlp.blackhole_part value from the UTM
func (e *EnduserMessagesDlpBlackholePart) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.blackhole_part", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpBlackholePart
func (e *EnduserMessagesDlpBlackholePart) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.blackhole_part", e.Value, options...)
}

// EnduserMessagesDlpFooterPart represents the enduser_messages.dlp.footer_part node and implements sophos.Node
type EnduserMessagesDlpFooterPart struct{ Value string }

// Get gets the enduser_messages.dlp.footer_part value from the UTM
func (e *EnduserMessagesDlpFooterPart) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.footer_part", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpFooterPart
func (e *EnduserMessagesDlpFooterPart) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.footer_part", e.Value, options...)
}

// EnduserMessagesDlpHeaderPart represents the enduser_messages.dlp.header_part node and implements sophos.Node
type EnduserMessagesDlpHeaderPart struct{ Value string }

// Get gets the enduser_messages.dlp.header_part value from the UTM
func (e *EnduserMessagesDlpHeaderPart) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.header_part", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpHeaderPart
func (e *EnduserMessagesDlpHeaderPart) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.header_part", e.Value, options...)
}

// EnduserMessagesDlpOriginalPart represents the enduser_messages.dlp.original_part node and implements sophos.Node
type EnduserMessagesDlpOriginalPart struct{ Value string }

// Get gets the enduser_messages.dlp.original_part value from the UTM
func (e *EnduserMessagesDlpOriginalPart) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.original_part", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpOriginalPart
func (e *EnduserMessagesDlpOriginalPart) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.original_part", e.Value, options...)
}

// EnduserMessagesDlpSpxPart represents the enduser_messages.dlp.spx_part node and implements sophos.Node
type EnduserMessagesDlpSpxPart struct{ Value string }

// Get gets the enduser_messages.dlp.spx_part value from the UTM
func (e *EnduserMessagesDlpSpxPart) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.spx_part", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpSpxPart
func (e *EnduserMessagesDlpSpxPart) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.spx_part", e.Value, options...)
}

// EnduserMessagesDlpSubject represents the enduser_messages.dlp.subject node and implements sophos.Node
type EnduserMessagesDlpSubject struct{ Value string }

// Get gets the enduser_messages.dlp.subject value from the UTM
func (e *EnduserMessagesDlpSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.dlp.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesDlpSubject
func (e *EnduserMessagesDlpSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.dlp.subject", e.Value, options...)
}

// EnduserMessagesHttpAppDesc represents the enduser_messages.http.app_desc node and implements sophos.Node
type EnduserMessagesHttpAppDesc struct{ Value string }

// Get gets the enduser_messages.http.app_desc value from the UTM
func (e *EnduserMessagesHttpAppDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.app_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpAppDesc
func (e *EnduserMessagesHttpAppDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.app_desc", e.Value, options...)
}

// EnduserMessagesHttpAppSubject represents the enduser_messages.http.app_subject node and implements sophos.Node
type EnduserMessagesHttpAppSubject struct{ Value string }

// Get gets the enduser_messages.http.app_subject value from the UTM
func (e *EnduserMessagesHttpAppSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.app_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpAppSubject
func (e *EnduserMessagesHttpAppSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.app_subject", e.Value, options...)
}

// EnduserMessagesHttpBlacklistDesc represents the enduser_messages.http.blacklist_desc node and implements sophos.Node
type EnduserMessagesHttpBlacklistDesc struct{ Value string }

// Get gets the enduser_messages.http.blacklist_desc value from the UTM
func (e *EnduserMessagesHttpBlacklistDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.blacklist_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpBlacklistDesc
func (e *EnduserMessagesHttpBlacklistDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.blacklist_desc", e.Value, options...)
}

// EnduserMessagesHttpBlacklistSubject represents the enduser_messages.http.blacklist_subject node and implements sophos.Node
type EnduserMessagesHttpBlacklistSubject struct{ Value string }

// Get gets the enduser_messages.http.blacklist_subject value from the UTM
func (e *EnduserMessagesHttpBlacklistSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.blacklist_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpBlacklistSubject
func (e *EnduserMessagesHttpBlacklistSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.blacklist_subject", e.Value, options...)
}

// EnduserMessagesHttpCertfailSubject represents the enduser_messages.http.certfail_subject node and implements sophos.Node
type EnduserMessagesHttpCertfailSubject struct{ Value string }

// Get gets the enduser_messages.http.certfail_subject value from the UTM
func (e *EnduserMessagesHttpCertfailSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.certfail_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpCertfailSubject
func (e *EnduserMessagesHttpCertfailSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.certfail_subject", e.Value, options...)
}

// EnduserMessagesHttpCffOverrideDesc represents the enduser_messages.http.cff_override_desc node and implements sophos.Node
type EnduserMessagesHttpCffOverrideDesc struct{ Value string }

// Get gets the enduser_messages.http.cff_override_desc value from the UTM
func (e *EnduserMessagesHttpCffOverrideDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.cff_override_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpCffOverrideDesc
func (e *EnduserMessagesHttpCffOverrideDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.cff_override_desc", e.Value, options...)
}

// EnduserMessagesHttpCffOverrideSubject represents the enduser_messages.http.cff_override_subject node and implements sophos.Node
type EnduserMessagesHttpCffOverrideSubject struct{ Value string }

// Get gets the enduser_messages.http.cff_override_subject value from the UTM
func (e *EnduserMessagesHttpCffOverrideSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.cff_override_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpCffOverrideSubject
func (e *EnduserMessagesHttpCffOverrideSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.cff_override_subject", e.Value, options...)
}

// EnduserMessagesHttpCffOverrideTerms represents the enduser_messages.http.cff_override_terms node and implements sophos.Node
type EnduserMessagesHttpCffOverrideTerms struct{ Value string }

// Get gets the enduser_messages.http.cff_override_terms value from the UTM
func (e *EnduserMessagesHttpCffOverrideTerms) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.cff_override_terms", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpCffOverrideTerms
func (e *EnduserMessagesHttpCffOverrideTerms) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.cff_override_terms", e.Value, options...)
}

// EnduserMessagesHttpDownloadCompleteDesc represents the enduser_messages.http.download_complete_desc node and implements sophos.Node
type EnduserMessagesHttpDownloadCompleteDesc struct{ Value string }

// Get gets the enduser_messages.http.download_complete_desc value from the UTM
func (e *EnduserMessagesHttpDownloadCompleteDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.download_complete_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpDownloadCompleteDesc
func (e *EnduserMessagesHttpDownloadCompleteDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.download_complete_desc", e.Value, options...)
}

// EnduserMessagesHttpDownloadCompleteSubject represents the enduser_messages.http.download_complete_subject node and implements sophos.Node
type EnduserMessagesHttpDownloadCompleteSubject struct{ Value string }

// Get gets the enduser_messages.http.download_complete_subject value from the UTM
func (e *EnduserMessagesHttpDownloadCompleteSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.download_complete_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpDownloadCompleteSubject
func (e *EnduserMessagesHttpDownloadCompleteSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.download_complete_subject", e.Value, options...)
}

// EnduserMessagesHttpDownloadDesc represents the enduser_messages.http.download_desc node and implements sophos.Node
type EnduserMessagesHttpDownloadDesc struct{ Value string }

// Get gets the enduser_messages.http.download_desc value from the UTM
func (e *EnduserMessagesHttpDownloadDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.download_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpDownloadDesc
func (e *EnduserMessagesHttpDownloadDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.download_desc", e.Value, options...)
}

// EnduserMessagesHttpDownloadSubject represents the enduser_messages.http.download_subject node and implements sophos.Node
type EnduserMessagesHttpDownloadSubject struct{ Value string }

// Get gets the enduser_messages.http.download_subject value from the UTM
func (e *EnduserMessagesHttpDownloadSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.download_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpDownloadSubject
func (e *EnduserMessagesHttpDownloadSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.download_subject", e.Value, options...)
}

// EnduserMessagesHttpErrorDesc represents the enduser_messages.http.error_desc node and implements sophos.Node
type EnduserMessagesHttpErrorDesc struct{ Value string }

// Get gets the enduser_messages.http.error_desc value from the UTM
func (e *EnduserMessagesHttpErrorDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.error_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpErrorDesc
func (e *EnduserMessagesHttpErrorDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.error_desc", e.Value, options...)
}

// EnduserMessagesHttpErrorSubject represents the enduser_messages.http.error_subject node and implements sophos.Node
type EnduserMessagesHttpErrorSubject struct{ Value string }

// Get gets the enduser_messages.http.error_subject value from the UTM
func (e *EnduserMessagesHttpErrorSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.error_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpErrorSubject
func (e *EnduserMessagesHttpErrorSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.error_subject", e.Value, options...)
}

// EnduserMessagesHttpFileextensionDesc represents the enduser_messages.http.fileextension_desc node and implements sophos.Node
type EnduserMessagesHttpFileextensionDesc struct{ Value string }

// Get gets the enduser_messages.http.fileextension_desc value from the UTM
func (e *EnduserMessagesHttpFileextensionDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.fileextension_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFileextensionDesc
func (e *EnduserMessagesHttpFileextensionDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.fileextension_desc", e.Value, options...)
}

// EnduserMessagesHttpFileextensionSubject represents the enduser_messages.http.fileextension_subject node and implements sophos.Node
type EnduserMessagesHttpFileextensionSubject struct{ Value string }

// Get gets the enduser_messages.http.fileextension_subject value from the UTM
func (e *EnduserMessagesHttpFileextensionSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.fileextension_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFileextensionSubject
func (e *EnduserMessagesHttpFileextensionSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.fileextension_subject", e.Value, options...)
}

// EnduserMessagesHttpFileextensionWarnDesc represents the enduser_messages.http.fileextension_warn_desc node and implements sophos.Node
type EnduserMessagesHttpFileextensionWarnDesc struct{ Value string }

// Get gets the enduser_messages.http.fileextension_warn_desc value from the UTM
func (e *EnduserMessagesHttpFileextensionWarnDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.fileextension_warn_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFileextensionWarnDesc
func (e *EnduserMessagesHttpFileextensionWarnDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.fileextension_warn_desc", e.Value, options...)
}

// EnduserMessagesHttpFileextensionWarnSubject represents the enduser_messages.http.fileextension_warn_subject node and implements sophos.Node
type EnduserMessagesHttpFileextensionWarnSubject struct{ Value string }

// Get gets the enduser_messages.http.fileextension_warn_subject value from the UTM
func (e *EnduserMessagesHttpFileextensionWarnSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.fileextension_warn_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFileextensionWarnSubject
func (e *EnduserMessagesHttpFileextensionWarnSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.fileextension_warn_subject", e.Value, options...)
}

// EnduserMessagesHttpFilesizeDesc represents the enduser_messages.http.filesize_desc node and implements sophos.Node
type EnduserMessagesHttpFilesizeDesc struct{ Value string }

// Get gets the enduser_messages.http.filesize_desc value from the UTM
func (e *EnduserMessagesHttpFilesizeDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.filesize_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFilesizeDesc
func (e *EnduserMessagesHttpFilesizeDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.filesize_desc", e.Value, options...)
}

// EnduserMessagesHttpFilesizeSubject represents the enduser_messages.http.filesize_subject node and implements sophos.Node
type EnduserMessagesHttpFilesizeSubject struct{ Value string }

// Get gets the enduser_messages.http.filesize_subject value from the UTM
func (e *EnduserMessagesHttpFilesizeSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.filesize_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpFilesizeSubject
func (e *EnduserMessagesHttpFilesizeSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.filesize_subject", e.Value, options...)
}

// EnduserMessagesHttpGeoipDesc represents the enduser_messages.http.geoip_desc node and implements sophos.Node
type EnduserMessagesHttpGeoipDesc struct{ Value string }

// Get gets the enduser_messages.http.geoip_desc value from the UTM
func (e *EnduserMessagesHttpGeoipDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.geoip_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpGeoipDesc
func (e *EnduserMessagesHttpGeoipDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.geoip_desc", e.Value, options...)
}

// EnduserMessagesHttpGeoipSubject represents the enduser_messages.http.geoip_subject node and implements sophos.Node
type EnduserMessagesHttpGeoipSubject struct{ Value string }

// Get gets the enduser_messages.http.geoip_subject value from the UTM
func (e *EnduserMessagesHttpGeoipSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.geoip_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpGeoipSubject
func (e *EnduserMessagesHttpGeoipSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.geoip_subject", e.Value, options...)
}

// EnduserMessagesHttpMimetypeDesc represents the enduser_messages.http.mimetype_desc node and implements sophos.Node
type EnduserMessagesHttpMimetypeDesc struct{ Value string }

// Get gets the enduser_messages.http.mimetype_desc value from the UTM
func (e *EnduserMessagesHttpMimetypeDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.mimetype_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpMimetypeDesc
func (e *EnduserMessagesHttpMimetypeDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.mimetype_desc", e.Value, options...)
}

// EnduserMessagesHttpMimetypeSubject represents the enduser_messages.http.mimetype_subject node and implements sophos.Node
type EnduserMessagesHttpMimetypeSubject struct{ Value string }

// Get gets the enduser_messages.http.mimetype_subject value from the UTM
func (e *EnduserMessagesHttpMimetypeSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.mimetype_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpMimetypeSubject
func (e *EnduserMessagesHttpMimetypeSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.mimetype_subject", e.Value, options...)
}

// EnduserMessagesHttpMimetypeWarnDesc represents the enduser_messages.http.mimetype_warn_desc node and implements sophos.Node
type EnduserMessagesHttpMimetypeWarnDesc struct{ Value string }

// Get gets the enduser_messages.http.mimetype_warn_desc value from the UTM
func (e *EnduserMessagesHttpMimetypeWarnDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.mimetype_warn_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpMimetypeWarnDesc
func (e *EnduserMessagesHttpMimetypeWarnDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.mimetype_warn_desc", e.Value, options...)
}

// EnduserMessagesHttpMimetypeWarnSubject represents the enduser_messages.http.mimetype_warn_subject node and implements sophos.Node
type EnduserMessagesHttpMimetypeWarnSubject struct{ Value string }

// Get gets the enduser_messages.http.mimetype_warn_subject value from the UTM
func (e *EnduserMessagesHttpMimetypeWarnSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.mimetype_warn_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpMimetypeWarnSubject
func (e *EnduserMessagesHttpMimetypeWarnSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.mimetype_warn_subject", e.Value, options...)
}

// EnduserMessagesHttpPuaDesc represents the enduser_messages.http.pua_desc node and implements sophos.Node
type EnduserMessagesHttpPuaDesc struct{ Value string }

// Get gets the enduser_messages.http.pua_desc value from the UTM
func (e *EnduserMessagesHttpPuaDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.pua_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpPuaDesc
func (e *EnduserMessagesHttpPuaDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.pua_desc", e.Value, options...)
}

// EnduserMessagesHttpPuaSubject represents the enduser_messages.http.pua_subject node and implements sophos.Node
type EnduserMessagesHttpPuaSubject struct{ Value string }

// Get gets the enduser_messages.http.pua_subject value from the UTM
func (e *EnduserMessagesHttpPuaSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.pua_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpPuaSubject
func (e *EnduserMessagesHttpPuaSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.pua_subject", e.Value, options...)
}

// EnduserMessagesHttpQuotaBlockDesc represents the enduser_messages.http.quota_block_desc node and implements sophos.Node
type EnduserMessagesHttpQuotaBlockDesc struct{ Value string }

// Get gets the enduser_messages.http.quota_block_desc value from the UTM
func (e *EnduserMessagesHttpQuotaBlockDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.quota_block_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpQuotaBlockDesc
func (e *EnduserMessagesHttpQuotaBlockDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.quota_block_desc", e.Value, options...)
}

// EnduserMessagesHttpQuotaBlockSubject represents the enduser_messages.http.quota_block_subject node and implements sophos.Node
type EnduserMessagesHttpQuotaBlockSubject struct{ Value string }

// Get gets the enduser_messages.http.quota_block_subject value from the UTM
func (e *EnduserMessagesHttpQuotaBlockSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.quota_block_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpQuotaBlockSubject
func (e *EnduserMessagesHttpQuotaBlockSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.quota_block_subject", e.Value, options...)
}

// EnduserMessagesHttpQuotaWarnDesc represents the enduser_messages.http.quota_warn_desc node and implements sophos.Node
type EnduserMessagesHttpQuotaWarnDesc struct{ Value string }

// Get gets the enduser_messages.http.quota_warn_desc value from the UTM
func (e *EnduserMessagesHttpQuotaWarnDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.quota_warn_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpQuotaWarnDesc
func (e *EnduserMessagesHttpQuotaWarnDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.quota_warn_desc", e.Value, options...)
}

// EnduserMessagesHttpQuotaWarnSubject represents the enduser_messages.http.quota_warn_subject node and implements sophos.Node
type EnduserMessagesHttpQuotaWarnSubject struct{ Value string }

// Get gets the enduser_messages.http.quota_warn_subject value from the UTM
func (e *EnduserMessagesHttpQuotaWarnSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.quota_warn_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpQuotaWarnSubject
func (e *EnduserMessagesHttpQuotaWarnSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.quota_warn_subject", e.Value, options...)
}

// EnduserMessagesHttpSpDesc represents the enduser_messages.http.sp_desc node and implements sophos.Node
type EnduserMessagesHttpSpDesc struct{ Value string }

// Get gets the enduser_messages.http.sp_desc value from the UTM
func (e *EnduserMessagesHttpSpDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.sp_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSpDesc
func (e *EnduserMessagesHttpSpDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.sp_desc", e.Value, options...)
}

// EnduserMessagesHttpSpFrameSubject represents the enduser_messages.http.sp_frame_subject node and implements sophos.Node
type EnduserMessagesHttpSpFrameSubject struct{ Value string }

// Get gets the enduser_messages.http.sp_frame_subject value from the UTM
func (e *EnduserMessagesHttpSpFrameSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.sp_frame_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSpFrameSubject
func (e *EnduserMessagesHttpSpFrameSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.sp_frame_subject", e.Value, options...)
}

// EnduserMessagesHttpSpSubject represents the enduser_messages.http.sp_subject node and implements sophos.Node
type EnduserMessagesHttpSpSubject struct{ Value string }

// Get gets the enduser_messages.http.sp_subject value from the UTM
func (e *EnduserMessagesHttpSpSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.sp_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSpSubject
func (e *EnduserMessagesHttpSpSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.sp_subject", e.Value, options...)
}

// EnduserMessagesHttpSpWarnDesc represents the enduser_messages.http.sp_warn_desc node and implements sophos.Node
type EnduserMessagesHttpSpWarnDesc struct{ Value string }

// Get gets the enduser_messages.http.sp_warn_desc value from the UTM
func (e *EnduserMessagesHttpSpWarnDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.sp_warn_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSpWarnDesc
func (e *EnduserMessagesHttpSpWarnDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.sp_warn_desc", e.Value, options...)
}

// EnduserMessagesHttpSpWarnSubject represents the enduser_messages.http.sp_warn_subject node and implements sophos.Node
type EnduserMessagesHttpSpWarnSubject struct{ Value string }

// Get gets the enduser_messages.http.sp_warn_subject value from the UTM
func (e *EnduserMessagesHttpSpWarnSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.sp_warn_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSpWarnSubject
func (e *EnduserMessagesHttpSpWarnSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.sp_warn_subject", e.Value, options...)
}

// EnduserMessagesHttpSslCertraw represents the enduser_messages.http.ssl_certraw node and implements sophos.Node
type EnduserMessagesHttpSslCertraw struct{ Value string }

// Get gets the enduser_messages.http.ssl_certraw value from the UTM
func (e *EnduserMessagesHttpSslCertraw) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_certraw", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslCertraw
func (e *EnduserMessagesHttpSslCertraw) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_certraw", e.Value, options...)
}

// EnduserMessagesHttpSslCertstatus represents the enduser_messages.http.ssl_certstatus node and implements sophos.Node
type EnduserMessagesHttpSslCertstatus struct{ Value string }

// Get gets the enduser_messages.http.ssl_certstatus value from the UTM
func (e *EnduserMessagesHttpSslCertstatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_certstatus", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslCertstatus
func (e *EnduserMessagesHttpSslCertstatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_certstatus", e.Value, options...)
}

// EnduserMessagesHttpSslIssuer represents the enduser_messages.http.ssl_issuer node and implements sophos.Node
type EnduserMessagesHttpSslIssuer struct{ Value string }

// Get gets the enduser_messages.http.ssl_issuer value from the UTM
func (e *EnduserMessagesHttpSslIssuer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_issuer", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslIssuer
func (e *EnduserMessagesHttpSslIssuer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_issuer", e.Value, options...)
}

// EnduserMessagesHttpSslMd5Fp represents the enduser_messages.http.ssl_md5fp node and implements sophos.Node
type EnduserMessagesHttpSslMd5Fp struct{ Value string }

// Get gets the enduser_messages.http.ssl_md5fp value from the UTM
func (e *EnduserMessagesHttpSslMd5Fp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_md5fp", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslMd5Fp
func (e *EnduserMessagesHttpSslMd5Fp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_md5fp", e.Value, options...)
}

// EnduserMessagesHttpSslSha1Fp represents the enduser_messages.http.ssl_sha1fp node and implements sophos.Node
type EnduserMessagesHttpSslSha1Fp struct{ Value string }

// Get gets the enduser_messages.http.ssl_sha1fp value from the UTM
func (e *EnduserMessagesHttpSslSha1Fp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_sha1fp", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslSha1Fp
func (e *EnduserMessagesHttpSslSha1Fp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_sha1fp", e.Value, options...)
}

// EnduserMessagesHttpSslSubject represents the enduser_messages.http.ssl_subject node and implements sophos.Node
type EnduserMessagesHttpSslSubject struct{ Value string }

// Get gets the enduser_messages.http.ssl_subject value from the UTM
func (e *EnduserMessagesHttpSslSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslSubject
func (e *EnduserMessagesHttpSslSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_subject", e.Value, options...)
}

// EnduserMessagesHttpSslValidfrom represents the enduser_messages.http.ssl_validfrom node and implements sophos.Node
type EnduserMessagesHttpSslValidfrom struct{ Value string }

// Get gets the enduser_messages.http.ssl_validfrom value from the UTM
func (e *EnduserMessagesHttpSslValidfrom) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_validfrom", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslValidfrom
func (e *EnduserMessagesHttpSslValidfrom) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_validfrom", e.Value, options...)
}

// EnduserMessagesHttpSslValiduntil represents the enduser_messages.http.ssl_validuntil node and implements sophos.Node
type EnduserMessagesHttpSslValiduntil struct{ Value string }

// Get gets the enduser_messages.http.ssl_validuntil value from the UTM
func (e *EnduserMessagesHttpSslValiduntil) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.ssl_validuntil", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpSslValiduntil
func (e *EnduserMessagesHttpSslValiduntil) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.ssl_validuntil", e.Value, options...)
}

// EnduserMessagesHttpThreatDesc represents the enduser_messages.http.threat_desc node and implements sophos.Node
type EnduserMessagesHttpThreatDesc struct{ Value string }

// Get gets the enduser_messages.http.threat_desc value from the UTM
func (e *EnduserMessagesHttpThreatDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.threat_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpThreatDesc
func (e *EnduserMessagesHttpThreatDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.threat_desc", e.Value, options...)
}

// EnduserMessagesHttpThreatSubject represents the enduser_messages.http.threat_subject node and implements sophos.Node
type EnduserMessagesHttpThreatSubject struct{ Value string }

// Get gets the enduser_messages.http.threat_subject value from the UTM
func (e *EnduserMessagesHttpThreatSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.threat_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpThreatSubject
func (e *EnduserMessagesHttpThreatSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.threat_subject", e.Value, options...)
}

// EnduserMessagesHttpTransparentAuthDesc represents the enduser_messages.http.transparent_auth_desc node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthDesc struct{ Value string }

// Get gets the enduser_messages.http.transparent_auth_desc value from the UTM
func (e *EnduserMessagesHttpTransparentAuthDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.transparent_auth_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpTransparentAuthDesc
func (e *EnduserMessagesHttpTransparentAuthDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.transparent_auth_desc", e.Value, options...)
}

// EnduserMessagesHttpTransparentAuthSubject represents the enduser_messages.http.transparent_auth_subject node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthSubject struct{ Value string }

// Get gets the enduser_messages.http.transparent_auth_subject value from the UTM
func (e *EnduserMessagesHttpTransparentAuthSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.transparent_auth_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpTransparentAuthSubject
func (e *EnduserMessagesHttpTransparentAuthSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.transparent_auth_subject", e.Value, options...)
}

// EnduserMessagesHttpTransparentAuthTerms represents the enduser_messages.http.transparent_auth_terms node and implements sophos.Node
type EnduserMessagesHttpTransparentAuthTerms struct{ Value string }

// Get gets the enduser_messages.http.transparent_auth_terms value from the UTM
func (e *EnduserMessagesHttpTransparentAuthTerms) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.transparent_auth_terms", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpTransparentAuthTerms
func (e *EnduserMessagesHttpTransparentAuthTerms) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.transparent_auth_terms", e.Value, options...)
}

// EnduserMessagesHttpVirusDesc represents the enduser_messages.http.virus_desc node and implements sophos.Node
type EnduserMessagesHttpVirusDesc struct{ Value string }

// Get gets the enduser_messages.http.virus_desc value from the UTM
func (e *EnduserMessagesHttpVirusDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.virus_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpVirusDesc
func (e *EnduserMessagesHttpVirusDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.virus_desc", e.Value, options...)
}

// EnduserMessagesHttpVirusSubject represents the enduser_messages.http.virus_subject node and implements sophos.Node
type EnduserMessagesHttpVirusSubject struct{ Value string }

// Get gets the enduser_messages.http.virus_subject value from the UTM
func (e *EnduserMessagesHttpVirusSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.virus_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpVirusSubject
func (e *EnduserMessagesHttpVirusSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.virus_subject", e.Value, options...)
}

// EnduserMessagesHttpVirusscanDesc represents the enduser_messages.http.virusscan_desc node and implements sophos.Node
type EnduserMessagesHttpVirusscanDesc struct{ Value string }

// Get gets the enduser_messages.http.virusscan_desc value from the UTM
func (e *EnduserMessagesHttpVirusscanDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.virusscan_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpVirusscanDesc
func (e *EnduserMessagesHttpVirusscanDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.virusscan_desc", e.Value, options...)
}

// EnduserMessagesHttpVirusscanSubject represents the enduser_messages.http.virusscan_subject node and implements sophos.Node
type EnduserMessagesHttpVirusscanSubject struct{ Value string }

// Get gets the enduser_messages.http.virusscan_subject value from the UTM
func (e *EnduserMessagesHttpVirusscanSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.http.virusscan_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesHttpVirusscanSubject
func (e *EnduserMessagesHttpVirusscanSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.http.virusscan_subject", e.Value, options...)
}

// EnduserMessagesMailReleaseErrDesc represents the enduser_messages.mail.release_err_desc node and implements sophos.Node
type EnduserMessagesMailReleaseErrDesc struct{ Value string }

// Get gets the enduser_messages.mail.release_err_desc value from the UTM
func (e *EnduserMessagesMailReleaseErrDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.mail.release_err_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesMailReleaseErrDesc
func (e *EnduserMessagesMailReleaseErrDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.mail.release_err_desc", e.Value, options...)
}

// EnduserMessagesMailReleaseErrSubject represents the enduser_messages.mail.release_err_subject node and implements sophos.Node
type EnduserMessagesMailReleaseErrSubject struct{ Value string }

// Get gets the enduser_messages.mail.release_err_subject value from the UTM
func (e *EnduserMessagesMailReleaseErrSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.mail.release_err_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesMailReleaseErrSubject
func (e *EnduserMessagesMailReleaseErrSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.mail.release_err_subject", e.Value, options...)
}

// EnduserMessagesMailReleasedDesc represents the enduser_messages.mail.released_desc node and implements sophos.Node
type EnduserMessagesMailReleasedDesc struct{ Value string }

// Get gets the enduser_messages.mail.released_desc value from the UTM
func (e *EnduserMessagesMailReleasedDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.mail.released_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesMailReleasedDesc
func (e *EnduserMessagesMailReleasedDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.mail.released_desc", e.Value, options...)
}

// EnduserMessagesMailReleasedSubject represents the enduser_messages.mail.released_subject node and implements sophos.Node
type EnduserMessagesMailReleasedSubject struct{ Value string }

// Get gets the enduser_messages.mail.released_subject value from the UTM
func (e *EnduserMessagesMailReleasedSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.mail.released_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesMailReleasedSubject
func (e *EnduserMessagesMailReleasedSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.mail.released_subject", e.Value, options...)
}

// EnduserMessagesPop3BlockedDesc represents the enduser_messages.pop3.blocked_desc node and implements sophos.Node
type EnduserMessagesPop3BlockedDesc struct{ Value string }

// Get gets the enduser_messages.pop3.blocked_desc value from the UTM
func (e *EnduserMessagesPop3BlockedDesc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.pop3.blocked_desc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesPop3BlockedDesc
func (e *EnduserMessagesPop3BlockedDesc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.pop3.blocked_desc", e.Value, options...)
}

// EnduserMessagesPop3BlockedSubject represents the enduser_messages.pop3.blocked_subject node and implements sophos.Node
type EnduserMessagesPop3BlockedSubject struct{ Value string }

// Get gets the enduser_messages.pop3.blocked_subject value from the UTM
func (e *EnduserMessagesPop3BlockedSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.pop3.blocked_subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesPop3BlockedSubject
func (e *EnduserMessagesPop3BlockedSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.pop3.blocked_subject", e.Value, options...)
}

// EnduserMessagesSpxInternalErrorBody represents the enduser_messages.spx.internal_error.body node and implements sophos.Node
type EnduserMessagesSpxInternalErrorBody struct{ Value string }

// Get gets the enduser_messages.spx.internal_error.body value from the UTM
func (e *EnduserMessagesSpxInternalErrorBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.internal_error.body", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxInternalErrorBody
func (e *EnduserMessagesSpxInternalErrorBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.internal_error.body", e.Value, options...)
}

// EnduserMessagesSpxInternalErrorSubject represents the enduser_messages.spx.internal_error.subject node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSubject struct{ Value string }

// Get gets the enduser_messages.spx.internal_error.subject value from the UTM
func (e *EnduserMessagesSpxInternalErrorSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.internal_error.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxInternalErrorSubject
func (e *EnduserMessagesSpxInternalErrorSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.internal_error.subject", e.Value, options...)
}

// EnduserMessagesSpxInternalErrorSenderBody represents the enduser_messages.spx.internal_error_sender.body node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSenderBody struct{ Value string }

// Get gets the enduser_messages.spx.internal_error_sender.body value from the UTM
func (e *EnduserMessagesSpxInternalErrorSenderBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.internal_error_sender.body", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxInternalErrorSenderBody
func (e *EnduserMessagesSpxInternalErrorSenderBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.internal_error_sender.body", e.Value, options...)
}

// EnduserMessagesSpxInternalErrorSenderSubject represents the enduser_messages.spx.internal_error_sender.subject node and implements sophos.Node
type EnduserMessagesSpxInternalErrorSenderSubject struct{ Value string }

// Get gets the enduser_messages.spx.internal_error_sender.subject value from the UTM
func (e *EnduserMessagesSpxInternalErrorSenderSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.internal_error_sender.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxInternalErrorSenderSubject
func (e *EnduserMessagesSpxInternalErrorSenderSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.internal_error_sender.subject", e.Value, options...)
}

// EnduserMessagesSpxPasswordNoSpecCharsBody represents the enduser_messages.spx.password_no_spec_chars.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNoSpecCharsBody struct{ Value string }

// Get gets the enduser_messages.spx.password_no_spec_chars.body value from the UTM
func (e *EnduserMessagesSpxPasswordNoSpecCharsBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_no_spec_chars.body", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNoSpecCharsBody
func (e *EnduserMessagesSpxPasswordNoSpecCharsBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_no_spec_chars.body", e.Value, options...)
}

// EnduserMessagesSpxPasswordNoSpecCharsSubject represents the enduser_messages.spx.password_no_spec_chars.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNoSpecCharsSubject struct{ Value string }

// Get gets the enduser_messages.spx.password_no_spec_chars.subject value from the UTM
func (e *EnduserMessagesSpxPasswordNoSpecCharsSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_no_spec_chars.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNoSpecCharsSubject
func (e *EnduserMessagesSpxPasswordNoSpecCharsSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_no_spec_chars.subject", e.Value, options...)
}

// EnduserMessagesSpxPasswordNotLongEnoughBody represents the enduser_messages.spx.password_not_long_enough.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNotLongEnoughBody struct{ Value string }

// Get gets the enduser_messages.spx.password_not_long_enough.body value from the UTM
func (e *EnduserMessagesSpxPasswordNotLongEnoughBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_not_long_enough.body", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNotLongEnoughBody
func (e *EnduserMessagesSpxPasswordNotLongEnoughBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_not_long_enough.body", e.Value, options...)
}

// EnduserMessagesSpxPasswordNotLongEnoughSubject represents the enduser_messages.spx.password_not_long_enough.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNotLongEnoughSubject struct{ Value string }

// Get gets the enduser_messages.spx.password_not_long_enough.subject value from the UTM
func (e *EnduserMessagesSpxPasswordNotLongEnoughSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_not_long_enough.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNotLongEnoughSubject
func (e *EnduserMessagesSpxPasswordNotLongEnoughSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_not_long_enough.subject", e.Value, options...)
}

// EnduserMessagesSpxPasswordNotPresentedBody represents the enduser_messages.spx.password_not_presented.body node and implements sophos.Node
type EnduserMessagesSpxPasswordNotPresentedBody struct{ Value string }

// Get gets the enduser_messages.spx.password_not_presented.body value from the UTM
func (e *EnduserMessagesSpxPasswordNotPresentedBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_not_presented.body", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNotPresentedBody
func (e *EnduserMessagesSpxPasswordNotPresentedBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_not_presented.body", e.Value, options...)
}

// EnduserMessagesSpxPasswordNotPresentedSubject represents the enduser_messages.spx.password_not_presented.subject node and implements sophos.Node
type EnduserMessagesSpxPasswordNotPresentedSubject struct{ Value string }

// Get gets the enduser_messages.spx.password_not_presented.subject value from the UTM
func (e *EnduserMessagesSpxPasswordNotPresentedSubject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.password_not_presented.subject", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxPasswordNotPresentedSubject
func (e *EnduserMessagesSpxPasswordNotPresentedSubject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.password_not_presented.subject", e.Value, options...)
}

// EnduserMessagesSpxUrlNotFoundMessage represents the enduser_messages.spx.url_not_found.message node and implements sophos.Node
type EnduserMessagesSpxUrlNotFoundMessage struct{ Value string }

// Get gets the enduser_messages.spx.url_not_found.message value from the UTM
func (e *EnduserMessagesSpxUrlNotFoundMessage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.spx.url_not_found.message", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSpxUrlNotFoundMessage
func (e *EnduserMessagesSpxUrlNotFoundMessage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.spx.url_not_found.message", e.Value, options...)
}

// EnduserMessagesSquidCacheAdmin represents the enduser_messages.squid.cache_admin node and implements sophos.Node
type EnduserMessagesSquidCacheAdmin struct{ Value string }

// Get gets the enduser_messages.squid.cache_admin value from the UTM
func (e *EnduserMessagesSquidCacheAdmin) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.squid.cache_admin", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSquidCacheAdmin
func (e *EnduserMessagesSquidCacheAdmin) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.squid.cache_admin", e.Value, options...)
}

// EnduserMessagesSquidCacheAdminMessage represents the enduser_messages.squid.cache_admin_message node and implements sophos.Node
type EnduserMessagesSquidCacheAdminMessage struct{ Value string }

// Get gets the enduser_messages.squid.cache_admin_message value from the UTM
func (e *EnduserMessagesSquidCacheAdminMessage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/enduser_messages.squid.cache_admin_message", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEnduserMessagesSquidCacheAdminMessage
func (e *EnduserMessagesSquidCacheAdminMessage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/enduser_messages.squid.cache_admin_message", e.Value, options...)
}

// EppAllowedNetworks represents the epp.allowed_networks node and implements sophos.Node
type EppAllowedNetworks struct{ Value []string }

// Get gets the epp.allowed_networks value from the UTM
func (e *EppAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.allowed_networks", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppAllowedNetworks
func (e *EppAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.allowed_networks", e.Value, options...)
}

// EppCertificate represents the epp.certificate node and implements sophos.Node
type EppCertificate struct{ Value string }

// Get gets the epp.certificate value from the UTM
func (e *EppCertificate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.certificate", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppCertificate
func (e *EppCertificate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.certificate", e.Value, options...)
}

// EppCity represents the epp.city node and implements sophos.Node
type EppCity struct{ Value string }

// Get gets the epp.city value from the UTM
func (e *EppCity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.city", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppCity
func (e *EppCity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.city", e.Value, options...)
}

// EppCountry represents the epp.country node and implements sophos.Node
type EppCountry struct{ Value string }

// Get gets the epp.country value from the UTM
func (e *EppCountry) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.country", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppCountry
func (e *EppCountry) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.country", e.Value, options...)
}

// EppDefaultEndpointsGroup represents the epp.default_endpoints_group node and implements sophos.Node
type EppDefaultEndpointsGroup struct{ Value string }

// Get gets the epp.default_endpoints_group value from the UTM
func (e *EppDefaultEndpointsGroup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.default_endpoints_group", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppDefaultEndpointsGroup
func (e *EppDefaultEndpointsGroup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.default_endpoints_group", e.Value, options...)
}

// EppDevices represents the epp.devices node and implements sophos.Node
type EppDevices struct{ Value []interface{} }

// Get gets the epp.devices value from the UTM
func (e *EppDevices) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.devices", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppDevices
func (e *EppDevices) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.devices", e.Value, options...)
}

// EppEmail represents the epp.email node and implements sophos.Node
type EppEmail struct{ Value string }

// Get gets the epp.email value from the UTM
func (e *EppEmail) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.email", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppEmail
func (e *EppEmail) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.email", e.Value, options...)
}

// EppEndpoints represents the epp.endpoints node and implements sophos.Node
type EppEndpoints struct{ Value []string }

// Get gets the epp.endpoints value from the UTM
func (e *EppEndpoints) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.endpoints", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppEndpoints
func (e *EppEndpoints) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.endpoints", e.Value, options...)
}

// EppEndpointsGroups represents the epp.endpoints_groups node and implements sophos.Node
type EppEndpointsGroups struct{ Value []string }

// Get gets the epp.endpoints_groups value from the UTM
func (e *EppEndpointsGroups) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.endpoints_groups", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppEndpointsGroups
func (e *EppEndpointsGroups) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.endpoints_groups", e.Value, options...)
}

// EppExceptionsAv represents the epp.exceptions.av node and implements sophos.Node
type EppExceptionsAv struct{ Value []interface{} }

// Get gets the epp.exceptions.av value from the UTM
func (e *EppExceptionsAv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.exceptions.av", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppExceptionsAv
func (e *EppExceptionsAv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.exceptions.av", e.Value, options...)
}

// EppExceptionsDc represents the epp.exceptions.dc node and implements sophos.Node
type EppExceptionsDc struct{ Value []interface{} }

// Get gets the epp.exceptions.dc value from the UTM
func (e *EppExceptionsDc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.exceptions.dc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppExceptionsDc
func (e *EppExceptionsDc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.exceptions.dc", e.Value, options...)
}

// EppFallbackUrl represents the epp.fallback_url node and implements sophos.Node
type EppFallbackUrl struct{ Value string }

// Get gets the epp.fallback_url value from the UTM
func (e *EppFallbackUrl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.fallback_url", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppFallbackUrl
func (e *EppFallbackUrl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.fallback_url", e.Value, options...)
}

// EppMagnetPassword represents the epp.magnet_password node and implements sophos.Node
type EppMagnetPassword struct{ Value string }

// Get gets the epp.magnet_password value from the UTM
func (e *EppMagnetPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.magnet_password", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppMagnetPassword
func (e *EppMagnetPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.magnet_password", e.Value, options...)
}

// EppMagnetUsername represents the epp.magnet_username node and implements sophos.Node
type EppMagnetUsername struct{ Value string }

// Get gets the epp.magnet_username value from the UTM
func (e *EppMagnetUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.magnet_username", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppMagnetUsername
func (e *EppMagnetUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.magnet_username", e.Value, options...)
}

// EppOrganization represents the epp.organization node and implements sophos.Node
type EppOrganization struct{ Value string }

// Get gets the epp.organization value from the UTM
func (e *EppOrganization) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.organization", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppOrganization
func (e *EppOrganization) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.organization", e.Value, options...)
}

// EppParentProxyHost represents the epp.parent_proxy_host node and implements sophos.Node
type EppParentProxyHost struct{ Value string }

// Get gets the epp.parent_proxy_host value from the UTM
func (e *EppParentProxyHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.parent_proxy_host", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppParentProxyHost
func (e *EppParentProxyHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.parent_proxy_host", e.Value, options...)
}

// EppParentProxyPort represents the epp.parent_proxy_port node and implements sophos.Node
type EppParentProxyPort struct{ Value int64 }

// Get gets the epp.parent_proxy_port value from the UTM
func (e *EppParentProxyPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.parent_proxy_port", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppParentProxyPort
func (e *EppParentProxyPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.parent_proxy_port", e.Value, options...)
}

// EppParentProxyStatus represents the epp.parent_proxy_status node and implements sophos.Node
type EppParentProxyStatus struct{ Value bool }

// Get gets the epp.parent_proxy_status value from the UTM
func (e *EppParentProxyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.parent_proxy_status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppParentProxyStatus
func (e *EppParentProxyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.parent_proxy_status", e.Value, options...)
}

// EppPoliciesAv represents the epp.policies.av node and implements sophos.Node
type EppPoliciesAv struct{ Value []string }

// Get gets the epp.policies.av value from the UTM
func (e *EppPoliciesAv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.policies.av", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppPoliciesAv
func (e *EppPoliciesAv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.policies.av", e.Value, options...)
}

// EppPoliciesDc represents the epp.policies.dc node and implements sophos.Node
type EppPoliciesDc struct{ Value []string }

// Get gets the epp.policies.dc value from the UTM
func (e *EppPoliciesDc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.policies.dc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppPoliciesDc
func (e *EppPoliciesDc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.policies.dc", e.Value, options...)
}

// EppPort represents the epp.port node and implements sophos.Node
type EppPort struct{ Value int64 }

// Get gets the epp.port value from the UTM
func (e *EppPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.port", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppPort
func (e *EppPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.port", e.Value, options...)
}

// EppPrivateKey represents the epp.private_key node and implements sophos.Node
type EppPrivateKey struct{ Value string }

// Get gets the epp.private_key value from the UTM
func (e *EppPrivateKey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.private_key", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppPrivateKey
func (e *EppPrivateKey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.private_key", e.Value, options...)
}

// EppRegistrationToken represents the epp.registration_token node and implements sophos.Node
type EppRegistrationToken struct{ Value string }

// Get gets the epp.registration_token value from the UTM
func (e *EppRegistrationToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.registration_token", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppRegistrationToken
func (e *EppRegistrationToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.registration_token", e.Value, options...)
}

// EppStatusAv represents the epp.status.av node and implements sophos.Node
type EppStatusAv struct{ Value bool }

// Get gets the epp.status.av value from the UTM
func (e *EppStatusAv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.status.av", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppStatusAv
func (e *EppStatusAv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.status.av", e.Value, options...)
}

// EppStatusBroker represents the epp.status.broker node and implements sophos.Node
type EppStatusBroker struct{ Value bool }

// Get gets the epp.status.broker value from the UTM
func (e *EppStatusBroker) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.status.broker", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppStatusBroker
func (e *EppStatusBroker) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.status.broker", e.Value, options...)
}

// EppStatusDc represents the epp.status.dc node and implements sophos.Node
type EppStatusDc struct{ Value bool }

// Get gets the epp.status.dc value from the UTM
func (e *EppStatusDc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.status.dc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppStatusDc
func (e *EppStatusDc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.status.dc", e.Value, options...)
}

// EppStatusEpp represents the epp.status.epp node and implements sophos.Node
type EppStatusEpp struct{ Value bool }

// Get gets the epp.status.epp value from the UTM
func (e *EppStatusEpp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.status.epp", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppStatusEpp
func (e *EppStatusEpp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.status.epp", e.Value, options...)
}

// EppStatusWc represents the epp.status.wc node and implements sophos.Node
type EppStatusWc struct{ Value bool }

// Get gets the epp.status.wc value from the UTM
func (e *EppStatusWc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.status.wc", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppStatusWc
func (e *EppStatusWc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.status.wc", e.Value, options...)
}

// EppTamperPassword represents the epp.tamper_password node and implements sophos.Node
type EppTamperPassword struct{ Value string }

// Get gets the epp.tamper_password value from the UTM
func (e *EppTamperPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.tamper_password", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppTamperPassword
func (e *EppTamperPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.tamper_password", e.Value, options...)
}

// EppVersion represents the epp.version node and implements sophos.Node
type EppVersion struct{ Value string }

// Get gets the epp.version value from the UTM
func (e *EppVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.version", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppVersion
func (e *EppVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.version", e.Value, options...)
}

// EppWdxToken represents the epp.wdx_token node and implements sophos.Node
type EppWdxToken struct{ Value string }

// Get gets the epp.wdx_token value from the UTM
func (e *EppWdxToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/epp.wdx_token", &e.Value, options...)
}

// Update is syntactic sugar for UpdateEppWdxToken
func (e *EppWdxToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/epp.wdx_token", e.Value, options...)
}

// ExecutiveReportDailyArchive represents the executive_report.daily.archive node and implements sophos.Node
type ExecutiveReportDailyArchive struct{ Value bool }

// Get gets the executive_report.daily.archive value from the UTM
func (e *ExecutiveReportDailyArchive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.daily.archive", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportDailyArchive
func (e *ExecutiveReportDailyArchive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.daily.archive", e.Value, options...)
}

// ExecutiveReportDailyKeep represents the executive_report.daily.keep node and implements sophos.Node
type ExecutiveReportDailyKeep struct{ Value int64 }

// Get gets the executive_report.daily.keep value from the UTM
func (e *ExecutiveReportDailyKeep) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.daily.keep", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportDailyKeep
func (e *ExecutiveReportDailyKeep) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.daily.keep", e.Value, options...)
}

// ExecutiveReportDailyPdfrecipients represents the executive_report.daily.pdfrecipients node and implements sophos.Node
type ExecutiveReportDailyPdfrecipients struct{ Value []interface{} }

// Get gets the executive_report.daily.pdfrecipients value from the UTM
func (e *ExecutiveReportDailyPdfrecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.daily.pdfrecipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportDailyPdfrecipients
func (e *ExecutiveReportDailyPdfrecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.daily.pdfrecipients", e.Value, options...)
}

// ExecutiveReportDailyRecipients represents the executive_report.daily.recipients node and implements sophos.Node
type ExecutiveReportDailyRecipients struct{ Value []string }

// Get gets the executive_report.daily.recipients value from the UTM
func (e *ExecutiveReportDailyRecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.daily.recipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportDailyRecipients
func (e *ExecutiveReportDailyRecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.daily.recipients", e.Value, options...)
}

// ExecutiveReportDailyStatus represents the executive_report.daily.status node and implements sophos.Node
type ExecutiveReportDailyStatus struct{ Value bool }

// Get gets the executive_report.daily.status value from the UTM
func (e *ExecutiveReportDailyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.daily.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportDailyStatus
func (e *ExecutiveReportDailyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.daily.status", e.Value, options...)
}

// ExecutiveReportMonthlyArchive represents the executive_report.monthly.archive node and implements sophos.Node
type ExecutiveReportMonthlyArchive struct{ Value bool }

// Get gets the executive_report.monthly.archive value from the UTM
func (e *ExecutiveReportMonthlyArchive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.monthly.archive", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportMonthlyArchive
func (e *ExecutiveReportMonthlyArchive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.monthly.archive", e.Value, options...)
}

// ExecutiveReportMonthlyKeep represents the executive_report.monthly.keep node and implements sophos.Node
type ExecutiveReportMonthlyKeep struct{ Value int64 }

// Get gets the executive_report.monthly.keep value from the UTM
func (e *ExecutiveReportMonthlyKeep) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.monthly.keep", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportMonthlyKeep
func (e *ExecutiveReportMonthlyKeep) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.monthly.keep", e.Value, options...)
}

// ExecutiveReportMonthlyPdfrecipients represents the executive_report.monthly.pdfrecipients node and implements sophos.Node
type ExecutiveReportMonthlyPdfrecipients struct{ Value []interface{} }

// Get gets the executive_report.monthly.pdfrecipients value from the UTM
func (e *ExecutiveReportMonthlyPdfrecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.monthly.pdfrecipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportMonthlyPdfrecipients
func (e *ExecutiveReportMonthlyPdfrecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.monthly.pdfrecipients", e.Value, options...)
}

// ExecutiveReportMonthlyRecipients represents the executive_report.monthly.recipients node and implements sophos.Node
type ExecutiveReportMonthlyRecipients struct{ Value []interface{} }

// Get gets the executive_report.monthly.recipients value from the UTM
func (e *ExecutiveReportMonthlyRecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.monthly.recipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportMonthlyRecipients
func (e *ExecutiveReportMonthlyRecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.monthly.recipients", e.Value, options...)
}

// ExecutiveReportMonthlyStatus represents the executive_report.monthly.status node and implements sophos.Node
type ExecutiveReportMonthlyStatus struct{ Value bool }

// Get gets the executive_report.monthly.status value from the UTM
func (e *ExecutiveReportMonthlyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.monthly.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportMonthlyStatus
func (e *ExecutiveReportMonthlyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.monthly.status", e.Value, options...)
}

// ExecutiveReportWeeklyArchive represents the executive_report.weekly.archive node and implements sophos.Node
type ExecutiveReportWeeklyArchive struct{ Value bool }

// Get gets the executive_report.weekly.archive value from the UTM
func (e *ExecutiveReportWeeklyArchive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.archive", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyArchive
func (e *ExecutiveReportWeeklyArchive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.archive", e.Value, options...)
}

// ExecutiveReportWeeklyFirstDayOfWeek represents the executive_report.weekly.first_day_of_week node and implements sophos.Node
type ExecutiveReportWeeklyFirstDayOfWeek struct{ Value map[string]interface{} }

// Get gets the executive_report.weekly.first_day_of_week value from the UTM
func (e *ExecutiveReportWeeklyFirstDayOfWeek) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.first_day_of_week", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyFirstDayOfWeek
func (e *ExecutiveReportWeeklyFirstDayOfWeek) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.first_day_of_week", e.Value, options...)
}

// ExecutiveReportWeeklyKeep represents the executive_report.weekly.keep node and implements sophos.Node
type ExecutiveReportWeeklyKeep struct{ Value int64 }

// Get gets the executive_report.weekly.keep value from the UTM
func (e *ExecutiveReportWeeklyKeep) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.keep", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyKeep
func (e *ExecutiveReportWeeklyKeep) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.keep", e.Value, options...)
}

// ExecutiveReportWeeklyPdfrecipients represents the executive_report.weekly.pdfrecipients node and implements sophos.Node
type ExecutiveReportWeeklyPdfrecipients struct{ Value []interface{} }

// Get gets the executive_report.weekly.pdfrecipients value from the UTM
func (e *ExecutiveReportWeeklyPdfrecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.pdfrecipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyPdfrecipients
func (e *ExecutiveReportWeeklyPdfrecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.pdfrecipients", e.Value, options...)
}

// ExecutiveReportWeeklyRecipients represents the executive_report.weekly.recipients node and implements sophos.Node
type ExecutiveReportWeeklyRecipients struct{ Value []interface{} }

// Get gets the executive_report.weekly.recipients value from the UTM
func (e *ExecutiveReportWeeklyRecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.recipients", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyRecipients
func (e *ExecutiveReportWeeklyRecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.recipients", e.Value, options...)
}

// ExecutiveReportWeeklyStatus represents the executive_report.weekly.status node and implements sophos.Node
type ExecutiveReportWeeklyStatus struct{ Value bool }

// Get gets the executive_report.weekly.status value from the UTM
func (e *ExecutiveReportWeeklyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/executive_report.weekly.status", &e.Value, options...)
}

// Update is syntactic sugar for UpdateExecutiveReportWeeklyStatus
func (e *ExecutiveReportWeeklyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/executive_report.weekly.status", e.Value, options...)
}

// FloodProtectionIcmpDstBurst represents the flood_protection.icmp.dst_burst node and implements sophos.Node
type FloodProtectionIcmpDstBurst struct{ Value int64 }

// Get gets the flood_protection.icmp.dst_burst value from the UTM
func (f *FloodProtectionIcmpDstBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.dst_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpDstBurst
func (f *FloodProtectionIcmpDstBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.dst_burst", f.Value, options...)
}

// FloodProtectionIcmpDstExpire represents the flood_protection.icmp.dst_expire node and implements sophos.Node
type FloodProtectionIcmpDstExpire struct{ Value int64 }

// Get gets the flood_protection.icmp.dst_expire value from the UTM
func (f *FloodProtectionIcmpDstExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.dst_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpDstExpire
func (f *FloodProtectionIcmpDstExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.dst_expire", f.Value, options...)
}

// FloodProtectionIcmpDstGcInterval represents the flood_protection.icmp.dst_gc_interval node and implements sophos.Node
type FloodProtectionIcmpDstGcInterval struct{ Value int64 }

// Get gets the flood_protection.icmp.dst_gc_interval value from the UTM
func (f *FloodProtectionIcmpDstGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.dst_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpDstGcInterval
func (f *FloodProtectionIcmpDstGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.dst_gc_interval", f.Value, options...)
}

// FloodProtectionIcmpDstRate represents the flood_protection.icmp.dst_rate node and implements sophos.Node
type FloodProtectionIcmpDstRate struct{ Value int64 }

// Get gets the flood_protection.icmp.dst_rate value from the UTM
func (f *FloodProtectionIcmpDstRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.dst_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpDstRate
func (f *FloodProtectionIcmpDstRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.dst_rate", f.Value, options...)
}

// FloodProtectionIcmpLog represents the flood_protection.icmp.log node and implements sophos.Node
type FloodProtectionIcmpLog struct{ Value string }

// Get gets the flood_protection.icmp.log value from the UTM
func (f *FloodProtectionIcmpLog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.log", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpLog
func (f *FloodProtectionIcmpLog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.log", f.Value, options...)
}

// FloodProtectionIcmpLogLimitBurst represents the flood_protection.icmp.log_limit_burst node and implements sophos.Node
type FloodProtectionIcmpLogLimitBurst struct{ Value int64 }

// Get gets the flood_protection.icmp.log_limit_burst value from the UTM
func (f *FloodProtectionIcmpLogLimitBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.log_limit_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpLogLimitBurst
func (f *FloodProtectionIcmpLogLimitBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.log_limit_burst", f.Value, options...)
}

// FloodProtectionIcmpLogLimitRate represents the flood_protection.icmp.log_limit_rate node and implements sophos.Node
type FloodProtectionIcmpLogLimitRate struct{ Value int64 }

// Get gets the flood_protection.icmp.log_limit_rate value from the UTM
func (f *FloodProtectionIcmpLogLimitRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.log_limit_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpLogLimitRate
func (f *FloodProtectionIcmpLogLimitRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.log_limit_rate", f.Value, options...)
}

// FloodProtectionIcmpMode represents the flood_protection.icmp.mode node and implements sophos.Node
type FloodProtectionIcmpMode struct{ Value string }

// Get gets the flood_protection.icmp.mode value from the UTM
func (f *FloodProtectionIcmpMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.mode", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpMode
func (f *FloodProtectionIcmpMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.mode", f.Value, options...)
}

// FloodProtectionIcmpSrcBurst represents the flood_protection.icmp.src_burst node and implements sophos.Node
type FloodProtectionIcmpSrcBurst struct{ Value int64 }

// Get gets the flood_protection.icmp.src_burst value from the UTM
func (f *FloodProtectionIcmpSrcBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.src_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpSrcBurst
func (f *FloodProtectionIcmpSrcBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.src_burst", f.Value, options...)
}

// FloodProtectionIcmpSrcExpire represents the flood_protection.icmp.src_expire node and implements sophos.Node
type FloodProtectionIcmpSrcExpire struct{ Value int64 }

// Get gets the flood_protection.icmp.src_expire value from the UTM
func (f *FloodProtectionIcmpSrcExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.src_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpSrcExpire
func (f *FloodProtectionIcmpSrcExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.src_expire", f.Value, options...)
}

// FloodProtectionIcmpSrcGcInterval represents the flood_protection.icmp.src_gc_interval node and implements sophos.Node
type FloodProtectionIcmpSrcGcInterval struct{ Value int64 }

// Get gets the flood_protection.icmp.src_gc_interval value from the UTM
func (f *FloodProtectionIcmpSrcGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.src_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpSrcGcInterval
func (f *FloodProtectionIcmpSrcGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.src_gc_interval", f.Value, options...)
}

// FloodProtectionIcmpSrcRate represents the flood_protection.icmp.src_rate node and implements sophos.Node
type FloodProtectionIcmpSrcRate struct{ Value int64 }

// Get gets the flood_protection.icmp.src_rate value from the UTM
func (f *FloodProtectionIcmpSrcRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.src_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpSrcRate
func (f *FloodProtectionIcmpSrcRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.src_rate", f.Value, options...)
}

// FloodProtectionIcmpStatus represents the flood_protection.icmp.status node and implements sophos.Node
type FloodProtectionIcmpStatus struct{ Value bool }

// Get gets the flood_protection.icmp.status value from the UTM
func (f *FloodProtectionIcmpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.icmp.status", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionIcmpStatus
func (f *FloodProtectionIcmpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.icmp.status", f.Value, options...)
}

// FloodProtectionSynDstBurst represents the flood_protection.syn.dst_burst node and implements sophos.Node
type FloodProtectionSynDstBurst struct{ Value int64 }

// Get gets the flood_protection.syn.dst_burst value from the UTM
func (f *FloodProtectionSynDstBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.dst_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynDstBurst
func (f *FloodProtectionSynDstBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.dst_burst", f.Value, options...)
}

// FloodProtectionSynDstExpire represents the flood_protection.syn.dst_expire node and implements sophos.Node
type FloodProtectionSynDstExpire struct{ Value int64 }

// Get gets the flood_protection.syn.dst_expire value from the UTM
func (f *FloodProtectionSynDstExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.dst_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynDstExpire
func (f *FloodProtectionSynDstExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.dst_expire", f.Value, options...)
}

// FloodProtectionSynDstGcInterval represents the flood_protection.syn.dst_gc_interval node and implements sophos.Node
type FloodProtectionSynDstGcInterval struct{ Value int64 }

// Get gets the flood_protection.syn.dst_gc_interval value from the UTM
func (f *FloodProtectionSynDstGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.dst_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynDstGcInterval
func (f *FloodProtectionSynDstGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.dst_gc_interval", f.Value, options...)
}

// FloodProtectionSynDstRate represents the flood_protection.syn.dst_rate node and implements sophos.Node
type FloodProtectionSynDstRate struct{ Value int64 }

// Get gets the flood_protection.syn.dst_rate value from the UTM
func (f *FloodProtectionSynDstRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.dst_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynDstRate
func (f *FloodProtectionSynDstRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.dst_rate", f.Value, options...)
}

// FloodProtectionSynLog represents the flood_protection.syn.log node and implements sophos.Node
type FloodProtectionSynLog struct{ Value string }

// Get gets the flood_protection.syn.log value from the UTM
func (f *FloodProtectionSynLog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.log", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynLog
func (f *FloodProtectionSynLog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.log", f.Value, options...)
}

// FloodProtectionSynLogLimitBurst represents the flood_protection.syn.log_limit_burst node and implements sophos.Node
type FloodProtectionSynLogLimitBurst struct{ Value int64 }

// Get gets the flood_protection.syn.log_limit_burst value from the UTM
func (f *FloodProtectionSynLogLimitBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.log_limit_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynLogLimitBurst
func (f *FloodProtectionSynLogLimitBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.log_limit_burst", f.Value, options...)
}

// FloodProtectionSynLogLimitRate represents the flood_protection.syn.log_limit_rate node and implements sophos.Node
type FloodProtectionSynLogLimitRate struct{ Value int64 }

// Get gets the flood_protection.syn.log_limit_rate value from the UTM
func (f *FloodProtectionSynLogLimitRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.log_limit_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynLogLimitRate
func (f *FloodProtectionSynLogLimitRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.log_limit_rate", f.Value, options...)
}

// FloodProtectionSynMode represents the flood_protection.syn.mode node and implements sophos.Node
type FloodProtectionSynMode struct{ Value string }

// Get gets the flood_protection.syn.mode value from the UTM
func (f *FloodProtectionSynMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.mode", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynMode
func (f *FloodProtectionSynMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.mode", f.Value, options...)
}

// FloodProtectionSynSrcBurst represents the flood_protection.syn.src_burst node and implements sophos.Node
type FloodProtectionSynSrcBurst struct{ Value int64 }

// Get gets the flood_protection.syn.src_burst value from the UTM
func (f *FloodProtectionSynSrcBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.src_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynSrcBurst
func (f *FloodProtectionSynSrcBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.src_burst", f.Value, options...)
}

// FloodProtectionSynSrcExpire represents the flood_protection.syn.src_expire node and implements sophos.Node
type FloodProtectionSynSrcExpire struct{ Value int64 }

// Get gets the flood_protection.syn.src_expire value from the UTM
func (f *FloodProtectionSynSrcExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.src_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynSrcExpire
func (f *FloodProtectionSynSrcExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.src_expire", f.Value, options...)
}

// FloodProtectionSynSrcGcInterval represents the flood_protection.syn.src_gc_interval node and implements sophos.Node
type FloodProtectionSynSrcGcInterval struct{ Value int64 }

// Get gets the flood_protection.syn.src_gc_interval value from the UTM
func (f *FloodProtectionSynSrcGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.src_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynSrcGcInterval
func (f *FloodProtectionSynSrcGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.src_gc_interval", f.Value, options...)
}

// FloodProtectionSynSrcRate represents the flood_protection.syn.src_rate node and implements sophos.Node
type FloodProtectionSynSrcRate struct{ Value int64 }

// Get gets the flood_protection.syn.src_rate value from the UTM
func (f *FloodProtectionSynSrcRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.src_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynSrcRate
func (f *FloodProtectionSynSrcRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.src_rate", f.Value, options...)
}

// FloodProtectionSynStatus represents the flood_protection.syn.status node and implements sophos.Node
type FloodProtectionSynStatus struct{ Value bool }

// Get gets the flood_protection.syn.status value from the UTM
func (f *FloodProtectionSynStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.syn.status", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionSynStatus
func (f *FloodProtectionSynStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.syn.status", f.Value, options...)
}

// FloodProtectionUdpDstBurst represents the flood_protection.udp.dst_burst node and implements sophos.Node
type FloodProtectionUdpDstBurst struct{ Value int64 }

// Get gets the flood_protection.udp.dst_burst value from the UTM
func (f *FloodProtectionUdpDstBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.dst_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpDstBurst
func (f *FloodProtectionUdpDstBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.dst_burst", f.Value, options...)
}

// FloodProtectionUdpDstExpire represents the flood_protection.udp.dst_expire node and implements sophos.Node
type FloodProtectionUdpDstExpire struct{ Value int64 }

// Get gets the flood_protection.udp.dst_expire value from the UTM
func (f *FloodProtectionUdpDstExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.dst_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpDstExpire
func (f *FloodProtectionUdpDstExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.dst_expire", f.Value, options...)
}

// FloodProtectionUdpDstGcInterval represents the flood_protection.udp.dst_gc_interval node and implements sophos.Node
type FloodProtectionUdpDstGcInterval struct{ Value int64 }

// Get gets the flood_protection.udp.dst_gc_interval value from the UTM
func (f *FloodProtectionUdpDstGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.dst_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpDstGcInterval
func (f *FloodProtectionUdpDstGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.dst_gc_interval", f.Value, options...)
}

// FloodProtectionUdpDstRate represents the flood_protection.udp.dst_rate node and implements sophos.Node
type FloodProtectionUdpDstRate struct{ Value int64 }

// Get gets the flood_protection.udp.dst_rate value from the UTM
func (f *FloodProtectionUdpDstRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.dst_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpDstRate
func (f *FloodProtectionUdpDstRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.dst_rate", f.Value, options...)
}

// FloodProtectionUdpLog represents the flood_protection.udp.log node and implements sophos.Node
type FloodProtectionUdpLog struct{ Value string }

// Get gets the flood_protection.udp.log value from the UTM
func (f *FloodProtectionUdpLog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.log", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpLog
func (f *FloodProtectionUdpLog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.log", f.Value, options...)
}

// FloodProtectionUdpLogLimitBurst represents the flood_protection.udp.log_limit_burst node and implements sophos.Node
type FloodProtectionUdpLogLimitBurst struct{ Value int64 }

// Get gets the flood_protection.udp.log_limit_burst value from the UTM
func (f *FloodProtectionUdpLogLimitBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.log_limit_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpLogLimitBurst
func (f *FloodProtectionUdpLogLimitBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.log_limit_burst", f.Value, options...)
}

// FloodProtectionUdpLogLimitRate represents the flood_protection.udp.log_limit_rate node and implements sophos.Node
type FloodProtectionUdpLogLimitRate struct{ Value int64 }

// Get gets the flood_protection.udp.log_limit_rate value from the UTM
func (f *FloodProtectionUdpLogLimitRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.log_limit_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpLogLimitRate
func (f *FloodProtectionUdpLogLimitRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.log_limit_rate", f.Value, options...)
}

// FloodProtectionUdpMode represents the flood_protection.udp.mode node and implements sophos.Node
type FloodProtectionUdpMode struct{ Value string }

// Get gets the flood_protection.udp.mode value from the UTM
func (f *FloodProtectionUdpMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.mode", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpMode
func (f *FloodProtectionUdpMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.mode", f.Value, options...)
}

// FloodProtectionUdpSrcBurst represents the flood_protection.udp.src_burst node and implements sophos.Node
type FloodProtectionUdpSrcBurst struct{ Value int64 }

// Get gets the flood_protection.udp.src_burst value from the UTM
func (f *FloodProtectionUdpSrcBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.src_burst", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpSrcBurst
func (f *FloodProtectionUdpSrcBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.src_burst", f.Value, options...)
}

// FloodProtectionUdpSrcExpire represents the flood_protection.udp.src_expire node and implements sophos.Node
type FloodProtectionUdpSrcExpire struct{ Value int64 }

// Get gets the flood_protection.udp.src_expire value from the UTM
func (f *FloodProtectionUdpSrcExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.src_expire", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpSrcExpire
func (f *FloodProtectionUdpSrcExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.src_expire", f.Value, options...)
}

// FloodProtectionUdpSrcGcInterval represents the flood_protection.udp.src_gc_interval node and implements sophos.Node
type FloodProtectionUdpSrcGcInterval struct{ Value int64 }

// Get gets the flood_protection.udp.src_gc_interval value from the UTM
func (f *FloodProtectionUdpSrcGcInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.src_gc_interval", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpSrcGcInterval
func (f *FloodProtectionUdpSrcGcInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.src_gc_interval", f.Value, options...)
}

// FloodProtectionUdpSrcRate represents the flood_protection.udp.src_rate node and implements sophos.Node
type FloodProtectionUdpSrcRate struct{ Value int64 }

// Get gets the flood_protection.udp.src_rate value from the UTM
func (f *FloodProtectionUdpSrcRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.src_rate", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpSrcRate
func (f *FloodProtectionUdpSrcRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.src_rate", f.Value, options...)
}

// FloodProtectionUdpStatus represents the flood_protection.udp.status node and implements sophos.Node
type FloodProtectionUdpStatus struct{ Value bool }

// Get gets the flood_protection.udp.status value from the UTM
func (f *FloodProtectionUdpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/flood_protection.udp.status", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFloodProtectionUdpStatus
func (f *FloodProtectionUdpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/flood_protection.udp.status", f.Value, options...)
}

// FtpAllowedClients represents the ftp.allowed_clients node and implements sophos.Node
type FtpAllowedClients struct{ Value []interface{} }

// Get gets the ftp.allowed_clients value from the UTM
func (f *FtpAllowedClients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.allowed_clients", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpAllowedClients
func (f *FtpAllowedClients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.allowed_clients", f.Value, options...)
}

// FtpAllowedServers represents the ftp.allowed_servers node and implements sophos.Node
type FtpAllowedServers struct{ Value []string }

// Get gets the ftp.allowed_servers value from the UTM
func (f *FtpAllowedServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.allowed_servers", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpAllowedServers
func (f *FtpAllowedServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.allowed_servers", f.Value, options...)
}

// FtpCffAv represents the ftp.cff_av node and implements sophos.Node
type FtpCffAv struct{ Value bool }

// Get gets the ftp.cff_av value from the UTM
func (f *FtpCffAv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.cff_av", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpCffAv
func (f *FtpCffAv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.cff_av", f.Value, options...)
}

// FtpCffAvEngines represents the ftp.cff_av_engines node and implements sophos.Node
type FtpCffAvEngines struct{ Value string }

// Get gets the ftp.cff_av_engines value from the UTM
func (f *FtpCffAvEngines) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.cff_av_engines", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpCffAvEngines
func (f *FtpCffAvEngines) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.cff_av_engines", f.Value, options...)
}

// FtpCffFileExtensions represents the ftp.cff_file_extensions node and implements sophos.Node
type FtpCffFileExtensions struct{ Value []interface{} }

// Get gets the ftp.cff_file_extensions value from the UTM
func (f *FtpCffFileExtensions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.cff_file_extensions", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpCffFileExtensions
func (f *FtpCffFileExtensions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.cff_file_extensions", f.Value, options...)
}

// FtpExceptions represents the ftp.exceptions node and implements sophos.Node
type FtpExceptions struct{ Value []interface{} }

// Get gets the ftp.exceptions value from the UTM
func (f *FtpExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.exceptions", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpExceptions
func (f *FtpExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.exceptions", f.Value, options...)
}

// FtpMaxFileSize represents the ftp.max_file_size node and implements sophos.Node
type FtpMaxFileSize struct{ Value int64 }

// Get gets the ftp.max_file_size value from the UTM
func (f *FtpMaxFileSize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.max_file_size", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpMaxFileSize
func (f *FtpMaxFileSize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.max_file_size", f.Value, options...)
}

// FtpMsWinMode represents the ftp.ms_win_mode node and implements sophos.Node
type FtpMsWinMode struct{ Value bool }

// Get gets the ftp.ms_win_mode value from the UTM
func (f *FtpMsWinMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.ms_win_mode", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpMsWinMode
func (f *FtpMsWinMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.ms_win_mode", f.Value, options...)
}

// FtpOperationMode represents the ftp.operation_mode node and implements sophos.Node
type FtpOperationMode struct{ Value string }

// Get gets the ftp.operation_mode value from the UTM
func (f *FtpOperationMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.operation_mode", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpOperationMode
func (f *FtpOperationMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.operation_mode", f.Value, options...)
}

// FtpRestrictedServers represents the ftp.restricted_servers node and implements sophos.Node
type FtpRestrictedServers struct{ Value []string }

// Get gets the ftp.restricted_servers value from the UTM
func (f *FtpRestrictedServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.restricted_servers", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpRestrictedServers
func (f *FtpRestrictedServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.restricted_servers", f.Value, options...)
}

// FtpStatus represents the ftp.status node and implements sophos.Node
type FtpStatus struct{ Value bool }

// Get gets the ftp.status value from the UTM
func (f *FtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.status", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpStatus
func (f *FtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.status", f.Value, options...)
}

// FtpTransparentSkip represents the ftp.transparent_skip node and implements sophos.Node
type FtpTransparentSkip struct{ Value []interface{} }

// Get gets the ftp.transparent_skip value from the UTM
func (f *FtpTransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.transparent_skip", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpTransparentSkip
func (f *FtpTransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.transparent_skip", f.Value, options...)
}

// FtpTransparentSkipAutoPf represents the ftp.transparent_skip_auto_pf node and implements sophos.Node
type FtpTransparentSkipAutoPf struct{ Value bool }

// Get gets the ftp.transparent_skip_auto_pf value from the UTM
func (f *FtpTransparentSkipAutoPf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ftp.transparent_skip_auto_pf", &f.Value, options...)
}

// Update is syntactic sugar for UpdateFtpTransparentSkipAutoPf
func (f *FtpTransparentSkipAutoPf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ftp.transparent_skip_auto_pf", f.Value, options...)
}

// GenericProxyRules represents the generic_proxy.rules node and implements sophos.Node
type GenericProxyRules struct{ Value []interface{} }

// Get gets the generic_proxy.rules value from the UTM
func (g *GenericProxyRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/generic_proxy.rules", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGenericProxyRules
func (g *GenericProxyRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/generic_proxy.rules", g.Value, options...)
}

// GeoipCountriesDst represents the geoip.countries_dst node and implements sophos.Node
type GeoipCountriesDst struct{ Value []string }

// Get gets the geoip.countries_dst value from the UTM
func (g *GeoipCountriesDst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/geoip.countries_dst", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGeoipCountriesDst
func (g *GeoipCountriesDst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/geoip.countries_dst", g.Value, options...)
}

// GeoipCountriesSrc represents the geoip.countries_src node and implements sophos.Node
type GeoipCountriesSrc struct{ Value []string }

// Get gets the geoip.countries_src value from the UTM
func (g *GeoipCountriesSrc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/geoip.countries_src", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGeoipCountriesSrc
func (g *GeoipCountriesSrc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/geoip.countries_src", g.Value, options...)
}

// GeoipExceptions represents the geoip.exceptions node and implements sophos.Node
type GeoipExceptions struct{ Value []interface{} }

// Get gets the geoip.exceptions value from the UTM
func (g *GeoipExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/geoip.exceptions", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGeoipExceptions
func (g *GeoipExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/geoip.exceptions", g.Value, options...)
}

// GeoipLog represents the geoip.log node and implements sophos.Node
type GeoipLog struct{ Value string }

// Get gets the geoip.log value from the UTM
func (g *GeoipLog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/geoip.log", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGeoipLog
func (g *GeoipLog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/geoip.log", g.Value, options...)
}

// GeoipStatus represents the geoip.status node and implements sophos.Node
type GeoipStatus struct{ Value bool }

// Get gets the geoip.status value from the UTM
func (g *GeoipStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/geoip.status", &g.Value, options...)
}

// Update is syntactic sugar for UpdateGeoipStatus
func (g *GeoipStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/geoip.status", g.Value, options...)
}

// H323AllowedNetworks represents the h323.allowed_networks node and implements sophos.Node
type H323AllowedNetworks struct{ Value []interface{} }

// Get gets the h323.allowed_networks value from the UTM
func (h *H323AllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/h323.allowed_networks", &h.Value, options...)
}

// Update is syntactic sugar for UpdateH323AllowedNetworks
func (h *H323AllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/h323.allowed_networks", h.Value, options...)
}

// H323LogRelated represents the h323.log_related node and implements sophos.Node
type H323LogRelated struct{ Value bool }

// Get gets the h323.log_related value from the UTM
func (h *H323LogRelated) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/h323.log_related", &h.Value, options...)
}

// Update is syntactic sugar for UpdateH323LogRelated
func (h *H323LogRelated) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/h323.log_related", h.Value, options...)
}

// H323Servers represents the h323.servers node and implements sophos.Node
type H323Servers struct{ Value []interface{} }

// Get gets the h323.servers value from the UTM
func (h *H323Servers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/h323.servers", &h.Value, options...)
}

// Update is syntactic sugar for UpdateH323Servers
func (h *H323Servers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/h323.servers", h.Value, options...)
}

// H323Status represents the h323.status node and implements sophos.Node
type H323Status struct{ Value bool }

// Get gets the h323.status value from the UTM
func (h *H323Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/h323.status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateH323Status
func (h *H323Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/h323.status", h.Value, options...)
}

// HaAdvancedAutojoin represents the ha.advanced.autojoin node and implements sophos.Node
type HaAdvancedAutojoin struct{ Value bool }

// Get gets the ha.advanced.autojoin value from the UTM
func (h *HaAdvancedAutojoin) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.autojoin", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedAutojoin
func (h *HaAdvancedAutojoin) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.autojoin", h.Value, options...)
}

// HaAdvancedColdRollback represents the ha.advanced.cold_rollback node and implements sophos.Node
type HaAdvancedColdRollback struct{ Value bool }

// Get gets the ha.advanced.cold_rollback value from the UTM
func (h *HaAdvancedColdRollback) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.cold_rollback", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedColdRollback
func (h *HaAdvancedColdRollback) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.cold_rollback", h.Value, options...)
}

// HaAdvancedHttpPersistenceTime represents the ha.advanced.http_persistence_time node and implements sophos.Node
type HaAdvancedHttpPersistenceTime struct{ Value map[string]interface{} }

// Get gets the ha.advanced.http_persistence_time value from the UTM
func (h *HaAdvancedHttpPersistenceTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.http_persistence_time", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedHttpPersistenceTime
func (h *HaAdvancedHttpPersistenceTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.http_persistence_time", h.Value, options...)
}

// HaAdvancedLoadTakeover represents the ha.advanced.load_takeover node and implements sophos.Node
type HaAdvancedLoadTakeover struct{ Value int64 }

// Get gets the ha.advanced.load_takeover value from the UTM
func (h *HaAdvancedLoadTakeover) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.load_takeover", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedLoadTakeover
func (h *HaAdvancedLoadTakeover) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.load_takeover", h.Value, options...)
}

// HaAdvancedLoadWarn represents the ha.advanced.load_warn node and implements sophos.Node
type HaAdvancedLoadWarn struct{ Value int64 }

// Get gets the ha.advanced.load_warn value from the UTM
func (h *HaAdvancedLoadWarn) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.load_warn", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedLoadWarn
func (h *HaAdvancedLoadWarn) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.load_warn", h.Value, options...)
}

// HaAdvancedMaxNodes represents the ha.advanced.max_nodes node and implements sophos.Node
type HaAdvancedMaxNodes struct{ Value int64 }

// Get gets the ha.advanced.max_nodes value from the UTM
func (h *HaAdvancedMaxNodes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.max_nodes", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedMaxNodes
func (h *HaAdvancedMaxNodes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.max_nodes", h.Value, options...)
}

// HaAdvancedMtu represents the ha.advanced.mtu node and implements sophos.Node
type HaAdvancedMtu struct{ Value string }

// Get gets the ha.advanced.mtu value from the UTM
func (h *HaAdvancedMtu) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.mtu", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedMtu
func (h *HaAdvancedMtu) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.mtu", h.Value, options...)
}

// HaAdvancedNetconsole represents the ha.advanced.netconsole node and implements sophos.Node
type HaAdvancedNetconsole struct{ Value bool }

// Get gets the ha.advanced.netconsole value from the UTM
func (h *HaAdvancedNetconsole) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.netconsole", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedNetconsole
func (h *HaAdvancedNetconsole) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.netconsole", h.Value, options...)
}

// HaAdvancedPreempt represents the ha.advanced.preempt node and implements sophos.Node
type HaAdvancedPreempt struct{ Value string }

// Get gets the ha.advanced.preempt value from the UTM
func (h *HaAdvancedPreempt) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.preempt", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedPreempt
func (h *HaAdvancedPreempt) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.preempt", h.Value, options...)
}

// HaAdvancedUniqueId represents the ha.advanced.unique_id node and implements sophos.Node
type HaAdvancedUniqueId struct{ Value int64 }

// Get gets the ha.advanced.unique_id value from the UTM
func (h *HaAdvancedUniqueId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.unique_id", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedUniqueId
func (h *HaAdvancedUniqueId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.unique_id", h.Value, options...)
}

// HaAdvancedVirtualMac represents the ha.advanced.virtual_mac node and implements sophos.Node
type HaAdvancedVirtualMac struct{ Value bool }

// Get gets the ha.advanced.virtual_mac value from the UTM
func (h *HaAdvancedVirtualMac) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.advanced.virtual_mac", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAdvancedVirtualMac
func (h *HaAdvancedVirtualMac) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.advanced.virtual_mac", h.Value, options...)
}

// HaAwsCloudwatchProfile represents the ha.aws.cloudwatch.profile node and implements sophos.Node
type HaAwsCloudwatchProfile struct{ Value string }

// Get gets the ha.aws.cloudwatch.profile value from the UTM
func (h *HaAwsCloudwatchProfile) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.cloudwatch.profile", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsCloudwatchProfile
func (h *HaAwsCloudwatchProfile) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.cloudwatch.profile", h.Value, options...)
}

// HaAwsCloudwatchStatus represents the ha.aws.cloudwatch.status node and implements sophos.Node
type HaAwsCloudwatchStatus struct{ Value bool }

// Get gets the ha.aws.cloudwatch.status value from the UTM
func (h *HaAwsCloudwatchStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.cloudwatch.status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsCloudwatchStatus
func (h *HaAwsCloudwatchStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.cloudwatch.status", h.Value, options...)
}

// HaAwsConfdBackup represents the ha.aws.confd.backup node and implements sophos.Node
type HaAwsConfdBackup struct{ Value bool }

// Get gets the ha.aws.confd.backup value from the UTM
func (h *HaAwsConfdBackup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.confd.backup", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsConfdBackup
func (h *HaAwsConfdBackup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.confd.backup", h.Value, options...)
}

// HaAwsConfdBackupInterval represents the ha.aws.confd.backup_interval node and implements sophos.Node
type HaAwsConfdBackupInterval struct{ Value int64 }

// Get gets the ha.aws.confd.backup_interval value from the UTM
func (h *HaAwsConfdBackupInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.confd.backup_interval", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsConfdBackupInterval
func (h *HaAwsConfdBackupInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.confd.backup_interval", h.Value, options...)
}

// HaAwsConfdRestore represents the ha.aws.confd.restore node and implements sophos.Node
type HaAwsConfdRestore struct{ Value bool }

// Get gets the ha.aws.confd.restore value from the UTM
func (h *HaAwsConfdRestore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.confd.restore", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsConfdRestore
func (h *HaAwsConfdRestore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.confd.restore", h.Value, options...)
}

// HaAwsConfdRestoreDone represents the ha.aws.confd.restore_done node and implements sophos.Node
type HaAwsConfdRestoreDone struct{ Value bool }

// Get gets the ha.aws.confd.restore_done value from the UTM
func (h *HaAwsConfdRestoreDone) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.confd.restore_done", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsConfdRestoreDone
func (h *HaAwsConfdRestoreDone) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.confd.restore_done", h.Value, options...)
}

// HaAwsElasticIp represents the ha.aws.elastic_ip node and implements sophos.Node
type HaAwsElasticIp struct{ Value string }

// Get gets the ha.aws.elastic_ip value from the UTM
func (h *HaAwsElasticIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.elastic_ip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsElasticIp
func (h *HaAwsElasticIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.elastic_ip", h.Value, options...)
}

// HaAwsPostgresArchiveTimeout represents the ha.aws.postgres.archive_timeout node and implements sophos.Node
type HaAwsPostgresArchiveTimeout struct{ Value int64 }

// Get gets the ha.aws.postgres.archive_timeout value from the UTM
func (h *HaAwsPostgresArchiveTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.postgres.archive_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsPostgresArchiveTimeout
func (h *HaAwsPostgresArchiveTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.postgres.archive_timeout", h.Value, options...)
}

// HaAwsPostgresBackup represents the ha.aws.postgres.backup node and implements sophos.Node
type HaAwsPostgresBackup struct{ Value bool }

// Get gets the ha.aws.postgres.backup value from the UTM
func (h *HaAwsPostgresBackup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.postgres.backup", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsPostgresBackup
func (h *HaAwsPostgresBackup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.postgres.backup", h.Value, options...)
}

// HaAwsPostgresBaseBackupInterval represents the ha.aws.postgres.base_backup_interval node and implements sophos.Node
type HaAwsPostgresBaseBackupInterval struct{ Value int64 }

// Get gets the ha.aws.postgres.base_backup_interval value from the UTM
func (h *HaAwsPostgresBaseBackupInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.postgres.base_backup_interval", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsPostgresBaseBackupInterval
func (h *HaAwsPostgresBaseBackupInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.postgres.base_backup_interval", h.Value, options...)
}

// HaAwsPostgresRestore represents the ha.aws.postgres.restore node and implements sophos.Node
type HaAwsPostgresRestore struct{ Value bool }

// Get gets the ha.aws.postgres.restore value from the UTM
func (h *HaAwsPostgresRestore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.postgres.restore", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsPostgresRestore
func (h *HaAwsPostgresRestore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.postgres.restore", h.Value, options...)
}

// HaAwsS3Bucket represents the ha.aws.s3_bucket node and implements sophos.Node
type HaAwsS3Bucket struct{ Value string }

// Get gets the ha.aws.s3_bucket value from the UTM
func (h *HaAwsS3Bucket) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.s3_bucket", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsS3Bucket
func (h *HaAwsS3Bucket) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.s3_bucket", h.Value, options...)
}

// HaAwsStackName represents the ha.aws.stack_name node and implements sophos.Node
type HaAwsStackName struct{ Value string }

// Get gets the ha.aws.stack_name value from the UTM
func (h *HaAwsStackName) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.stack_name", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsStackName
func (h *HaAwsStackName) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.stack_name", h.Value, options...)
}

// HaAwsSyslogBackup represents the ha.aws.syslog.backup node and implements sophos.Node
type HaAwsSyslogBackup struct{ Value bool }

// Get gets the ha.aws.syslog.backup value from the UTM
func (h *HaAwsSyslogBackup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.syslog.backup", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsSyslogBackup
func (h *HaAwsSyslogBackup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.syslog.backup", h.Value, options...)
}

// HaAwsSyslogRestore represents the ha.aws.syslog.restore node and implements sophos.Node
type HaAwsSyslogRestore struct{ Value bool }

// Get gets the ha.aws.syslog.restore value from the UTM
func (h *HaAwsSyslogRestore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.syslog.restore", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsSyslogRestore
func (h *HaAwsSyslogRestore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.syslog.restore", h.Value, options...)
}

// HaAwsSyslogRestorePeriod represents the ha.aws.syslog.restore_period node and implements sophos.Node
type HaAwsSyslogRestorePeriod struct{ Value int64 }

// Get gets the ha.aws.syslog.restore_period value from the UTM
func (h *HaAwsSyslogRestorePeriod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.syslog.restore_period", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsSyslogRestorePeriod
func (h *HaAwsSyslogRestorePeriod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.syslog.restore_period", h.Value, options...)
}

// HaAwsTrustedNetwork represents the ha.aws.trusted_network node and implements sophos.Node
type HaAwsTrustedNetwork struct{ Value string }

// Get gets the ha.aws.trusted_network value from the UTM
func (h *HaAwsTrustedNetwork) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.aws.trusted_network", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaAwsTrustedNetwork
func (h *HaAwsTrustedNetwork) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.aws.trusted_network", h.Value, options...)
}

// HaClusterFtp represents the ha.cluster.ftp node and implements sophos.Node
type HaClusterFtp struct{ Value []interface{} }

// Get gets the ha.cluster.ftp value from the UTM
func (h *HaClusterFtp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.ftp", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterFtp
func (h *HaClusterFtp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.ftp", h.Value, options...)
}

// HaClusterHttp represents the ha.cluster.http node and implements sophos.Node
type HaClusterHttp struct{ Value []interface{} }

// Get gets the ha.cluster.http value from the UTM
func (h *HaClusterHttp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.http", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterHttp
func (h *HaClusterHttp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.http", h.Value, options...)
}

// HaClusterIpsec represents the ha.cluster.ipsec node and implements sophos.Node
type HaClusterIpsec struct{ Value []interface{} }

// Get gets the ha.cluster.ipsec value from the UTM
func (h *HaClusterIpsec) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.ipsec", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterIpsec
func (h *HaClusterIpsec) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.ipsec", h.Value, options...)
}

// HaClusterPop3 represents the ha.cluster.pop3 node and implements sophos.Node
type HaClusterPop3 struct{ Value []interface{} }

// Get gets the ha.cluster.pop3 value from the UTM
func (h *HaClusterPop3) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.pop3", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterPop3
func (h *HaClusterPop3) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.pop3", h.Value, options...)
}

// HaClusterSmtp represents the ha.cluster.smtp node and implements sophos.Node
type HaClusterSmtp struct{ Value []interface{} }

// Get gets the ha.cluster.smtp value from the UTM
func (h *HaClusterSmtp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.smtp", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterSmtp
func (h *HaClusterSmtp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.smtp", h.Value, options...)
}

// HaClusterSnort represents the ha.cluster.snort node and implements sophos.Node
type HaClusterSnort struct{ Value []interface{} }

// Get gets the ha.cluster.snort value from the UTM
func (h *HaClusterSnort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.snort", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterSnort
func (h *HaClusterSnort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.snort", h.Value, options...)
}

// HaClusterWaf represents the ha.cluster.waf node and implements sophos.Node
type HaClusterWaf struct{ Value []interface{} }

// Get gets the ha.cluster.waf value from the UTM
func (h *HaClusterWaf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.cluster.waf", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaClusterWaf
func (h *HaClusterWaf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.cluster.waf", h.Value, options...)
}

// HaDeviceName represents the ha.device_name node and implements sophos.Node
type HaDeviceName struct{ Value string }

// Get gets the ha.device_name value from the UTM
func (h *HaDeviceName) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.device_name", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaDeviceName
func (h *HaDeviceName) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.device_name", h.Value, options...)
}

// HaItfhw represents the ha.itfhw node and implements sophos.Node
type HaItfhw struct{ Value string }

// Get gets the ha.itfhw value from the UTM
func (h *HaItfhw) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.itfhw", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaItfhw
func (h *HaItfhw) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.itfhw", h.Value, options...)
}

// HaItfhwBackup represents the ha.itfhw_backup node and implements sophos.Node
type HaItfhwBackup struct{ Value string }

// Get gets the ha.itfhw_backup value from the UTM
func (h *HaItfhwBackup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.itfhw_backup", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaItfhwBackup
func (h *HaItfhwBackup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.itfhw_backup", h.Value, options...)
}

// HaMasterIp represents the ha.master_ip node and implements sophos.Node
type HaMasterIp struct{ Value string }

// Get gets the ha.master_ip value from the UTM
func (h *HaMasterIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.master_ip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaMasterIp
func (h *HaMasterIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.master_ip", h.Value, options...)
}

// HaMode represents the ha.mode node and implements sophos.Node
type HaMode struct{ Value string }

// Get gets the ha.mode value from the UTM
func (h *HaMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.mode", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaMode
func (h *HaMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.mode", h.Value, options...)
}

// HaNodeId represents the ha.node_id node and implements sophos.Node
type HaNodeId struct{ Value map[string]interface{} }

// Get gets the ha.node_id value from the UTM
func (h *HaNodeId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.node_id", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaNodeId
func (h *HaNodeId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.node_id", h.Value, options...)
}

// HaPassword represents the ha.password node and implements sophos.Node
type HaPassword struct{ Value string }

// Get gets the ha.password value from the UTM
func (h *HaPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.password", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaPassword
func (h *HaPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.password", h.Value, options...)
}

// HaPostgresSecret represents the ha.postgres_secret node and implements sophos.Node
type HaPostgresSecret struct{ Value string }

// Get gets the ha.postgres_secret value from the UTM
func (h *HaPostgresSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.postgres_secret", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaPostgresSecret
func (h *HaPostgresSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.postgres_secret", h.Value, options...)
}

// HaSlaveIp represents the ha.slave_ip node and implements sophos.Node
type HaSlaveIp struct{ Value string }

// Get gets the ha.slave_ip value from the UTM
func (h *HaSlaveIp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.slave_ip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSlaveIp
func (h *HaSlaveIp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.slave_ip", h.Value, options...)
}

// HaStatus represents the ha.status node and implements sophos.Node
type HaStatus struct{ Value string }

// Get gets the ha.status value from the UTM
func (h *HaStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaStatus
func (h *HaStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.status", h.Value, options...)
}

// HaSyncConntrack represents the ha.sync.conntrack node and implements sophos.Node
type HaSyncConntrack struct{ Value bool }

// Get gets the ha.sync.conntrack value from the UTM
func (h *HaSyncConntrack) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.sync.conntrack", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSyncConntrack
func (h *HaSyncConntrack) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.sync.conntrack", h.Value, options...)
}

// HaSyncDatabase represents the ha.sync.database node and implements sophos.Node
type HaSyncDatabase struct{ Value bool }

// Get gets the ha.sync.database value from the UTM
func (h *HaSyncDatabase) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.sync.database", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSyncDatabase
func (h *HaSyncDatabase) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.sync.database", h.Value, options...)
}

// HaSyncFiles represents the ha.sync.files node and implements sophos.Node
type HaSyncFiles struct{ Value bool }

// Get gets the ha.sync.files value from the UTM
func (h *HaSyncFiles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.sync.files", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSyncFiles
func (h *HaSyncFiles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.sync.files", h.Value, options...)
}

// HaSyncIpsec represents the ha.sync.ipsec node and implements sophos.Node
type HaSyncIpsec struct{ Value bool }

// Get gets the ha.sync.ipsec value from the UTM
func (h *HaSyncIpsec) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.sync.ipsec", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSyncIpsec
func (h *HaSyncIpsec) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.sync.ipsec", h.Value, options...)
}

// HaSyncSyslog represents the ha.sync.syslog node and implements sophos.Node
type HaSyncSyslog struct{ Value bool }

// Get gets the ha.sync.syslog value from the UTM
func (h *HaSyncSyslog) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.sync.syslog", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaSyncSyslog
func (h *HaSyncSyslog) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.sync.syslog", h.Value, options...)
}

// HaTimesDeadTime represents the ha.times.dead_time node and implements sophos.Node
type HaTimesDeadTime struct{ Value int64 }

// Get gets the ha.times.dead_time value from the UTM
func (h *HaTimesDeadTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.times.dead_time", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaTimesDeadTime
func (h *HaTimesDeadTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.times.dead_time", h.Value, options...)
}

// HaTimesLoadTime represents the ha.times.load_time node and implements sophos.Node
type HaTimesLoadTime struct{ Value int64 }

// Get gets the ha.times.load_time value from the UTM
func (h *HaTimesLoadTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ha.times.load_time", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHaTimesLoadTime
func (h *HaTimesLoadTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ha.times.load_time", h.Value, options...)
}

// HotspotCert represents the hotspot.cert node and implements sophos.Node
type HotspotCert struct{ Value string }

// Get gets the hotspot.cert value from the UTM
func (h *HotspotCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/hotspot.cert", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHotspotCert
func (h *HotspotCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/hotspot.cert", h.Value, options...)
}

// HotspotDeleteDays represents the hotspot.delete_days node and implements sophos.Node
type HotspotDeleteDays struct{ Value int64 }

// Get gets the hotspot.delete_days value from the UTM
func (h *HotspotDeleteDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/hotspot.delete_days", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHotspotDeleteDays
func (h *HotspotDeleteDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/hotspot.delete_days", h.Value, options...)
}

// HotspotSslPortal represents the hotspot.ssl_portal node and implements sophos.Node
type HotspotSslPortal struct{ Value bool }

// Get gets the hotspot.ssl_portal value from the UTM
func (h *HotspotSslPortal) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/hotspot.ssl_portal", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHotspotSslPortal
func (h *HotspotSslPortal) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/hotspot.ssl_portal", h.Value, options...)
}

// HotspotStatus represents the hotspot.status node and implements sophos.Node
type HotspotStatus struct{ Value bool }

// Get gets the hotspot.status value from the UTM
func (h *HotspotStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/hotspot.status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHotspotStatus
func (h *HotspotStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/hotspot.status", h.Value, options...)
}

// HotspotTransparentSkip represents the hotspot.transparent_skip node and implements sophos.Node
type HotspotTransparentSkip struct{ Value []interface{} }

// Get gets the hotspot.transparent_skip value from the UTM
func (h *HotspotTransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/hotspot.transparent_skip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHotspotTransparentSkip
func (h *HotspotTransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/hotspot.transparent_skip", h.Value, options...)
}

// HttpAdSsoInterfaces represents the http.ad_sso_interfaces node and implements sophos.Node
type HttpAdSsoInterfaces struct{ Value []interface{} }

// Get gets the http.ad_sso_interfaces value from the UTM
func (h *HttpAdSsoInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.ad_sso_interfaces", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAdSsoInterfaces
func (h *HttpAdSsoInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.ad_sso_interfaces", h.Value, options...)
}

// HttpAdssoRedirectUseHostname represents the http.adsso_redirect_use_hostname node and implements sophos.Node
type HttpAdssoRedirectUseHostname struct{ Value bool }

// Get gets the http.adsso_redirect_use_hostname value from the UTM
func (h *HttpAdssoRedirectUseHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.adsso_redirect_use_hostname", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAdssoRedirectUseHostname
func (h *HttpAdssoRedirectUseHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.adsso_redirect_use_hostname", h.Value, options...)
}

// HttpAllowHttpsTrafficOverHttpPort represents the http.allow_https_traffic_over_http_port node and implements sophos.Node
type HttpAllowHttpsTrafficOverHttpPort struct{ Value bool }

// Get gets the http.allow_https_traffic_over_http_port value from the UTM
func (h *HttpAllowHttpsTrafficOverHttpPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.allow_https_traffic_over_http_port", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAllowHttpsTrafficOverHttpPort
func (h *HttpAllowHttpsTrafficOverHttpPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.allow_https_traffic_over_http_port", h.Value, options...)
}

// HttpAllowSsl3 represents the http.allow_ssl3 node and implements sophos.Node
type HttpAllowSsl3 struct{ Value bool }

// Get gets the http.allow_ssl3 value from the UTM
func (h *HttpAllowSsl3) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.allow_ssl3", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAllowSsl3
func (h *HttpAllowSsl3) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.allow_ssl3", h.Value, options...)
}

// HttpAllowTls12 represents the http.allow_tls_1_2 node and implements sophos.Node
type HttpAllowTls12 struct{ Value bool }

// Get gets the http.allow_tls_1_2 value from the UTM
func (h *HttpAllowTls12) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.allow_tls_1_2", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAllowTls12
func (h *HttpAllowTls12) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.allow_tls_1_2", h.Value, options...)
}

// HttpAllowedPuas represents the http.allowed_puas node and implements sophos.Node
type HttpAllowedPuas struct{ Value []interface{} }

// Get gets the http.allowed_puas value from the UTM
func (h *HttpAllowedPuas) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.allowed_puas", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAllowedPuas
func (h *HttpAllowedPuas) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.allowed_puas", h.Value, options...)
}

// HttpAllowedTargetServices represents the http.allowed_target_services node and implements sophos.Node
type HttpAllowedTargetServices struct{ Value []string }

// Get gets the http.allowed_target_services value from the UTM
func (h *HttpAllowedTargetServices) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.allowed_target_services", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAllowedTargetServices
func (h *HttpAllowedTargetServices) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.allowed_target_services", h.Value, options...)
}

// HttpAuaMaxconns represents the http.aua_maxconns node and implements sophos.Node
type HttpAuaMaxconns struct{ Value int64 }

// Get gets the http.aua_maxconns value from the UTM
func (h *HttpAuaMaxconns) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.aua_maxconns", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuaMaxconns
func (h *HttpAuaMaxconns) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.aua_maxconns", h.Value, options...)
}

// HttpAuaTimeout represents the http.aua_timeout node and implements sophos.Node
type HttpAuaTimeout struct{ Value int64 }

// Get gets the http.aua_timeout value from the UTM
func (h *HttpAuaTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.aua_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuaTimeout
func (h *HttpAuaTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.aua_timeout", h.Value, options...)
}

// HttpAuthCacheSize represents the http.auth_cache_size node and implements sophos.Node
type HttpAuthCacheSize struct{ Value int64 }

// Get gets the http.auth_cache_size value from the UTM
func (h *HttpAuthCacheSize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.auth_cache_size", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuthCacheSize
func (h *HttpAuthCacheSize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.auth_cache_size", h.Value, options...)
}

// HttpAuthCacheTtl represents the http.auth_cache_ttl node and implements sophos.Node
type HttpAuthCacheTtl struct{ Value int64 }

// Get gets the http.auth_cache_ttl value from the UTM
func (h *HttpAuthCacheTtl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.auth_cache_ttl", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuthCacheTtl
func (h *HttpAuthCacheTtl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.auth_cache_ttl", h.Value, options...)
}

// HttpAuthRealm represents the http.auth_realm node and implements sophos.Node
type HttpAuthRealm struct{ Value string }

// Get gets the http.auth_realm value from the UTM
func (h *HttpAuthRealm) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.auth_realm", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuthRealm
func (h *HttpAuthRealm) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.auth_realm", h.Value, options...)
}

// HttpAuthUsercacheTtl represents the http.auth_usercache_ttl node and implements sophos.Node
type HttpAuthUsercacheTtl struct{ Value int64 }

// Get gets the http.auth_usercache_ttl value from the UTM
func (h *HttpAuthUsercacheTtl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.auth_usercache_ttl", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpAuthUsercacheTtl
func (h *HttpAuthUsercacheTtl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.auth_usercache_ttl", h.Value, options...)
}

// HttpBlockUnscannable represents the http.block_unscannable node and implements sophos.Node
type HttpBlockUnscannable struct{ Value bool }

// Get gets the http.block_unscannable value from the UTM
func (h *HttpBlockUnscannable) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.block_unscannable", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpBlockUnscannable
func (h *HttpBlockUnscannable) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.block_unscannable", h.Value, options...)
}

// HttpBypassStreaming represents the http.bypass_streaming node and implements sophos.Node
type HttpBypassStreaming struct{ Value bool }

// Get gets the http.bypass_streaming value from the UTM
func (h *HttpBypassStreaming) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.bypass_streaming", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpBypassStreaming
func (h *HttpBypassStreaming) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.bypass_streaming", h.Value, options...)
}

// HttpCaList represents the http.ca_list node and implements sophos.Node
type HttpCaList struct{ Value []interface{} }

// Get gets the http.ca_list value from the UTM
func (h *HttpCaList) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.ca_list", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCaList
func (h *HttpCaList) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.ca_list", h.Value, options...)
}

// HttpCacheIgnoresCookies represents the http.cache_ignores_cookies node and implements sophos.Node
type HttpCacheIgnoresCookies struct{ Value bool }

// Get gets the http.cache_ignores_cookies value from the UTM
func (h *HttpCacheIgnoresCookies) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.cache_ignores_cookies", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCacheIgnoresCookies
func (h *HttpCacheIgnoresCookies) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.cache_ignores_cookies", h.Value, options...)
}

// HttpCachessl represents the http.cachessl node and implements sophos.Node
type HttpCachessl struct{ Value bool }

// Get gets the http.cachessl value from the UTM
func (h *HttpCachessl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.cachessl", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCachessl
func (h *HttpCachessl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.cachessl", h.Value, options...)
}

// HttpCaching represents the http.caching node and implements sophos.Node
type HttpCaching struct{ Value bool }

// Get gets the http.caching value from the UTM
func (h *HttpCaching) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.caching", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCaching
func (h *HttpCaching) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.caching", h.Value, options...)
}

// HttpCertcache represents the http.certcache node and implements sophos.Node
type HttpCertcache struct{ Value string }

// Get gets the http.certcache value from the UTM
func (h *HttpCertcache) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.certcache", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCertcache
func (h *HttpCertcache) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.certcache", h.Value, options...)
}

// HttpCertstore represents the http.certstore node and implements sophos.Node
type HttpCertstore struct{ Value string }

// Get gets the http.certstore value from the UTM
func (h *HttpCertstore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.certstore", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCertstore
func (h *HttpCertstore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.certstore", h.Value, options...)
}

// HttpCffOverrideUsers represents the http.cff_override_users node and implements sophos.Node
type HttpCffOverrideUsers struct{ Value []interface{} }

// Get gets the http.cff_override_users value from the UTM
func (h *HttpCffOverrideUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.cff_override_users", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCffOverrideUsers
func (h *HttpCffOverrideUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.cff_override_users", h.Value, options...)
}

// HttpClientTimeout represents the http.client_timeout node and implements sophos.Node
type HttpClientTimeout struct{ Value int64 }

// Get gets the http.client_timeout value from the UTM
func (h *HttpClientTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.client_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpClientTimeout
func (h *HttpClientTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.client_timeout", h.Value, options...)
}

// HttpConfLockWorkaround represents the http.conf_lock_workaround node and implements sophos.Node
type HttpConfLockWorkaround struct{ Value bool }

// Get gets the http.conf_lock_workaround value from the UTM
func (h *HttpConfLockWorkaround) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.conf_lock_workaround", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpConfLockWorkaround
func (h *HttpConfLockWorkaround) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.conf_lock_workaround", h.Value, options...)
}

// HttpConnectTimeout represents the http.connect_timeout node and implements sophos.Node
type HttpConnectTimeout struct{ Value int64 }

// Get gets the http.connect_timeout value from the UTM
func (h *HttpConnectTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.connect_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpConnectTimeout
func (h *HttpConnectTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.connect_timeout", h.Value, options...)
}

// HttpConnectV6Timeout represents the http.connect_v6_timeout node and implements sophos.Node
type HttpConnectV6Timeout struct{ Value map[string]interface{} }

// Get gets the http.connect_v6_timeout value from the UTM
func (h *HttpConnectV6Timeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.connect_v6_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpConnectV6Timeout
func (h *HttpConnectV6Timeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.connect_v6_timeout", h.Value, options...)
}

// HttpConnlimit represents the http.connlimit node and implements sophos.Node
type HttpConnlimit struct{ Value int64 }

// Get gets the http.connlimit value from the UTM
func (h *HttpConnlimit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.connlimit", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpConnlimit
func (h *HttpConnlimit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.connlimit", h.Value, options...)
}

// HttpCtypeInspectBody represents the http.ctype_inspect_body node and implements sophos.Node
type HttpCtypeInspectBody struct{ Value bool }

// Get gets the http.ctype_inspect_body value from the UTM
func (h *HttpCtypeInspectBody) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.ctype_inspect_body", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCtypeInspectBody
func (h *HttpCtypeInspectBody) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.ctype_inspect_body", h.Value, options...)
}

// HttpCtypeUnpackArchive represents the http.ctype_unpack_archive node and implements sophos.Node
type HttpCtypeUnpackArchive struct{ Value bool }

// Get gets the http.ctype_unpack_archive value from the UTM
func (h *HttpCtypeUnpackArchive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.ctype_unpack_archive", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpCtypeUnpackArchive
func (h *HttpCtypeUnpackArchive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.ctype_unpack_archive", h.Value, options...)
}

// HttpDebug represents the http.debug node and implements sophos.Node
type HttpDebug struct{ Value []interface{} }

// Get gets the http.debug value from the UTM
func (h *HttpDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.debug", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDebug
func (h *HttpDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.debug", h.Value, options...)
}

// HttpDefaultblockaction represents the http.defaultblockaction node and implements sophos.Node
type HttpDefaultblockaction struct{ Value string }

// Get gets the http.defaultblockaction value from the UTM
func (h *HttpDefaultblockaction) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.defaultblockaction", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDefaultblockaction
func (h *HttpDefaultblockaction) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.defaultblockaction", h.Value, options...)
}

// HttpDeferagents represents the http.deferagents node and implements sophos.Node
type HttpDeferagents struct{ Value []string }

// Get gets the http.deferagents value from the UTM
func (h *HttpDeferagents) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.deferagents", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDeferagents
func (h *HttpDeferagents) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.deferagents", h.Value, options...)
}

// HttpDeferlength represents the http.deferlength node and implements sophos.Node
type HttpDeferlength struct{ Value int64 }

// Get gets the http.deferlength value from the UTM
func (h *HttpDeferlength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.deferlength", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDeferlength
func (h *HttpDeferlength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.deferlength", h.Value, options...)
}

// HttpDeferredDownloadReadyTimeout represents the http.deferred_download_ready_timeout node and implements sophos.Node
type HttpDeferredDownloadReadyTimeout struct{ Value int64 }

// Get gets the http.deferred_download_ready_timeout value from the UTM
func (h *HttpDeferredDownloadReadyTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.deferred_download_ready_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDeferredDownloadReadyTimeout
func (h *HttpDeferredDownloadReadyTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.deferred_download_ready_timeout", h.Value, options...)
}

// HttpDisplayHttpBlockpageExplicitMode represents the http.display_http_blockpage_explicit_mode node and implements sophos.Node
type HttpDisplayHttpBlockpageExplicitMode struct{ Value bool }

// Get gets the http.display_http_blockpage_explicit_mode value from the UTM
func (h *HttpDisplayHttpBlockpageExplicitMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.display_http_blockpage_explicit_mode", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDisplayHttpBlockpageExplicitMode
func (h *HttpDisplayHttpBlockpageExplicitMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.display_http_blockpage_explicit_mode", h.Value, options...)
}

// HttpDisplayIntro represents the http.display_intro node and implements sophos.Node
type HttpDisplayIntro struct{ Value bool }

// Get gets the http.display_intro value from the UTM
func (h *HttpDisplayIntro) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.display_intro", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDisplayIntro
func (h *HttpDisplayIntro) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.display_intro", h.Value, options...)
}

// HttpDownloadManagerDefaultCharset represents the http.download_manager_default_charset node and implements sophos.Node
type HttpDownloadManagerDefaultCharset struct{ Value string }

// Get gets the http.download_manager_default_charset value from the UTM
func (h *HttpDownloadManagerDefaultCharset) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.download_manager_default_charset", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpDownloadManagerDefaultCharset
func (h *HttpDownloadManagerDefaultCharset) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.download_manager_default_charset", h.Value, options...)
}

// HttpEdirDelayBasicAuth represents the http.edir_delay_basic_auth node and implements sophos.Node
type HttpEdirDelayBasicAuth struct{ Value bool }

// Get gets the http.edir_delay_basic_auth value from the UTM
func (h *HttpEdirDelayBasicAuth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.edir_delay_basic_auth", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpEdirDelayBasicAuth
func (h *HttpEdirDelayBasicAuth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.edir_delay_basic_auth", h.Value, options...)
}

// HttpEnableHsts represents the http.enable_hsts node and implements sophos.Node
type HttpEnableHsts struct{ Value bool }

// Get gets the http.enable_hsts value from the UTM
func (h *HttpEnableHsts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.enable_hsts", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpEnableHsts
func (h *HttpEnableHsts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.enable_hsts", h.Value, options...)
}

// HttpEnableOutInterface represents the http.enable_out_interface node and implements sophos.Node
type HttpEnableOutInterface struct{ Value bool }

// Get gets the http.enable_out_interface value from the UTM
func (h *HttpEnableOutInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.enable_out_interface", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpEnableOutInterface
func (h *HttpEnableOutInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.enable_out_interface", h.Value, options...)
}

// HttpEppQuotaAction represents the http.epp_quota_action node and implements sophos.Node
type HttpEppQuotaAction struct{ Value string }

// Get gets the http.epp_quota_action value from the UTM
func (h *HttpEppQuotaAction) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.epp_quota_action", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpEppQuotaAction
func (h *HttpEppQuotaAction) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.epp_quota_action", h.Value, options...)
}

// HttpExceptions represents the http.exceptions node and implements sophos.Node
type HttpExceptions struct{ Value []string }

// Get gets the http.exceptions value from the UTM
func (h *HttpExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.exceptions", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpExceptions
func (h *HttpExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.exceptions", h.Value, options...)
}

// HttpForcedCachingExtension represents the http.forced_caching_extension node and implements sophos.Node
type HttpForcedCachingExtension struct{ Value []string }

// Get gets the http.forced_caching_extension value from the UTM
func (h *HttpForcedCachingExtension) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.forced_caching_extension", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpForcedCachingExtension
func (h *HttpForcedCachingExtension) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.forced_caching_extension", h.Value, options...)
}

// HttpForcedCachingNeverCachePrefix represents the http.forced_caching_never_cache_prefix node and implements sophos.Node
type HttpForcedCachingNeverCachePrefix struct{ Value []string }

// Get gets the http.forced_caching_never_cache_prefix value from the UTM
func (h *HttpForcedCachingNeverCachePrefix) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.forced_caching_never_cache_prefix", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpForcedCachingNeverCachePrefix
func (h *HttpForcedCachingNeverCachePrefix) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.forced_caching_never_cache_prefix", h.Value, options...)
}

// HttpForcedCachingStatus represents the http.forced_caching_status node and implements sophos.Node
type HttpForcedCachingStatus struct{ Value bool }

// Get gets the http.forced_caching_status value from the UTM
func (h *HttpForcedCachingStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.forced_caching_status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpForcedCachingStatus
func (h *HttpForcedCachingStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.forced_caching_status", h.Value, options...)
}

// HttpForcedCachingTtl represents the http.forced_caching_ttl node and implements sophos.Node
type HttpForcedCachingTtl struct{ Value int64 }

// Get gets the http.forced_caching_ttl value from the UTM
func (h *HttpForcedCachingTtl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.forced_caching_ttl", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpForcedCachingTtl
func (h *HttpForcedCachingTtl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.forced_caching_ttl", h.Value, options...)
}

// HttpForcedCachingUserAgentPrefix represents the http.forced_caching_user_agent_prefix node and implements sophos.Node
type HttpForcedCachingUserAgentPrefix struct{ Value []string }

// Get gets the http.forced_caching_user_agent_prefix value from the UTM
func (h *HttpForcedCachingUserAgentPrefix) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.forced_caching_user_agent_prefix", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpForcedCachingUserAgentPrefix
func (h *HttpForcedCachingUserAgentPrefix) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.forced_caching_user_agent_prefix", h.Value, options...)
}

// HttpHttpLoopbackDetect represents the http.http_loopback_detect node and implements sophos.Node
type HttpHttpLoopbackDetect struct{ Value bool }

// Get gets the http.http_loopback_detect value from the UTM
func (h *HttpHttpLoopbackDetect) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.http_loopback_detect", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpHttpLoopbackDetect
func (h *HttpHttpLoopbackDetect) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.http_loopback_detect", h.Value, options...)
}

// HttpIeSslBlockpageWorkaround represents the http.ie_ssl_blockpage_workaround node and implements sophos.Node
type HttpIeSslBlockpageWorkaround struct{ Value bool }

// Get gets the http.ie_ssl_blockpage_workaround value from the UTM
func (h *HttpIeSslBlockpageWorkaround) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.ie_ssl_blockpage_workaround", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpIeSslBlockpageWorkaround
func (h *HttpIeSslBlockpageWorkaround) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.ie_ssl_blockpage_workaround", h.Value, options...)
}

// HttpLimitAdSsoInterfaces represents the http.limit_ad_sso_interfaces node and implements sophos.Node
type HttpLimitAdSsoInterfaces struct{ Value bool }

// Get gets the http.limit_ad_sso_interfaces value from the UTM
func (h *HttpLimitAdSsoInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.limit_ad_sso_interfaces", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpLimitAdSsoInterfaces
func (h *HttpLimitAdSsoInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.limit_ad_sso_interfaces", h.Value, options...)
}

// HttpLocalSiteList represents the http.local_site_list node and implements sophos.Node
type HttpLocalSiteList struct{ Value []interface{} }

// Get gets the http.local_site_list value from the UTM
func (h *HttpLocalSiteList) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.local_site_list", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpLocalSiteList
func (h *HttpLocalSiteList) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.local_site_list", h.Value, options...)
}

// HttpMaxContentEncoding represents the http.max_content_encoding node and implements sophos.Node
type HttpMaxContentEncoding struct{ Value int64 }

// Get gets the http.max_content_encoding value from the UTM
func (h *HttpMaxContentEncoding) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.max_content_encoding", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpMaxContentEncoding
func (h *HttpMaxContentEncoding) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.max_content_encoding", h.Value, options...)
}

// HttpMaxTempfileSize represents the http.max_tempfile_size node and implements sophos.Node
type HttpMaxTempfileSize struct{ Value int64 }

// Get gets the http.max_tempfile_size value from the UTM
func (h *HttpMaxTempfileSize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.max_tempfile_size", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpMaxTempfileSize
func (h *HttpMaxTempfileSize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.max_tempfile_size", h.Value, options...)
}

// HttpMaxthreads represents the http.maxthreads node and implements sophos.Node
type HttpMaxthreads struct{ Value int64 }

// Get gets the http.maxthreads value from the UTM
func (h *HttpMaxthreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.maxthreads", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpMaxthreads
func (h *HttpMaxthreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.maxthreads", h.Value, options...)
}

// HttpMaxthreadsUnused represents the http.maxthreads_unused node and implements sophos.Node
type HttpMaxthreadsUnused struct{ Value int64 }

// Get gets the http.maxthreads_unused value from the UTM
func (h *HttpMaxthreadsUnused) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.maxthreads_unused", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpMaxthreadsUnused
func (h *HttpMaxthreadsUnused) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.maxthreads_unused", h.Value, options...)
}

// HttpModulepath represents the http.modulepath node and implements sophos.Node
type HttpModulepath struct{ Value string }

// Get gets the http.modulepath value from the UTM
func (h *HttpModulepath) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.modulepath", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpModulepath
func (h *HttpModulepath) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.modulepath", h.Value, options...)
}

// HttpModules represents the http.modules node and implements sophos.Node
type HttpModules struct{ Value []string }

// Get gets the http.modules value from the UTM
func (h *HttpModules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.modules", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpModules
func (h *HttpModules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.modules", h.Value, options...)
}

// HttpNoscancontent represents the http.noscancontent node and implements sophos.Node
type HttpNoscancontent struct{ Value []string }

// Get gets the http.noscancontent value from the UTM
func (h *HttpNoscancontent) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.noscancontent", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpNoscancontent
func (h *HttpNoscancontent) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.noscancontent", h.Value, options...)
}

// HttpOpendirectoryKeytab represents the http.opendirectory_keytab node and implements sophos.Node
type HttpOpendirectoryKeytab struct{ Value string }

// Get gets the http.opendirectory_keytab value from the UTM
func (h *HttpOpendirectoryKeytab) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.opendirectory_keytab", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpOpendirectoryKeytab
func (h *HttpOpendirectoryKeytab) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.opendirectory_keytab", h.Value, options...)
}

// HttpOverrideProceedProtocol represents the http.override_proceed_protocol node and implements sophos.Node
type HttpOverrideProceedProtocol struct{ Value bool }

// Get gets the http.override_proceed_protocol value from the UTM
func (h *HttpOverrideProceedProtocol) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.override_proceed_protocol", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpOverrideProceedProtocol
func (h *HttpOverrideProceedProtocol) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.override_proceed_protocol", h.Value, options...)
}

// HttpPacFile represents the http.pac_file node and implements sophos.Node
type HttpPacFile struct{ Value string }

// Get gets the http.pac_file value from the UTM
func (h *HttpPacFile) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.pac_file", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPacFile
func (h *HttpPacFile) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.pac_file", h.Value, options...)
}

// HttpParentProxyHost represents the http.parent_proxy_host node and implements sophos.Node
type HttpParentProxyHost struct{ Value string }

// Get gets the http.parent_proxy_host value from the UTM
func (h *HttpParentProxyHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.parent_proxy_host", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpParentProxyHost
func (h *HttpParentProxyHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.parent_proxy_host", h.Value, options...)
}

// HttpParentProxyPort represents the http.parent_proxy_port node and implements sophos.Node
type HttpParentProxyPort struct{ Value int64 }

// Get gets the http.parent_proxy_port value from the UTM
func (h *HttpParentProxyPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.parent_proxy_port", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpParentProxyPort
func (h *HttpParentProxyPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.parent_proxy_port", h.Value, options...)
}

// HttpParentProxyStatus represents the http.parent_proxy_status node and implements sophos.Node
type HttpParentProxyStatus struct{ Value bool }

// Get gets the http.parent_proxy_status value from the UTM
func (h *HttpParentProxyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.parent_proxy_status", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpParentProxyStatus
func (h *HttpParentProxyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.parent_proxy_status", h.Value, options...)
}

// HttpPassthroughId represents the http.passthrough_id node and implements sophos.Node
type HttpPassthroughId struct{ Value string }

// Get gets the http.passthrough_id value from the UTM
func (h *HttpPassthroughId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.passthrough_id", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPassthroughId
func (h *HttpPassthroughId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.passthrough_id", h.Value, options...)
}

// HttpPharmingProtection represents the http.pharming_protection node and implements sophos.Node
type HttpPharmingProtection struct{ Value bool }

// Get gets the http.pharming_protection value from the UTM
func (h *HttpPharmingProtection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.pharming_protection", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPharmingProtection
func (h *HttpPharmingProtection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.pharming_protection", h.Value, options...)
}

// HttpPort represents the http.port node and implements sophos.Node
type HttpPort struct{ Value int64 }

// Get gets the http.port value from the UTM
func (h *HttpPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.port", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPort
func (h *HttpPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.port", h.Value, options...)
}

// HttpPortalCert represents the http.portal_cert node and implements sophos.Node
type HttpPortalCert struct{ Value string }

// Get gets the http.portal_cert value from the UTM
func (h *HttpPortalCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.portal_cert", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPortalCert
func (h *HttpPortalCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.portal_cert", h.Value, options...)
}

// HttpPortalCertChain represents the http.portal_cert_chain node and implements sophos.Node
type HttpPortalCertChain struct{ Value []interface{} }

// Get gets the http.portal_cert_chain value from the UTM
func (h *HttpPortalCertChain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.portal_cert_chain", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPortalCertChain
func (h *HttpPortalCertChain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.portal_cert_chain", h.Value, options...)
}

// HttpPortalDomain represents the http.portal_domain node and implements sophos.Node
type HttpPortalDomain struct{ Value string }

// Get gets the http.portal_domain value from the UTM
func (h *HttpPortalDomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.portal_domain", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPortalDomain
func (h *HttpPortalDomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.portal_domain", h.Value, options...)
}

// HttpPortalHosts represents the http.portal_hosts node and implements sophos.Node
type HttpPortalHosts struct{ Value []interface{} }

// Get gets the http.portal_hosts value from the UTM
func (h *HttpPortalHosts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.portal_hosts", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPortalHosts
func (h *HttpPortalHosts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.portal_hosts", h.Value, options...)
}

// HttpPortalUseCert represents the http.portal_use_cert node and implements sophos.Node
type HttpPortalUseCert struct{ Value bool }

// Get gets the http.portal_use_cert value from the UTM
func (h *HttpPortalUseCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.portal_use_cert", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpPortalUseCert
func (h *HttpPortalUseCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.portal_use_cert", h.Value, options...)
}

// HttpProceedCacheTimeout represents the http.proceed_cache_timeout node and implements sophos.Node
type HttpProceedCacheTimeout struct{ Value int64 }

// Get gets the http.proceed_cache_timeout value from the UTM
func (h *HttpProceedCacheTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.proceed_cache_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpProceedCacheTimeout
func (h *HttpProceedCacheTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.proceed_cache_timeout", h.Value, options...)
}

// HttpProfiles represents the http.profiles node and implements sophos.Node
type HttpProfiles struct{ Value []string }

// Get gets the http.profiles value from the UTM
func (h *HttpProfiles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.profiles", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpProfiles
func (h *HttpProfiles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.profiles", h.Value, options...)
}

// HttpQuotaSliceTime represents the http.quota_slice_time node and implements sophos.Node
type HttpQuotaSliceTime struct{ Value int64 }

// Get gets the http.quota_slice_time value from the UTM
func (h *HttpQuotaSliceTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.quota_slice_time", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpQuotaSliceTime
func (h *HttpQuotaSliceTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.quota_slice_time", h.Value, options...)
}

// HttpRemoveRequest represents the http.remove_request node and implements sophos.Node
type HttpRemoveRequest struct{ Value []interface{} }

// Get gets the http.remove_request value from the UTM
func (h *HttpRemoveRequest) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.remove_request", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpRemoveRequest
func (h *HttpRemoveRequest) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.remove_request", h.Value, options...)
}

// HttpRemoveResponse represents the http.remove_response node and implements sophos.Node
type HttpRemoveResponse struct{ Value []string }

// Get gets the http.remove_response value from the UTM
func (h *HttpRemoveResponse) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.remove_response", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpRemoveResponse
func (h *HttpRemoveResponse) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.remove_response", h.Value, options...)
}

// HttpResponseTimeout represents the http.response_timeout node and implements sophos.Node
type HttpResponseTimeout struct{ Value int64 }

// Get gets the http.response_timeout value from the UTM
func (h *HttpResponseTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.response_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpResponseTimeout
func (h *HttpResponseTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.response_timeout", h.Value, options...)
}

// HttpSaviScanTimeout represents the http.savi_scan_timeout node and implements sophos.Node
type HttpSaviScanTimeout struct{ Value map[string]interface{} }

// Get gets the http.savi_scan_timeout value from the UTM
func (h *HttpSaviScanTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.savi_scan_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpSaviScanTimeout
func (h *HttpSaviScanTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.savi_scan_timeout", h.Value, options...)
}

// HttpScLocalDb represents the http.sc_local_db node and implements sophos.Node
type HttpScLocalDb struct{ Value string }

// Get gets the http.sc_local_db value from the UTM
func (h *HttpScLocalDb) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.sc_local_db", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpScLocalDb
func (h *HttpScLocalDb) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.sc_local_db", h.Value, options...)
}

// HttpScanEppTraffic represents the http.scan_epp_traffic node and implements sophos.Node
type HttpScanEppTraffic struct{ Value bool }

// Get gets the http.scan_epp_traffic value from the UTM
func (h *HttpScanEppTraffic) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.scan_epp_traffic", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpScanEppTraffic
func (h *HttpScanEppTraffic) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.scan_epp_traffic", h.Value, options...)
}

// HttpSearchdomain represents the http.searchdomain node and implements sophos.Node
type HttpSearchdomain struct{ Value string }

// Get gets the http.searchdomain value from the UTM
func (h *HttpSearchdomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.searchdomain", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpSearchdomain
func (h *HttpSearchdomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.searchdomain", h.Value, options...)
}

// HttpStrictHttp represents the http.strict_http node and implements sophos.Node
type HttpStrictHttp struct{ Value bool }

// Get gets the http.strict_http value from the UTM
func (h *HttpStrictHttp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.strict_http", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpStrictHttp
func (h *HttpStrictHttp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.strict_http", h.Value, options...)
}

// HttpTlsciphersClient represents the http.tlsciphers_client node and implements sophos.Node
type HttpTlsciphersClient struct{ Value string }

// Get gets the http.tlsciphers_client value from the UTM
func (h *HttpTlsciphersClient) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.tlsciphers_client", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTlsciphersClient
func (h *HttpTlsciphersClient) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.tlsciphers_client", h.Value, options...)
}

// HttpTlsciphersServer represents the http.tlsciphers_server node and implements sophos.Node
type HttpTlsciphersServer struct{ Value string }

// Get gets the http.tlsciphers_server value from the UTM
func (h *HttpTlsciphersServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.tlsciphers_server", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTlsciphersServer
func (h *HttpTlsciphersServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.tlsciphers_server", h.Value, options...)
}

// HttpTmpfsUsageMinMemsize represents the http.tmpfs_usage_min_memsize node and implements sophos.Node
type HttpTmpfsUsageMinMemsize struct{ Value int64 }

// Get gets the http.tmpfs_usage_min_memsize value from the UTM
func (h *HttpTmpfsUsageMinMemsize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.tmpfs_usage_min_memsize", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTmpfsUsageMinMemsize
func (h *HttpTmpfsUsageMinMemsize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.tmpfs_usage_min_memsize", h.Value, options...)
}

// HttpTransparentAuthTimeout represents the http.transparent_auth_timeout node and implements sophos.Node
type HttpTransparentAuthTimeout struct{ Value int64 }

// Get gets the http.transparent_auth_timeout value from the UTM
func (h *HttpTransparentAuthTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.transparent_auth_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTransparentAuthTimeout
func (h *HttpTransparentAuthTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.transparent_auth_timeout", h.Value, options...)
}

// HttpTransparentDstSkip represents the http.transparent_dst_skip node and implements sophos.Node
type HttpTransparentDstSkip struct{ Value []interface{} }

// Get gets the http.transparent_dst_skip value from the UTM
func (h *HttpTransparentDstSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.transparent_dst_skip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTransparentDstSkip
func (h *HttpTransparentDstSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.transparent_dst_skip", h.Value, options...)
}

// HttpTransparentSkipAutoPf represents the http.transparent_skip_auto_pf node and implements sophos.Node
type HttpTransparentSkipAutoPf struct{ Value bool }

// Get gets the http.transparent_skip_auto_pf value from the UTM
func (h *HttpTransparentSkipAutoPf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.transparent_skip_auto_pf", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTransparentSkipAutoPf
func (h *HttpTransparentSkipAutoPf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.transparent_skip_auto_pf", h.Value, options...)
}

// HttpTransparentSrcSkip represents the http.transparent_src_skip node and implements sophos.Node
type HttpTransparentSrcSkip struct{ Value []interface{} }

// Get gets the http.transparent_src_skip value from the UTM
func (h *HttpTransparentSrcSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.transparent_src_skip", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTransparentSrcSkip
func (h *HttpTransparentSrcSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.transparent_src_skip", h.Value, options...)
}

// HttpTunnelTimeout represents the http.tunnel_timeout node and implements sophos.Node
type HttpTunnelTimeout struct{ Value int64 }

// Get gets the http.tunnel_timeout value from the UTM
func (h *HttpTunnelTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.tunnel_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTunnelTimeout
func (h *HttpTunnelTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.tunnel_timeout", h.Value, options...)
}

// HttpTunnelV6Timeout represents the http.tunnel_v6_timeout node and implements sophos.Node
type HttpTunnelV6Timeout struct{ Value map[string]interface{} }

// Get gets the http.tunnel_v6_timeout value from the UTM
func (h *HttpTunnelV6Timeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.tunnel_v6_timeout", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpTunnelV6Timeout
func (h *HttpTunnelV6Timeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.tunnel_v6_timeout", h.Value, options...)
}

// HttpUndefercontent represents the http.undefercontent node and implements sophos.Node
type HttpUndefercontent struct{ Value []string }

// Get gets the http.undefercontent value from the UTM
func (h *HttpUndefercontent) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.undefercontent", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUndefercontent
func (h *HttpUndefercontent) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.undefercontent", h.Value, options...)
}

// HttpUndeferextension represents the http.undeferextension node and implements sophos.Node
type HttpUndeferextension struct{ Value []string }

// Get gets the http.undeferextension value from the UTM
func (h *HttpUndeferextension) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.undeferextension", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUndeferextension
func (h *HttpUndeferextension) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.undeferextension", h.Value, options...)
}

// HttpUrlFilteringRedirectUrl represents the http.url_filtering_redirect_url node and implements sophos.Node
type HttpUrlFilteringRedirectUrl struct{ Value string }

// Get gets the http.url_filtering_redirect_url value from the UTM
func (h *HttpUrlFilteringRedirectUrl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.url_filtering_redirect_url", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUrlFilteringRedirectUrl
func (h *HttpUrlFilteringRedirectUrl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.url_filtering_redirect_url", h.Value, options...)
}

// HttpUseConnectionInsteadofProxyconnection represents the http.use_connection_insteadof_proxyconnection node and implements sophos.Node
type HttpUseConnectionInsteadofProxyconnection struct{ Value bool }

// Get gets the http.use_connection_insteadof_proxyconnection value from the UTM
func (h *HttpUseConnectionInsteadofProxyconnection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_connection_insteadof_proxyconnection", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseConnectionInsteadofProxyconnection
func (h *HttpUseConnectionInsteadofProxyconnection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_connection_insteadof_proxyconnection", h.Value, options...)
}

// HttpUseDnsCnameSafesearch represents the http.use_dns_cname_safesearch node and implements sophos.Node
type HttpUseDnsCnameSafesearch struct{ Value bool }

// Get gets the http.use_dns_cname_safesearch value from the UTM
func (h *HttpUseDnsCnameSafesearch) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_dns_cname_safesearch", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseDnsCnameSafesearch
func (h *HttpUseDnsCnameSafesearch) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_dns_cname_safesearch", h.Value, options...)
}

// HttpUseDstaddrForGeopiplookup represents the http.use_dstaddr_for_geopiplookup node and implements sophos.Node
type HttpUseDstaddrForGeopiplookup struct{ Value bool }

// Get gets the http.use_dstaddr_for_geopiplookup value from the UTM
func (h *HttpUseDstaddrForGeopiplookup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_dstaddr_for_geopiplookup", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseDstaddrForGeopiplookup
func (h *HttpUseDstaddrForGeopiplookup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_dstaddr_for_geopiplookup", h.Value, options...)
}

// HttpUseKrb5Adsso represents the http.use_krb5_adsso node and implements sophos.Node
type HttpUseKrb5Adsso struct{ Value bool }

// Get gets the http.use_krb5_adsso value from the UTM
func (h *HttpUseKrb5Adsso) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_krb5_adsso", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseKrb5Adsso
func (h *HttpUseKrb5Adsso) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_krb5_adsso", h.Value, options...)
}

// HttpUseSni represents the http.use_sni node and implements sophos.Node
type HttpUseSni struct{ Value bool }

// Get gets the http.use_sni value from the UTM
func (h *HttpUseSni) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_sni", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseSni
func (h *HttpUseSni) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_sni", h.Value, options...)
}

// HttpUseSxlUrid represents the http.use_sxl_urid node and implements sophos.Node
type HttpUseSxlUrid struct{ Value bool }

// Get gets the http.use_sxl_urid value from the UTM
func (h *HttpUseSxlUrid) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/http.use_sxl_urid", &h.Value, options...)
}

// Update is syntactic sugar for UpdateHttpUseSxlUrid
func (h *HttpUseSxlUrid) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/http.use_sxl_urid", h.Value, options...)
}

// IcmpForward represents the icmp.forward node and implements sophos.Node
type IcmpForward struct{ Value bool }

// Get gets the icmp.forward value from the UTM
func (i *IcmpForward) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.forward", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpForward
func (i *IcmpForward) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.forward", i.Value, options...)
}

// IcmpInput represents the icmp.input node and implements sophos.Node
type IcmpInput struct{ Value bool }

// Get gets the icmp.input value from the UTM
func (i *IcmpInput) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.input", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpInput
func (i *IcmpInput) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.input", i.Value, options...)
}

// IcmpLogRedirect represents the icmp.log_redirect node and implements sophos.Node
type IcmpLogRedirect struct{ Value bool }

// Get gets the icmp.log_redirect value from the UTM
func (i *IcmpLogRedirect) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.log_redirect", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpLogRedirect
func (i *IcmpLogRedirect) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.log_redirect", i.Value, options...)
}

// IcmpPingForward represents the icmp.ping.forward node and implements sophos.Node
type IcmpPingForward struct{ Value bool }

// Get gets the icmp.ping.forward value from the UTM
func (i *IcmpPingForward) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.ping.forward", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpPingForward
func (i *IcmpPingForward) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.ping.forward", i.Value, options...)
}

// IcmpPingInput represents the icmp.ping.input node and implements sophos.Node
type IcmpPingInput struct{ Value bool }

// Get gets the icmp.ping.input value from the UTM
func (i *IcmpPingInput) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.ping.input", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpPingInput
func (i *IcmpPingInput) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.ping.input", i.Value, options...)
}

// IcmpPingOutput represents the icmp.ping.output node and implements sophos.Node
type IcmpPingOutput struct{ Value bool }

// Get gets the icmp.ping.output value from the UTM
func (i *IcmpPingOutput) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.ping.output", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpPingOutput
func (i *IcmpPingOutput) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.ping.output", i.Value, options...)
}

// IcmpSecure represents the icmp.secure node and implements sophos.Node
type IcmpSecure struct{ Value bool }

// Get gets the icmp.secure value from the UTM
func (i *IcmpSecure) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.secure", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpSecure
func (i *IcmpSecure) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.secure", i.Value, options...)
}

// IcmpTracerouteForward represents the icmp.traceroute.forward node and implements sophos.Node
type IcmpTracerouteForward struct{ Value bool }

// Get gets the icmp.traceroute.forward value from the UTM
func (i *IcmpTracerouteForward) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.traceroute.forward", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpTracerouteForward
func (i *IcmpTracerouteForward) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.traceroute.forward", i.Value, options...)
}

// IcmpTracerouteInput represents the icmp.traceroute.input node and implements sophos.Node
type IcmpTracerouteInput struct{ Value bool }

// Get gets the icmp.traceroute.input value from the UTM
func (i *IcmpTracerouteInput) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/icmp.traceroute.input", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIcmpTracerouteInput
func (i *IcmpTracerouteInput) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/icmp.traceroute.input", i.Value, options...)
}

// IdentForward represents the ident.forward node and implements sophos.Node
type IdentForward struct{ Value bool }

// Get gets the ident.forward value from the UTM
func (i *IdentForward) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ident.forward", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIdentForward
func (i *IdentForward) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ident.forward", i.Value, options...)
}

// IdentResponse represents the ident.response node and implements sophos.Node
type IdentResponse struct{ Value string }

// Get gets the ident.response value from the UTM
func (i *IdentResponse) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ident.response", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIdentResponse
func (i *IdentResponse) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ident.response", i.Value, options...)
}

// IdentStatus represents the ident.status node and implements sophos.Node
type IdentStatus struct{ Value bool }

// Get gets the ident.status value from the UTM
func (i *IdentStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ident.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIdentStatus
func (i *IdentStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ident.status", i.Value, options...)
}

// InterfacesAdvancedArpAnnounce represents the interfaces.advanced.arp_announce node and implements sophos.Node
type InterfacesAdvancedArpAnnounce struct{ Value map[string]interface{} }

// Get gets the interfaces.advanced.arp_announce value from the UTM
func (i *InterfacesAdvancedArpAnnounce) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.arp_announce", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedArpAnnounce
func (i *InterfacesAdvancedArpAnnounce) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.arp_announce", i.Value, options...)
}

// InterfacesAdvancedArpCacheGcThresh1 represents the interfaces.advanced.arp_cache_gc_thresh1 node and implements sophos.Node
type InterfacesAdvancedArpCacheGcThresh1 struct{ Value int64 }

// Get gets the interfaces.advanced.arp_cache_gc_thresh1 value from the UTM
func (i *InterfacesAdvancedArpCacheGcThresh1) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh1", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedArpCacheGcThresh1
func (i *InterfacesAdvancedArpCacheGcThresh1) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh1", i.Value, options...)
}

// InterfacesAdvancedArpCacheGcThresh2 represents the interfaces.advanced.arp_cache_gc_thresh2 node and implements sophos.Node
type InterfacesAdvancedArpCacheGcThresh2 struct{ Value int64 }

// Get gets the interfaces.advanced.arp_cache_gc_thresh2 value from the UTM
func (i *InterfacesAdvancedArpCacheGcThresh2) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh2", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedArpCacheGcThresh2
func (i *InterfacesAdvancedArpCacheGcThresh2) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh2", i.Value, options...)
}

// InterfacesAdvancedArpCacheGcThresh3 represents the interfaces.advanced.arp_cache_gc_thresh3 node and implements sophos.Node
type InterfacesAdvancedArpCacheGcThresh3 struct{ Value int64 }

// Get gets the interfaces.advanced.arp_cache_gc_thresh3 value from the UTM
func (i *InterfacesAdvancedArpCacheGcThresh3) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh3", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedArpCacheGcThresh3
func (i *InterfacesAdvancedArpCacheGcThresh3) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.arp_cache_gc_thresh3", i.Value, options...)
}

// InterfacesAdvancedArpIgnore represents the interfaces.advanced.arp_ignore node and implements sophos.Node
type InterfacesAdvancedArpIgnore struct{ Value map[string]interface{} }

// Get gets the interfaces.advanced.arp_ignore value from the UTM
func (i *InterfacesAdvancedArpIgnore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.arp_ignore", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedArpIgnore
func (i *InterfacesAdvancedArpIgnore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.arp_ignore", i.Value, options...)
}

// InterfacesAdvancedDefaultMetric represents the interfaces.advanced.default_metric node and implements sophos.Node
type InterfacesAdvancedDefaultMetric struct{ Value int64 }

// Get gets the interfaces.advanced.default_metric value from the UTM
func (i *InterfacesAdvancedDefaultMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.advanced.default_metric", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesAdvancedDefaultMetric
func (i *InterfacesAdvancedDefaultMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.advanced.default_metric", i.Value, options...)
}

// InterfacesInterfaces represents the interfaces.interfaces node and implements sophos.Node
type InterfacesInterfaces struct{ Value []string }

// Get gets the interfaces.interfaces value from the UTM
func (i *InterfacesInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/interfaces.interfaces", &i.Value, options...)
}

// Update is syntactic sugar for UpdateInterfacesInterfaces
func (i *InterfacesInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/interfaces.interfaces", i.Value, options...)
}

// IpsDnsServers represents the ips.dns_servers node and implements sophos.Node
type IpsDnsServers struct{ Value []interface{} }

// Get gets the ips.dns_servers value from the UTM
func (i *IpsDnsServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.dns_servers", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsDnsServers
func (i *IpsDnsServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.dns_servers", i.Value, options...)
}

// IpsEnableAcceptForAllPackets represents the ips.enable_accept_for_all_packets node and implements sophos.Node
type IpsEnableAcceptForAllPackets struct{ Value bool }

// Get gets the ips.enable_accept_for_all_packets value from the UTM
func (i *IpsEnableAcceptForAllPackets) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.enable_accept_for_all_packets", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsEnableAcceptForAllPackets
func (i *IpsEnableAcceptForAllPackets) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.enable_accept_for_all_packets", i.Value, options...)
}

// IpsEngine represents the ips.engine node and implements sophos.Node
type IpsEngine struct{ Value string }

// Get gets the ips.engine value from the UTM
func (i *IpsEngine) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.engine", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsEngine
func (i *IpsEngine) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.engine", i.Value, options...)
}

// IpsExceptions represents the ips.exceptions node and implements sophos.Node
type IpsExceptions struct{ Value []string }

// Get gets the ips.exceptions value from the UTM
func (i *IpsExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.exceptions", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsExceptions
func (i *IpsExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.exceptions", i.Value, options...)
}

// IpsFailopen represents the ips.failopen node and implements sophos.Node
type IpsFailopen struct{ Value bool }

// Get gets the ips.failopen value from the UTM
func (i *IpsFailopen) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.failopen", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsFailopen
func (i *IpsFailopen) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.failopen", i.Value, options...)
}

// IpsFileBasedRules represents the ips.file_based_rules node and implements sophos.Node
type IpsFileBasedRules struct{ Value bool }

// Get gets the ips.file_based_rules value from the UTM
func (i *IpsFileBasedRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.file_based_rules", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsFileBasedRules
func (i *IpsFileBasedRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.file_based_rules", i.Value, options...)
}

// IpsGroups represents the ips.groups node and implements sophos.Node
type IpsGroups struct{ Value []string }

// Get gets the ips.groups value from the UTM
func (i *IpsGroups) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.groups", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsGroups
func (i *IpsGroups) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.groups", i.Value, options...)
}

// IpsHttpServers represents the ips.http_servers node and implements sophos.Node
type IpsHttpServers struct{ Value []interface{} }

// Get gets the ips.http_servers value from the UTM
func (i *IpsHttpServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.http_servers", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsHttpServers
func (i *IpsHttpServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.http_servers", i.Value, options...)
}

// IpsIpsfbAlertInterval represents the ips.ipsfb.alert_interval node and implements sophos.Node
type IpsIpsfbAlertInterval struct{ Value int64 }

// Get gets the ips.ipsfb.alert_interval value from the UTM
func (i *IpsIpsfbAlertInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.ipsfb.alert_interval", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsIpsfbAlertInterval
func (i *IpsIpsfbAlertInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.ipsfb.alert_interval", i.Value, options...)
}

// IpsIpsfbConfigInterval represents the ips.ipsfb.config_interval node and implements sophos.Node
type IpsIpsfbConfigInterval struct{ Value int64 }

// Get gets the ips.ipsfb.config_interval value from the UTM
func (i *IpsIpsfbConfigInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.ipsfb.config_interval", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsIpsfbConfigInterval
func (i *IpsIpsfbConfigInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.ipsfb.config_interval", i.Value, options...)
}

// IpsIpsfbDebug represents the ips.ipsfb.debug node and implements sophos.Node
type IpsIpsfbDebug struct{ Value bool }

// Get gets the ips.ipsfb.debug value from the UTM
func (i *IpsIpsfbDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.ipsfb.debug", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsIpsfbDebug
func (i *IpsIpsfbDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.ipsfb.debug", i.Value, options...)
}

// IpsLocalNetworks represents the ips.local_networks node and implements sophos.Node
type IpsLocalNetworks struct{ Value []string }

// Get gets the ips.local_networks value from the UTM
func (i *IpsLocalNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.local_networks", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsLocalNetworks
func (i *IpsLocalNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.local_networks", i.Value, options...)
}

// IpsNumInstances represents the ips.num_instances node and implements sophos.Node
type IpsNumInstances struct{ Value map[string]interface{} }

// Get gets the ips.num_instances value from the UTM
func (i *IpsNumInstances) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.num_instances", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsNumInstances
func (i *IpsNumInstances) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.num_instances", i.Value, options...)
}

// IpsPatternChannel represents the ips.pattern_channel node and implements sophos.Node
type IpsPatternChannel struct{ Value string }

// Get gets the ips.pattern_channel value from the UTM
func (i *IpsPatternChannel) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.pattern_channel", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsPatternChannel
func (i *IpsPatternChannel) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.pattern_channel", i.Value, options...)
}

// IpsPolicy represents the ips.policy node and implements sophos.Node
type IpsPolicy struct{ Value string }

// Get gets the ips.policy value from the UTM
func (i *IpsPolicy) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.policy", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsPolicy
func (i *IpsPolicy) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.policy", i.Value, options...)
}

// IpsQueueLength represents the ips.queue_length node and implements sophos.Node
type IpsQueueLength struct{ Value int64 }

// Get gets the ips.queue_length value from the UTM
func (i *IpsQueueLength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.queue_length", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsQueueLength
func (i *IpsQueueLength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.queue_length", i.Value, options...)
}

// IpsQueueThreshold represents the ips.queue_threshold node and implements sophos.Node
type IpsQueueThreshold struct{ Value map[string]interface{} }

// Get gets the ips.queue_threshold value from the UTM
func (i *IpsQueueThreshold) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.queue_threshold", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsQueueThreshold
func (i *IpsQueueThreshold) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.queue_threshold", i.Value, options...)
}

// IpsReloadMethod represents the ips.reload_method node and implements sophos.Node
type IpsReloadMethod struct{ Value string }

// Get gets the ips.reload_method value from the UTM
func (i *IpsReloadMethod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.reload_method", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsReloadMethod
func (i *IpsReloadMethod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.reload_method", i.Value, options...)
}

// IpsRestartPolicy represents the ips.restart_policy node and implements sophos.Node
type IpsRestartPolicy struct{ Value string }

// Get gets the ips.restart_policy value from the UTM
func (i *IpsRestartPolicy) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.restart_policy", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsRestartPolicy
func (i *IpsRestartPolicy) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.restart_policy", i.Value, options...)
}

// IpsRuleModifiers represents the ips.rule_modifiers node and implements sophos.Node
type IpsRuleModifiers struct{ Value []interface{} }

// Get gets the ips.rule_modifiers value from the UTM
func (i *IpsRuleModifiers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.rule_modifiers", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsRuleModifiers
func (i *IpsRuleModifiers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.rule_modifiers", i.Value, options...)
}

// IpsRules represents the ips.rules node and implements sophos.Node
type IpsRules struct{ Value []interface{} }

// Get gets the ips.rules value from the UTM
func (i *IpsRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.rules", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsRules
func (i *IpsRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.rules", i.Value, options...)
}

// IpsSkipAcks represents the ips.skip_acks node and implements sophos.Node
type IpsSkipAcks struct{ Value bool }

// Get gets the ips.skip_acks value from the UTM
func (i *IpsSkipAcks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.skip_acks", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSkipAcks
func (i *IpsSkipAcks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.skip_acks", i.Value, options...)
}

// IpsSmtpServers represents the ips.smtp_servers node and implements sophos.Node
type IpsSmtpServers struct{ Value []interface{} }

// Get gets the ips.smtp_servers value from the UTM
func (i *IpsSmtpServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.smtp_servers", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSmtpServers
func (i *IpsSmtpServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.smtp_servers", i.Value, options...)
}

// IpsSnortsettingsMaxQueuedBytes represents the ips.snortsettings.max_queued_bytes node and implements sophos.Node
type IpsSnortsettingsMaxQueuedBytes struct{ Value map[string]interface{} }

// Get gets the ips.snortsettings.max_queued_bytes value from the UTM
func (i *IpsSnortsettingsMaxQueuedBytes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.max_queued_bytes", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsMaxQueuedBytes
func (i *IpsSnortsettingsMaxQueuedBytes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.max_queued_bytes", i.Value, options...)
}

// IpsSnortsettingsMaxQueuedSegs represents the ips.snortsettings.max_queued_segs node and implements sophos.Node
type IpsSnortsettingsMaxQueuedSegs struct{ Value map[string]interface{} }

// Get gets the ips.snortsettings.max_queued_segs value from the UTM
func (i *IpsSnortsettingsMaxQueuedSegs) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.max_queued_segs", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsMaxQueuedSegs
func (i *IpsSnortsettingsMaxQueuedSegs) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.max_queued_segs", i.Value, options...)
}

// IpsSnortsettingsMaxTcp represents the ips.snortsettings.max_tcp node and implements sophos.Node
type IpsSnortsettingsMaxTcp struct{ Value map[string]interface{} }

// Get gets the ips.snortsettings.max_tcp value from the UTM
func (i *IpsSnortsettingsMaxTcp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.max_tcp", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsMaxTcp
func (i *IpsSnortsettingsMaxTcp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.max_tcp", i.Value, options...)
}

// IpsSnortsettingsMaxUdp represents the ips.snortsettings.max_udp node and implements sophos.Node
type IpsSnortsettingsMaxUdp struct{ Value map[string]interface{} }

// Get gets the ips.snortsettings.max_udp value from the UTM
func (i *IpsSnortsettingsMaxUdp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.max_udp", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsMaxUdp
func (i *IpsSnortsettingsMaxUdp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.max_udp", i.Value, options...)
}

// IpsSnortsettingsMemcap represents the ips.snortsettings.memcap node and implements sophos.Node
type IpsSnortsettingsMemcap struct{ Value map[string]interface{} }

// Get gets the ips.snortsettings.memcap value from the UTM
func (i *IpsSnortsettingsMemcap) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.memcap", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsMemcap
func (i *IpsSnortsettingsMemcap) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.memcap", i.Value, options...)
}

// IpsSnortsettingsSearchMethod represents the ips.snortsettings.search_method node and implements sophos.Node
type IpsSnortsettingsSearchMethod struct{ Value string }

// Get gets the ips.snortsettings.search_method value from the UTM
func (i *IpsSnortsettingsSearchMethod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.snortsettings.search_method", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSnortsettingsSearchMethod
func (i *IpsSnortsettingsSearchMethod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.snortsettings.search_method", i.Value, options...)
}

// IpsSqlServers represents the ips.sql_servers node and implements sophos.Node
type IpsSqlServers struct{ Value []interface{} }

// Get gets the ips.sql_servers value from the UTM
func (i *IpsSqlServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.sql_servers", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsSqlServers
func (i *IpsSqlServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.sql_servers", i.Value, options...)
}

// IpsStatus represents the ips.status node and implements sophos.Node
type IpsStatus struct{ Value bool }

// Get gets the ips.status value from the UTM
func (i *IpsStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ips.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsStatus
func (i *IpsStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ips.status", i.Value, options...)
}

// IpsecAdvancedCrlAutoFetching represents the ipsec.advanced.crl_auto_fetching node and implements sophos.Node
type IpsecAdvancedCrlAutoFetching struct{ Value bool }

// Get gets the ipsec.advanced.crl_auto_fetching value from the UTM
func (i *IpsecAdvancedCrlAutoFetching) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.crl_auto_fetching", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedCrlAutoFetching
func (i *IpsecAdvancedCrlAutoFetching) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.crl_auto_fetching", i.Value, options...)
}

// IpsecAdvancedCrlStrictPolicy represents the ipsec.advanced.crl_strict_policy node and implements sophos.Node
type IpsecAdvancedCrlStrictPolicy struct{ Value bool }

// Get gets the ipsec.advanced.crl_strict_policy value from the UTM
func (i *IpsecAdvancedCrlStrictPolicy) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.crl_strict_policy", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedCrlStrictPolicy
func (i *IpsecAdvancedCrlStrictPolicy) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.crl_strict_policy", i.Value, options...)
}

// IpsecAdvancedDeadPeerDetection represents the ipsec.advanced.dead_peer_detection node and implements sophos.Node
type IpsecAdvancedDeadPeerDetection struct{ Value bool }

// Get gets the ipsec.advanced.dead_peer_detection value from the UTM
func (i *IpsecAdvancedDeadPeerDetection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.dead_peer_detection", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedDeadPeerDetection
func (i *IpsecAdvancedDeadPeerDetection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.dead_peer_detection", i.Value, options...)
}

// IpsecAdvancedIkeDebug represents the ipsec.advanced.ike_debug node and implements sophos.Node
type IpsecAdvancedIkeDebug struct{ Value []interface{} }

// Get gets the ipsec.advanced.ike_debug value from the UTM
func (i *IpsecAdvancedIkeDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.ike_debug", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedIkeDebug
func (i *IpsecAdvancedIkeDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.ike_debug", i.Value, options...)
}

// IpsecAdvancedIkePort represents the ipsec.advanced.ike_port node and implements sophos.Node
type IpsecAdvancedIkePort struct{ Value int64 }

// Get gets the ipsec.advanced.ike_port value from the UTM
func (i *IpsecAdvancedIkePort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.ike_port", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedIkePort
func (i *IpsecAdvancedIkePort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.ike_port", i.Value, options...)
}

// IpsecAdvancedMetric represents the ipsec.advanced.metric node and implements sophos.Node
type IpsecAdvancedMetric struct{ Value map[string]interface{} }

// Get gets the ipsec.advanced.metric value from the UTM
func (i *IpsecAdvancedMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.metric", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedMetric
func (i *IpsecAdvancedMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.metric", i.Value, options...)
}

// IpsecAdvancedNatTraversal represents the ipsec.advanced.nat_traversal node and implements sophos.Node
type IpsecAdvancedNatTraversal struct{ Value bool }

// Get gets the ipsec.advanced.nat_traversal value from the UTM
func (i *IpsecAdvancedNatTraversal) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.nat_traversal", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedNatTraversal
func (i *IpsecAdvancedNatTraversal) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.nat_traversal", i.Value, options...)
}

// IpsecAdvancedNatTraversalKeepalive represents the ipsec.advanced.nat_traversal_keepalive node and implements sophos.Node
type IpsecAdvancedNatTraversalKeepalive struct{ Value int64 }

// Get gets the ipsec.advanced.nat_traversal_keepalive value from the UTM
func (i *IpsecAdvancedNatTraversalKeepalive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.nat_traversal_keepalive", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedNatTraversalKeepalive
func (i *IpsecAdvancedNatTraversalKeepalive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.nat_traversal_keepalive", i.Value, options...)
}

// IpsecAdvancedProbePsk represents the ipsec.advanced.probe_psk node and implements sophos.Node
type IpsecAdvancedProbePsk struct{ Value bool }

// Get gets the ipsec.advanced.probe_psk value from the UTM
func (i *IpsecAdvancedProbePsk) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.probe_psk", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedProbePsk
func (i *IpsecAdvancedProbePsk) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.probe_psk", i.Value, options...)
}

// IpsecAdvancedPskVpnId represents the ipsec.advanced.psk_vpn_id node and implements sophos.Node
type IpsecAdvancedPskVpnId struct{ Value string }

// Get gets the ipsec.advanced.psk_vpn_id value from the UTM
func (i *IpsecAdvancedPskVpnId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.psk_vpn_id", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedPskVpnId
func (i *IpsecAdvancedPskVpnId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.psk_vpn_id", i.Value, options...)
}

// IpsecAdvancedPskVpnIdType represents the ipsec.advanced.psk_vpn_id_type node and implements sophos.Node
type IpsecAdvancedPskVpnIdType struct{ Value string }

// Get gets the ipsec.advanced.psk_vpn_id_type value from the UTM
func (i *IpsecAdvancedPskVpnIdType) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.advanced.psk_vpn_id_type", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecAdvancedPskVpnIdType
func (i *IpsecAdvancedPskVpnIdType) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.advanced.psk_vpn_id_type", i.Value, options...)
}

// IpsecConnections represents the ipsec.connections node and implements sophos.Node
type IpsecConnections struct{ Value []interface{} }

// Get gets the ipsec.connections value from the UTM
func (i *IpsecConnections) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.connections", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecConnections
func (i *IpsecConnections) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.connections", i.Value, options...)
}

// IpsecLocalRsa represents the ipsec.local_rsa node and implements sophos.Node
type IpsecLocalRsa struct{ Value string }

// Get gets the ipsec.local_rsa value from the UTM
func (i *IpsecLocalRsa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.local_rsa", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecLocalRsa
func (i *IpsecLocalRsa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.local_rsa", i.Value, options...)
}

// IpsecLocalX509 represents the ipsec.local_x509 node and implements sophos.Node
type IpsecLocalX509 struct{ Value string }

// Get gets the ipsec.local_x509 value from the UTM
func (i *IpsecLocalX509) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.local_x509", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecLocalX509
func (i *IpsecLocalX509) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.local_x509", i.Value, options...)
}

// IpsecStatus represents the ipsec.status node and implements sophos.Node
type IpsecStatus struct{ Value bool }

// Get gets the ipsec.status value from the UTM
func (i *IpsecStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipsec.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpsecStatus
func (i *IpsecStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipsec.status", i.Value, options...)
}

// Ipv6AdvancedHopLimit represents the ipv6.advanced.hop_limit node and implements sophos.Node
type Ipv6AdvancedHopLimit struct{ Value int64 }

// Get gets the ipv6.advanced.hop_limit value from the UTM
func (i *Ipv6AdvancedHopLimit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.hop_limit", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedHopLimit
func (i *Ipv6AdvancedHopLimit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.hop_limit", i.Value, options...)
}

// Ipv6AdvancedMaxInterval represents the ipv6.advanced.max_interval node and implements sophos.Node
type Ipv6AdvancedMaxInterval struct{ Value int64 }

// Get gets the ipv6.advanced.max_interval value from the UTM
func (i *Ipv6AdvancedMaxInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.max_interval", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedMaxInterval
func (i *Ipv6AdvancedMaxInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.max_interval", i.Value, options...)
}

// Ipv6AdvancedMinInterval represents the ipv6.advanced.min_interval node and implements sophos.Node
type Ipv6AdvancedMinInterval struct{ Value int64 }

// Get gets the ipv6.advanced.min_interval value from the UTM
func (i *Ipv6AdvancedMinInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.min_interval", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedMinInterval
func (i *Ipv6AdvancedMinInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.min_interval", i.Value, options...)
}

// Ipv6AdvancedPreference represents the ipv6.advanced.preference node and implements sophos.Node
type Ipv6AdvancedPreference struct{ Value string }

// Get gets the ipv6.advanced.preference value from the UTM
func (i *Ipv6AdvancedPreference) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.preference", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedPreference
func (i *Ipv6AdvancedPreference) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.preference", i.Value, options...)
}

// Ipv6AdvancedReachableTime represents the ipv6.advanced.reachable_time node and implements sophos.Node
type Ipv6AdvancedReachableTime struct{ Value map[string]interface{} }

// Get gets the ipv6.advanced.reachable_time value from the UTM
func (i *Ipv6AdvancedReachableTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.reachable_time", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedReachableTime
func (i *Ipv6AdvancedReachableTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.reachable_time", i.Value, options...)
}

// Ipv6AdvancedRetransTime represents the ipv6.advanced.retrans_time node and implements sophos.Node
type Ipv6AdvancedRetransTime struct{ Value map[string]interface{} }

// Get gets the ipv6.advanced.retrans_time value from the UTM
func (i *Ipv6AdvancedRetransTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.advanced.retrans_time", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6AdvancedRetransTime
func (i *Ipv6AdvancedRetransTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.advanced.retrans_time", i.Value, options...)
}

// Ipv6BrokerAuthentication represents the ipv6.broker.authentication node and implements sophos.Node
type Ipv6BrokerAuthentication struct{ Value string }

// Get gets the ipv6.broker.authentication value from the UTM
func (i *Ipv6BrokerAuthentication) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.authentication", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerAuthentication
func (i *Ipv6BrokerAuthentication) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.authentication", i.Value, options...)
}

// Ipv6BrokerInterface represents the ipv6.broker.interface node and implements sophos.Node
type Ipv6BrokerInterface struct{ Value string }

// Get gets the ipv6.broker.interface value from the UTM
func (i *Ipv6BrokerInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.interface", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerInterface
func (i *Ipv6BrokerInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.interface", i.Value, options...)
}

// Ipv6BrokerPassword represents the ipv6.broker.password node and implements sophos.Node
type Ipv6BrokerPassword struct{ Value string }

// Get gets the ipv6.broker.password value from the UTM
func (i *Ipv6BrokerPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.password", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerPassword
func (i *Ipv6BrokerPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.password", i.Value, options...)
}

// Ipv6BrokerProtocol represents the ipv6.broker.protocol node and implements sophos.Node
type Ipv6BrokerProtocol struct{ Value string }

// Get gets the ipv6.broker.protocol value from the UTM
func (i *Ipv6BrokerProtocol) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.protocol", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerProtocol
func (i *Ipv6BrokerProtocol) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.protocol", i.Value, options...)
}

// Ipv6BrokerServer represents the ipv6.broker.server node and implements sophos.Node
type Ipv6BrokerServer struct{ Value string }

// Get gets the ipv6.broker.server value from the UTM
func (i *Ipv6BrokerServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.server", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerServer
func (i *Ipv6BrokerServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.server", i.Value, options...)
}

// Ipv6BrokerStatus represents the ipv6.broker.status node and implements sophos.Node
type Ipv6BrokerStatus struct{ Value bool }

// Get gets the ipv6.broker.status value from the UTM
func (i *Ipv6BrokerStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerStatus
func (i *Ipv6BrokerStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.status", i.Value, options...)
}

// Ipv6BrokerTunnelId represents the ipv6.broker.tunnel_id node and implements sophos.Node
type Ipv6BrokerTunnelId struct{ Value string }

// Get gets the ipv6.broker.tunnel_id value from the UTM
func (i *Ipv6BrokerTunnelId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.tunnel_id", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerTunnelId
func (i *Ipv6BrokerTunnelId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.tunnel_id", i.Value, options...)
}

// Ipv6BrokerUsername represents the ipv6.broker.username node and implements sophos.Node
type Ipv6BrokerUsername struct{ Value string }

// Get gets the ipv6.broker.username value from the UTM
func (i *Ipv6BrokerUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.broker.username", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6BrokerUsername
func (i *Ipv6BrokerUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.broker.username", i.Value, options...)
}

// Ipv6Nat64Address represents the ipv6.nat64.address node and implements sophos.Node
type Ipv6Nat64Address struct{ Value string }

// Get gets the ipv6.nat64.address value from the UTM
func (i *Ipv6Nat64Address) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.nat64.address", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Nat64Address
func (i *Ipv6Nat64Address) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.nat64.address", i.Value, options...)
}

// Ipv6Nat64Dns64V6Only represents the ipv6.nat64.dns64_v6only node and implements sophos.Node
type Ipv6Nat64Dns64V6Only struct{ Value bool }

// Get gets the ipv6.nat64.dns64_v6only value from the UTM
func (i *Ipv6Nat64Dns64V6Only) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.nat64.dns64_v6only", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Nat64Dns64V6Only
func (i *Ipv6Nat64Dns64V6Only) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.nat64.dns64_v6only", i.Value, options...)
}

// Ipv6Nat64Prefix represents the ipv6.nat64.prefix node and implements sophos.Node
type Ipv6Nat64Prefix struct{ Value string }

// Get gets the ipv6.nat64.prefix value from the UTM
func (i *Ipv6Nat64Prefix) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.nat64.prefix", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Nat64Prefix
func (i *Ipv6Nat64Prefix) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.nat64.prefix", i.Value, options...)
}

// Ipv6Nat64Status represents the ipv6.nat64.status node and implements sophos.Node
type Ipv6Nat64Status struct{ Value bool }

// Get gets the ipv6.nat64.status value from the UTM
func (i *Ipv6Nat64Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.nat64.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Nat64Status
func (i *Ipv6Nat64Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.nat64.status", i.Value, options...)
}

// Ipv6Prefer represents the ipv6.prefer node and implements sophos.Node
type Ipv6Prefer struct{ Value bool }

// Get gets the ipv6.prefer value from the UTM
func (i *Ipv6Prefer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.prefer", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Prefer
func (i *Ipv6Prefer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.prefer", i.Value, options...)
}

// Ipv6Prefixes represents the ipv6.prefixes node and implements sophos.Node
type Ipv6Prefixes struct{ Value []interface{} }

// Get gets the ipv6.prefixes value from the UTM
func (i *Ipv6Prefixes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.prefixes", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Prefixes
func (i *Ipv6Prefixes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.prefixes", i.Value, options...)
}

// Ipv6Renumbering represents the ipv6.renumbering node and implements sophos.Node
type Ipv6Renumbering struct{ Value bool }

// Get gets the ipv6.renumbering value from the UTM
func (i *Ipv6Renumbering) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.renumbering", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Renumbering
func (i *Ipv6Renumbering) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.renumbering", i.Value, options...)
}

// Ipv6Six2FourInterface represents the ipv6.six2four.interface node and implements sophos.Node
type Ipv6Six2FourInterface struct{ Value string }

// Get gets the ipv6.six2four.interface value from the UTM
func (i *Ipv6Six2FourInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.six2four.interface", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Six2FourInterface
func (i *Ipv6Six2FourInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.six2four.interface", i.Value, options...)
}

// Ipv6Six2FourServer represents the ipv6.six2four.server node and implements sophos.Node
type Ipv6Six2FourServer struct{ Value string }

// Get gets the ipv6.six2four.server value from the UTM
func (i *Ipv6Six2FourServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.six2four.server", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Six2FourServer
func (i *Ipv6Six2FourServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.six2four.server", i.Value, options...)
}

// Ipv6Six2FourStatus represents the ipv6.six2four.status node and implements sophos.Node
type Ipv6Six2FourStatus struct{ Value bool }

// Get gets the ipv6.six2four.status value from the UTM
func (i *Ipv6Six2FourStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.six2four.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Six2FourStatus
func (i *Ipv6Six2FourStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.six2four.status", i.Value, options...)
}

// Ipv6Status represents the ipv6.status node and implements sophos.Node
type Ipv6Status struct{ Value bool }

// Get gets the ipv6.status value from the UTM
func (i *Ipv6Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ipv6.status", &i.Value, options...)
}

// Update is syntactic sugar for UpdateIpv6Status
func (i *Ipv6Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ipv6.status", i.Value, options...)
}

// LicensingActiveIps represents the licensing.active_ips node and implements sophos.Node
type LicensingActiveIps struct{ Value []interface{} }

// Get gets the licensing.active_ips value from the UTM
func (l *LicensingActiveIps) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/licensing.active_ips", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLicensingActiveIps
func (l *LicensingActiveIps) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/licensing.active_ips", l.Value, options...)
}

// LicensingLicense represents the licensing.license node and implements sophos.Node
type LicensingLicense struct{ Value string }

// Get gets the licensing.license value from the UTM
func (l *LicensingLicense) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/licensing.license", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLicensingLicense
func (l *LicensingLicense) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/licensing.license", l.Value, options...)
}

// LicensingUserLimitExceeded represents the licensing.user_limit_exceeded node and implements sophos.Node
type LicensingUserLimitExceeded struct{ Value map[string]interface{} }

// Get gets the licensing.user_limit_exceeded value from the UTM
func (l *LicensingUserLimitExceeded) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/licensing.user_limit_exceeded", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLicensingUserLimitExceeded
func (l *LicensingUserLimitExceeded) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/licensing.user_limit_exceeded", l.Value, options...)
}

// LinkAggregationGroups represents the link_aggregation.groups node and implements sophos.Node
type LinkAggregationGroups struct{ Value []string }

// Get gets the link_aggregation.groups value from the UTM
func (l *LinkAggregationGroups) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/link_aggregation.groups", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLinkAggregationGroups
func (l *LinkAggregationGroups) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/link_aggregation.groups", l.Value, options...)
}

// LoadbalanceHttpErrorCode represents the loadbalance.http_error_code node and implements sophos.Node
type LoadbalanceHttpErrorCode struct{ Value int64 }

// Get gets the loadbalance.http_error_code value from the UTM
func (l *LoadbalanceHttpErrorCode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/loadbalance.http_error_code", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLoadbalanceHttpErrorCode
func (l *LoadbalanceHttpErrorCode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/loadbalance.http_error_code", l.Value, options...)
}

// LoadbalanceRules represents the loadbalance.rules node and implements sophos.Node
type LoadbalanceRules struct{ Value []interface{} }

// Get gets the loadbalance.rules value from the UTM
func (l *LoadbalanceRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/loadbalance.rules", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLoadbalanceRules
func (l *LoadbalanceRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/loadbalance.rules", l.Value, options...)
}

// LogfilesLocalActionOne represents the logfiles.local.action_one node and implements sophos.Node
type LogfilesLocalActionOne struct{ Value string }

// Get gets the logfiles.local.action_one value from the UTM
func (l *LogfilesLocalActionOne) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.action_one", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalActionOne
func (l *LogfilesLocalActionOne) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.action_one", l.Value, options...)
}

// LogfilesLocalActionThree represents the logfiles.local.action_three node and implements sophos.Node
type LogfilesLocalActionThree struct{ Value string }

// Get gets the logfiles.local.action_three value from the UTM
func (l *LogfilesLocalActionThree) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.action_three", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalActionThree
func (l *LogfilesLocalActionThree) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.action_three", l.Value, options...)
}

// LogfilesLocalActionTwo represents the logfiles.local.action_two node and implements sophos.Node
type LogfilesLocalActionTwo struct{ Value string }

// Get gets the logfiles.local.action_two value from the UTM
func (l *LogfilesLocalActionTwo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.action_two", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalActionTwo
func (l *LogfilesLocalActionTwo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.action_two", l.Value, options...)
}

// LogfilesLocalDeleteAfterDays represents the logfiles.local.delete_after_days node and implements sophos.Node
type LogfilesLocalDeleteAfterDays struct{ Value map[string]interface{} }

// Get gets the logfiles.local.delete_after_days value from the UTM
func (l *LogfilesLocalDeleteAfterDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.delete_after_days", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalDeleteAfterDays
func (l *LogfilesLocalDeleteAfterDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.delete_after_days", l.Value, options...)
}

// LogfilesLocalPercentageOne represents the logfiles.local.percentage_one node and implements sophos.Node
type LogfilesLocalPercentageOne struct{ Value int64 }

// Get gets the logfiles.local.percentage_one value from the UTM
func (l *LogfilesLocalPercentageOne) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.percentage_one", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalPercentageOne
func (l *LogfilesLocalPercentageOne) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.percentage_one", l.Value, options...)
}

// LogfilesLocalPercentageThree represents the logfiles.local.percentage_three node and implements sophos.Node
type LogfilesLocalPercentageThree struct{ Value int64 }

// Get gets the logfiles.local.percentage_three value from the UTM
func (l *LogfilesLocalPercentageThree) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.percentage_three", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalPercentageThree
func (l *LogfilesLocalPercentageThree) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.percentage_three", l.Value, options...)
}

// LogfilesLocalPercentageTwo represents the logfiles.local.percentage_two node and implements sophos.Node
type LogfilesLocalPercentageTwo struct{ Value int64 }

// Get gets the logfiles.local.percentage_two value from the UTM
func (l *LogfilesLocalPercentageTwo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.percentage_two", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalPercentageTwo
func (l *LogfilesLocalPercentageTwo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.percentage_two", l.Value, options...)
}

// LogfilesLocalStatus represents the logfiles.local.status node and implements sophos.Node
type LogfilesLocalStatus struct{ Value bool }

// Get gets the logfiles.local.status value from the UTM
func (l *LogfilesLocalStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.status", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalStatus
func (l *LogfilesLocalStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.status", l.Value, options...)
}

// LogfilesLocalSyslogMaxConnections represents the logfiles.local.syslog_max_connections node and implements sophos.Node
type LogfilesLocalSyslogMaxConnections struct{ Value int64 }

// Get gets the logfiles.local.syslog_max_connections value from the UTM
func (l *LogfilesLocalSyslogMaxConnections) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.local.syslog_max_connections", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesLocalSyslogMaxConnections
func (l *LogfilesLocalSyslogMaxConnections) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.local.syslog_max_connections", l.Value, options...)
}

// LogfilesRemoteFtpService represents the logfiles.remote.ftp_service node and implements sophos.Node
type LogfilesRemoteFtpService struct{ Value string }

// Get gets the logfiles.remote.ftp_service value from the UTM
func (l *LogfilesRemoteFtpService) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.ftp_service", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteFtpService
func (l *LogfilesRemoteFtpService) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.ftp_service", l.Value, options...)
}

// LogfilesRemoteHost represents the logfiles.remote.host node and implements sophos.Node
type LogfilesRemoteHost struct{ Value string }

// Get gets the logfiles.remote.host value from the UTM
func (l *LogfilesRemoteHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.host", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteHost
func (l *LogfilesRemoteHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.host", l.Value, options...)
}

// LogfilesRemotePass represents the logfiles.remote.pass node and implements sophos.Node
type LogfilesRemotePass struct{ Value string }

// Get gets the logfiles.remote.pass value from the UTM
func (l *LogfilesRemotePass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.pass", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemotePass
func (l *LogfilesRemotePass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.pass", l.Value, options...)
}

// LogfilesRemotePath represents the logfiles.remote.path node and implements sophos.Node
type LogfilesRemotePath struct{ Value string }

// Get gets the logfiles.remote.path value from the UTM
func (l *LogfilesRemotePath) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.path", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemotePath
func (l *LogfilesRemotePath) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.path", l.Value, options...)
}

// LogfilesRemoteSmbMaxProtocolLevel represents the logfiles.remote.smb_max_protocol_level node and implements sophos.Node
type LogfilesRemoteSmbMaxProtocolLevel struct{ Value string }

// Get gets the logfiles.remote.smb_max_protocol_level value from the UTM
func (l *LogfilesRemoteSmbMaxProtocolLevel) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.smb_max_protocol_level", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteSmbMaxProtocolLevel
func (l *LogfilesRemoteSmbMaxProtocolLevel) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.smb_max_protocol_level", l.Value, options...)
}

// LogfilesRemoteSmbWorkgroup represents the logfiles.remote.smb_workgroup node and implements sophos.Node
type LogfilesRemoteSmbWorkgroup struct{ Value string }

// Get gets the logfiles.remote.smb_workgroup value from the UTM
func (l *LogfilesRemoteSmbWorkgroup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.smb_workgroup", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteSmbWorkgroup
func (l *LogfilesRemoteSmbWorkgroup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.smb_workgroup", l.Value, options...)
}

// LogfilesRemoteSmtpAddress represents the logfiles.remote.smtp_address node and implements sophos.Node
type LogfilesRemoteSmtpAddress struct{ Value string }

// Get gets the logfiles.remote.smtp_address value from the UTM
func (l *LogfilesRemoteSmtpAddress) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.smtp_address", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteSmtpAddress
func (l *LogfilesRemoteSmtpAddress) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.smtp_address", l.Value, options...)
}

// LogfilesRemoteStatus represents the logfiles.remote.status node and implements sophos.Node
type LogfilesRemoteStatus struct{ Value bool }

// Get gets the logfiles.remote.status value from the UTM
func (l *LogfilesRemoteStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.status", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteStatus
func (l *LogfilesRemoteStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.status", l.Value, options...)
}

// LogfilesRemoteType represents the logfiles.remote.type node and implements sophos.Node
type LogfilesRemoteType struct{ Value string }

// Get gets the logfiles.remote.type value from the UTM
func (l *LogfilesRemoteType) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.type", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteType
func (l *LogfilesRemoteType) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.type", l.Value, options...)
}

// LogfilesRemoteUser represents the logfiles.remote.user node and implements sophos.Node
type LogfilesRemoteUser struct{ Value string }

// Get gets the logfiles.remote.user value from the UTM
func (l *LogfilesRemoteUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/logfiles.remote.user", &l.Value, options...)
}

// Update is syntactic sugar for UpdateLogfilesRemoteUser
func (l *LogfilesRemoteUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/logfiles.remote.user", l.Value, options...)
}

// MasqRules represents the masq.rules node and implements sophos.Node
type MasqRules struct{ Value []string }

// Get gets the masq.rules value from the UTM
func (m *MasqRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/masq.rules", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMasqRules
func (m *MasqRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/masq.rules", m.Value, options...)
}

// MigrationAccessToken represents the migration.access_token node and implements sophos.Node
type MigrationAccessToken struct{ Value string }

// Get gets the migration.access_token value from the UTM
func (m *MigrationAccessToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.access_token", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationAccessToken
func (m *MigrationAccessToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.access_token", m.Value, options...)
}

// MigrationLocalOverride represents the migration.local_override node and implements sophos.Node
type MigrationLocalOverride struct{ Value bool }

// Get gets the migration.local_override value from the UTM
func (m *MigrationLocalOverride) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.local_override", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationLocalOverride
func (m *MigrationLocalOverride) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.local_override", m.Value, options...)
}

// MigrationRefreshToken represents the migration.refresh_token node and implements sophos.Node
type MigrationRefreshToken struct{ Value string }

// Get gets the migration.refresh_token value from the UTM
func (m *MigrationRefreshToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.refresh_token", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationRefreshToken
func (m *MigrationRefreshToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.refresh_token", m.Value, options...)
}

// MigrationTabVisibility represents the migration.tab_visibility node and implements sophos.Node
type MigrationTabVisibility struct{ Value string }

// Get gets the migration.tab_visibility value from the UTM
func (m *MigrationTabVisibility) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.tab_visibility", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationTabVisibility
func (m *MigrationTabVisibility) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.tab_visibility", m.Value, options...)
}

// MigrationToolsetVersion represents the migration.toolset_version node and implements sophos.Node
type MigrationToolsetVersion struct{ Value string }

// Get gets the migration.toolset_version value from the UTM
func (m *MigrationToolsetVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.toolset_version", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationToolsetVersion
func (m *MigrationToolsetVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.toolset_version", m.Value, options...)
}

// MigrationUtmVersion represents the migration.utm_version node and implements sophos.Node
type MigrationUtmVersion struct{ Value string }

// Get gets the migration.utm_version value from the UTM
func (m *MigrationUtmVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/migration.utm_version", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMigrationUtmVersion
func (m *MigrationUtmVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/migration.utm_version", m.Value, options...)
}

// MobileControlCa represents the mobile_control.ca node and implements sophos.Node
type MobileControlCa struct{ Value string }

// Get gets the mobile_control.ca value from the UTM
func (m *MobileControlCa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.ca", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlCa
func (m *MobileControlCa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.ca", m.Value, options...)
}

// MobileControlConfigCisco represents the mobile_control.config.cisco node and implements sophos.Node
type MobileControlConfigCisco struct{ Value bool }

// Get gets the mobile_control.config.cisco value from the UTM
func (m *MobileControlConfigCisco) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.config.cisco", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlConfigCisco
func (m *MobileControlConfigCisco) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.config.cisco", m.Value, options...)
}

// MobileControlConfigEapMethod represents the mobile_control.config.eap_method node and implements sophos.Node
type MobileControlConfigEapMethod struct{ Value string }

// Get gets the mobile_control.config.eap_method value from the UTM
func (m *MobileControlConfigEapMethod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.config.eap_method", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlConfigEapMethod
func (m *MobileControlConfigEapMethod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.config.eap_method", m.Value, options...)
}

// MobileControlConfigForcePush represents the mobile_control.config.force_push node and implements sophos.Node
type MobileControlConfigForcePush struct{ Value bool }

// Get gets the mobile_control.config.force_push value from the UTM
func (m *MobileControlConfigForcePush) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.config.force_push", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlConfigForcePush
func (m *MobileControlConfigForcePush) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.config.force_push", m.Value, options...)
}

// MobileControlConfigL2Tp represents the mobile_control.config.l2tp node and implements sophos.Node
type MobileControlConfigL2Tp struct{ Value bool }

// Get gets the mobile_control.config.l2tp value from the UTM
func (m *MobileControlConfigL2Tp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.config.l2tp", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlConfigL2Tp
func (m *MobileControlConfigL2Tp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.config.l2tp", m.Value, options...)
}

// MobileControlConfigWifiNetworks represents the mobile_control.config.wifi_networks node and implements sophos.Node
type MobileControlConfigWifiNetworks struct{ Value []interface{} }

// Get gets the mobile_control.config.wifi_networks value from the UTM
func (m *MobileControlConfigWifiNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.config.wifi_networks", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlConfigWifiNetworks
func (m *MobileControlConfigWifiNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.config.wifi_networks", m.Value, options...)
}

// MobileControlCustomer represents the mobile_control.customer node and implements sophos.Node
type MobileControlCustomer struct{ Value string }

// Get gets the mobile_control.customer value from the UTM
func (m *MobileControlCustomer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.customer", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlCustomer
func (m *MobileControlCustomer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.customer", m.Value, options...)
}

// MobileControlDebug represents the mobile_control.debug node and implements sophos.Node
type MobileControlDebug struct{ Value bool }

// Get gets the mobile_control.debug value from the UTM
func (m *MobileControlDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.debug", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlDebug
func (m *MobileControlDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.debug", m.Value, options...)
}

// MobileControlNacCisco represents the mobile_control.nac.cisco node and implements sophos.Node
type MobileControlNacCisco struct{ Value bool }

// Get gets the mobile_control.nac.cisco value from the UTM
func (m *MobileControlNacCisco) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.cisco", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacCisco
func (m *MobileControlNacCisco) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.cisco", m.Value, options...)
}

// MobileControlNacDenyAllVpn represents the mobile_control.nac.deny_all_vpn node and implements sophos.Node
type MobileControlNacDenyAllVpn struct{ Value bool }

// Get gets the mobile_control.nac.deny_all_vpn value from the UTM
func (m *MobileControlNacDenyAllVpn) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.deny_all_vpn", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacDenyAllVpn
func (m *MobileControlNacDenyAllVpn) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.deny_all_vpn", m.Value, options...)
}

// MobileControlNacL2Tp represents the mobile_control.nac.l2tp node and implements sophos.Node
type MobileControlNacL2Tp struct{ Value bool }

// Get gets the mobile_control.nac.l2tp value from the UTM
func (m *MobileControlNacL2Tp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.l2tp", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacL2Tp
func (m *MobileControlNacL2Tp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.l2tp", m.Value, options...)
}

// MobileControlNacMacsAllowed represents the mobile_control.nac.macs_allowed node and implements sophos.Node
type MobileControlNacMacsAllowed struct{ Value string }

// Get gets the mobile_control.nac.macs_allowed value from the UTM
func (m *MobileControlNacMacsAllowed) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.macs_allowed", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacMacsAllowed
func (m *MobileControlNacMacsAllowed) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.macs_allowed", m.Value, options...)
}

// MobileControlNacMacsDenied represents the mobile_control.nac.macs_denied node and implements sophos.Node
type MobileControlNacMacsDenied struct{ Value string }

// Get gets the mobile_control.nac.macs_denied value from the UTM
func (m *MobileControlNacMacsDenied) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.macs_denied", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacMacsDenied
func (m *MobileControlNacMacsDenied) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.macs_denied", m.Value, options...)
}

// MobileControlNacPollInterval represents the mobile_control.nac.poll_interval node and implements sophos.Node
type MobileControlNacPollInterval struct{ Value int64 }

// Get gets the mobile_control.nac.poll_interval value from the UTM
func (m *MobileControlNacPollInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.poll_interval", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacPollInterval
func (m *MobileControlNacPollInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.poll_interval", m.Value, options...)
}

// MobileControlNacUsersDenied represents the mobile_control.nac.users_denied node and implements sophos.Node
type MobileControlNacUsersDenied struct{ Value []interface{} }

// Get gets the mobile_control.nac.users_denied value from the UTM
func (m *MobileControlNacUsersDenied) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.users_denied", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacUsersDenied
func (m *MobileControlNacUsersDenied) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.users_denied", m.Value, options...)
}

// MobileControlNacWifiNetworks represents the mobile_control.nac.wifi_networks node and implements sophos.Node
type MobileControlNacWifiNetworks struct{ Value []interface{} }

// Get gets the mobile_control.nac.wifi_networks value from the UTM
func (m *MobileControlNacWifiNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.nac.wifi_networks", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlNacWifiNetworks
func (m *MobileControlNacWifiNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.nac.wifi_networks", m.Value, options...)
}

// MobileControlPassword represents the mobile_control.password node and implements sophos.Node
type MobileControlPassword struct{ Value string }

// Get gets the mobile_control.password value from the UTM
func (m *MobileControlPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.password", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlPassword
func (m *MobileControlPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.password", m.Value, options...)
}

// MobileControlServer represents the mobile_control.server node and implements sophos.Node
type MobileControlServer struct{ Value string }

// Get gets the mobile_control.server value from the UTM
func (m *MobileControlServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.server", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlServer
func (m *MobileControlServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.server", m.Value, options...)
}

// MobileControlStatus represents the mobile_control.status node and implements sophos.Node
type MobileControlStatus struct{ Value bool }

// Get gets the mobile_control.status value from the UTM
func (m *MobileControlStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.status", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlStatus
func (m *MobileControlStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.status", m.Value, options...)
}

// MobileControlUsername represents the mobile_control.username node and implements sophos.Node
type MobileControlUsername struct{ Value string }

// Get gets the mobile_control.username value from the UTM
func (m *MobileControlUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/mobile_control.username", &m.Value, options...)
}

// Update is syntactic sugar for UpdateMobileControlUsername
func (m *MobileControlUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/mobile_control.username", m.Value, options...)
}

// NatEnableCacheAutonat represents the nat.enable_cache_autonat node and implements sophos.Node
type NatEnableCacheAutonat struct{ Value bool }

// Get gets the nat.enable_cache_autonat value from the UTM
func (n *NatEnableCacheAutonat) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/nat.enable_cache_autonat", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNatEnableCacheAutonat
func (n *NatEnableCacheAutonat) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/nat.enable_cache_autonat", n.Value, options...)
}

// NatRules represents the nat.rules node and implements sophos.Node
type NatRules struct{ Value []string }

// Get gets the nat.rules value from the UTM
func (n *NatRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/nat.rules", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNatRules
func (n *NatRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/nat.rules", n.Value, options...)
}

// NotificationsDeviceInfo represents the notifications.device_info node and implements sophos.Node
type NotificationsDeviceInfo struct{ Value string }

// Get gets the notifications.device_info value from the UTM
func (n *NotificationsDeviceInfo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.device_info", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsDeviceInfo
func (n *NotificationsDeviceInfo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.device_info", n.Value, options...)
}

// NotificationsLimiting represents the notifications.limiting node and implements sophos.Node
type NotificationsLimiting struct{ Value bool }

// Get gets the notifications.limiting value from the UTM
func (n *NotificationsLimiting) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.limiting", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsLimiting
func (n *NotificationsLimiting) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.limiting", n.Value, options...)
}

// NotificationsOverlay represents the notifications.overlay node and implements sophos.Node
type NotificationsOverlay struct{ Value []interface{} }

// Get gets the notifications.overlay value from the UTM
func (n *NotificationsOverlay) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.overlay", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsOverlay
func (n *NotificationsOverlay) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.overlay", n.Value, options...)
}

// NotificationsRebootReason represents the notifications.reboot_reason node and implements sophos.Node
type NotificationsRebootReason struct{ Value map[string]interface{} }

// Get gets the notifications.reboot_reason value from the UTM
func (n *NotificationsRebootReason) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.reboot_reason", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsRebootReason
func (n *NotificationsRebootReason) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.reboot_reason", n.Value, options...)
}

// NotificationsRecipients represents the notifications.recipients node and implements sophos.Node
type NotificationsRecipients struct{ Value []string }

// Get gets the notifications.recipients value from the UTM
func (n *NotificationsRecipients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.recipients", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsRecipients
func (n *NotificationsRecipients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.recipients", n.Value, options...)
}

// NotificationsSender represents the notifications.sender node and implements sophos.Node
type NotificationsSender struct{ Value string }

// Get gets the notifications.sender value from the UTM
func (n *NotificationsSender) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.sender", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSender
func (n *NotificationsSender) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.sender", n.Value, options...)
}

// NotificationsSmtpAuthentication represents the notifications.smtp.authentication node and implements sophos.Node
type NotificationsSmtpAuthentication struct{ Value bool }

// Get gets the notifications.smtp.authentication value from the UTM
func (n *NotificationsSmtpAuthentication) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.authentication", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpAuthentication
func (n *NotificationsSmtpAuthentication) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.authentication", n.Value, options...)
}

// NotificationsSmtpPassword represents the notifications.smtp.password node and implements sophos.Node
type NotificationsSmtpPassword struct{ Value string }

// Get gets the notifications.smtp.password value from the UTM
func (n *NotificationsSmtpPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.password", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpPassword
func (n *NotificationsSmtpPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.password", n.Value, options...)
}

// NotificationsSmtpPort represents the notifications.smtp.port node and implements sophos.Node
type NotificationsSmtpPort struct{ Value int64 }

// Get gets the notifications.smtp.port value from the UTM
func (n *NotificationsSmtpPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.port", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpPort
func (n *NotificationsSmtpPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.port", n.Value, options...)
}

// NotificationsSmtpServer represents the notifications.smtp.server node and implements sophos.Node
type NotificationsSmtpServer struct{ Value string }

// Get gets the notifications.smtp.server value from the UTM
func (n *NotificationsSmtpServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.server", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpServer
func (n *NotificationsSmtpServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.server", n.Value, options...)
}

// NotificationsSmtpStatus represents the notifications.smtp.status node and implements sophos.Node
type NotificationsSmtpStatus struct{ Value bool }

// Get gets the notifications.smtp.status value from the UTM
func (n *NotificationsSmtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.status", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpStatus
func (n *NotificationsSmtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.status", n.Value, options...)
}

// NotificationsSmtpTls represents the notifications.smtp.tls node and implements sophos.Node
type NotificationsSmtpTls struct{ Value bool }

// Get gets the notifications.smtp.tls value from the UTM
func (n *NotificationsSmtpTls) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.tls", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpTls
func (n *NotificationsSmtpTls) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.tls", n.Value, options...)
}

// NotificationsSmtpUsername represents the notifications.smtp.username node and implements sophos.Node
type NotificationsSmtpUsername struct{ Value string }

// Get gets the notifications.smtp.username value from the UTM
func (n *NotificationsSmtpUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/notifications.smtp.username", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNotificationsSmtpUsername
func (n *NotificationsSmtpUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/notifications.smtp.username", n.Value, options...)
}

// NtpAllowedNetworks represents the ntp.allowed_networks node and implements sophos.Node
type NtpAllowedNetworks struct{ Value []interface{} }

// Get gets the ntp.allowed_networks value from the UTM
func (n *NtpAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ntp.allowed_networks", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNtpAllowedNetworks
func (n *NtpAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ntp.allowed_networks", n.Value, options...)
}

// NtpServers represents the ntp.servers node and implements sophos.Node
type NtpServers struct{ Value []string }

// Get gets the ntp.servers value from the UTM
func (n *NtpServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ntp.servers", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNtpServers
func (n *NtpServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ntp.servers", n.Value, options...)
}

// NtpStatus represents the ntp.status node and implements sophos.Node
type NtpStatus struct{ Value bool }

// Get gets the ntp.status value from the UTM
func (n *NtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ntp.status", &n.Value, options...)
}

// Update is syntactic sugar for UpdateNtpStatus
func (n *NtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ntp.status", n.Value, options...)
}

// PacketfilterAdvancedBlockInvalidCtPackets represents the packetfilter.advanced.block_invalid_ct_packets node and implements sophos.Node
type PacketfilterAdvancedBlockInvalidCtPackets struct{ Value bool }

// Get gets the packetfilter.advanced.block_invalid_ct_packets value from the UTM
func (p *PacketfilterAdvancedBlockInvalidCtPackets) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.block_invalid_ct_packets", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedBlockInvalidCtPackets
func (p *PacketfilterAdvancedBlockInvalidCtPackets) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.block_invalid_ct_packets", p.Value, options...)
}

// PacketfilterAdvancedCheckPacketLength represents the packetfilter.advanced.check_packet_length node and implements sophos.Node
type PacketfilterAdvancedCheckPacketLength struct{ Value bool }

// Get gets the packetfilter.advanced.check_packet_length value from the UTM
func (p *PacketfilterAdvancedCheckPacketLength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.check_packet_length", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedCheckPacketLength
func (p *PacketfilterAdvancedCheckPacketLength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.check_packet_length", p.Value, options...)
}

// PacketfilterAdvancedConntrackHelpers represents the packetfilter.advanced.conntrack_helpers node and implements sophos.Node
type PacketfilterAdvancedConntrackHelpers struct{ Value []string }

// Get gets the packetfilter.advanced.conntrack_helpers value from the UTM
func (p *PacketfilterAdvancedConntrackHelpers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.conntrack_helpers", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedConntrackHelpers
func (p *PacketfilterAdvancedConntrackHelpers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.conntrack_helpers", p.Value, options...)
}

// PacketfilterAdvancedFtpPorts represents the packetfilter.advanced.ftp_ports node and implements sophos.Node
type PacketfilterAdvancedFtpPorts struct{ Value []int64 }

// Get gets the packetfilter.advanced.ftp_ports value from the UTM
func (p *PacketfilterAdvancedFtpPorts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.ftp_ports", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedFtpPorts
func (p *PacketfilterAdvancedFtpPorts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.ftp_ports", p.Value, options...)
}

// PacketfilterAdvancedIpSetMax represents the packetfilter.advanced.ip_set_max node and implements sophos.Node
type PacketfilterAdvancedIpSetMax struct{ Value int64 }

// Get gets the packetfilter.advanced.ip_set_max value from the UTM
func (p *PacketfilterAdvancedIpSetMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.ip_set_max", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedIpSetMax
func (p *PacketfilterAdvancedIpSetMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.ip_set_max", p.Value, options...)
}

// PacketfilterAdvancedLogBroadcasts represents the packetfilter.advanced.log_broadcasts node and implements sophos.Node
type PacketfilterAdvancedLogBroadcasts struct{ Value bool }

// Get gets the packetfilter.advanced.log_broadcasts value from the UTM
func (p *PacketfilterAdvancedLogBroadcasts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_broadcasts", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogBroadcasts
func (p *PacketfilterAdvancedLogBroadcasts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_broadcasts", p.Value, options...)
}

// PacketfilterAdvancedLogDnsRequests represents the packetfilter.advanced.log_dns_requests node and implements sophos.Node
type PacketfilterAdvancedLogDnsRequests struct{ Value bool }

// Get gets the packetfilter.advanced.log_dns_requests value from the UTM
func (p *PacketfilterAdvancedLogDnsRequests) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_dns_requests", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogDnsRequests
func (p *PacketfilterAdvancedLogDnsRequests) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_dns_requests", p.Value, options...)
}

// PacketfilterAdvancedLogFtpData represents the packetfilter.advanced.log_ftp_data node and implements sophos.Node
type PacketfilterAdvancedLogFtpData struct{ Value bool }

// Get gets the packetfilter.advanced.log_ftp_data value from the UTM
func (p *PacketfilterAdvancedLogFtpData) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_ftp_data", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogFtpData
func (p *PacketfilterAdvancedLogFtpData) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_ftp_data", p.Value, options...)
}

// PacketfilterAdvancedLogInvalid represents the packetfilter.advanced.log_invalid node and implements sophos.Node
type PacketfilterAdvancedLogInvalid struct{ Value map[string]interface{} }

// Get gets the packetfilter.advanced.log_invalid value from the UTM
func (p *PacketfilterAdvancedLogInvalid) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_invalid", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogInvalid
func (p *PacketfilterAdvancedLogInvalid) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_invalid", p.Value, options...)
}

// PacketfilterAdvancedLogMcast represents the packetfilter.advanced.log_mcast node and implements sophos.Node
type PacketfilterAdvancedLogMcast struct{ Value bool }

// Get gets the packetfilter.advanced.log_mcast value from the UTM
func (p *PacketfilterAdvancedLogMcast) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_mcast", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogMcast
func (p *PacketfilterAdvancedLogMcast) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_mcast", p.Value, options...)
}

// PacketfilterAdvancedLogStrictTcpState represents the packetfilter.advanced.log_strict_tcp_state node and implements sophos.Node
type PacketfilterAdvancedLogStrictTcpState struct{ Value string }

// Get gets the packetfilter.advanced.log_strict_tcp_state value from the UTM
func (p *PacketfilterAdvancedLogStrictTcpState) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.log_strict_tcp_state", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedLogStrictTcpState
func (p *PacketfilterAdvancedLogStrictTcpState) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.log_strict_tcp_state", p.Value, options...)
}

// PacketfilterAdvancedNoErrorReplay represents the packetfilter.advanced.no_error_replay node and implements sophos.Node
type PacketfilterAdvancedNoErrorReplay struct{ Value bool }

// Get gets the packetfilter.advanced.no_error_replay value from the UTM
func (p *PacketfilterAdvancedNoErrorReplay) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.no_error_replay", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedNoErrorReplay
func (p *PacketfilterAdvancedNoErrorReplay) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.no_error_replay", p.Value, options...)
}

// PacketfilterAdvancedOptimizeIpset represents the packetfilter.advanced.optimize.ipset node and implements sophos.Node
type PacketfilterAdvancedOptimizeIpset struct{ Value string }

// Get gets the packetfilter.advanced.optimize.ipset value from the UTM
func (p *PacketfilterAdvancedOptimizeIpset) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.optimize.ipset", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedOptimizeIpset
func (p *PacketfilterAdvancedOptimizeIpset) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.optimize.ipset", p.Value, options...)
}

// PacketfilterAdvancedOptimizePorts represents the packetfilter.advanced.optimize.ports node and implements sophos.Node
type PacketfilterAdvancedOptimizePorts struct{ Value bool }

// Get gets the packetfilter.advanced.optimize.ports value from the UTM
func (p *PacketfilterAdvancedOptimizePorts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.optimize.ports", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedOptimizePorts
func (p *PacketfilterAdvancedOptimizePorts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.optimize.ports", p.Value, options...)
}

// PacketfilterAdvancedSpoofProtection represents the packetfilter.advanced.spoof_protection node and implements sophos.Node
type PacketfilterAdvancedSpoofProtection struct{ Value string }

// Get gets the packetfilter.advanced.spoof_protection value from the UTM
func (p *PacketfilterAdvancedSpoofProtection) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.spoof_protection", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedSpoofProtection
func (p *PacketfilterAdvancedSpoofProtection) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.spoof_protection", p.Value, options...)
}

// PacketfilterAdvancedStrictTcpState represents the packetfilter.advanced.strict_tcp_state node and implements sophos.Node
type PacketfilterAdvancedStrictTcpState struct{ Value bool }

// Get gets the packetfilter.advanced.strict_tcp_state value from the UTM
func (p *PacketfilterAdvancedStrictTcpState) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.strict_tcp_state", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedStrictTcpState
func (p *PacketfilterAdvancedStrictTcpState) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.strict_tcp_state", p.Value, options...)
}

// PacketfilterAdvancedTcpMaxRetrans represents the packetfilter.advanced.tcp_max_retrans node and implements sophos.Node
type PacketfilterAdvancedTcpMaxRetrans struct{ Value int64 }

// Get gets the packetfilter.advanced.tcp_max_retrans value from the UTM
func (p *PacketfilterAdvancedTcpMaxRetrans) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.tcp_max_retrans", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedTcpMaxRetrans
func (p *PacketfilterAdvancedTcpMaxRetrans) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.tcp_max_retrans", p.Value, options...)
}

// PacketfilterAdvancedTcpWindowScaling represents the packetfilter.advanced.tcp_window_scaling node and implements sophos.Node
type PacketfilterAdvancedTcpWindowScaling struct{ Value bool }

// Get gets the packetfilter.advanced.tcp_window_scaling value from the UTM
func (p *PacketfilterAdvancedTcpWindowScaling) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.advanced.tcp_window_scaling", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterAdvancedTcpWindowScaling
func (p *PacketfilterAdvancedTcpWindowScaling) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.advanced.tcp_window_scaling", p.Value, options...)
}

// PacketfilterRules represents the packetfilter.rules node and implements sophos.Node
type PacketfilterRules struct{ Value []string }

// Get gets the packetfilter.rules value from the UTM
func (p *PacketfilterRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.rules", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterRules
func (p *PacketfilterRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.rules", p.Value, options...)
}

// PacketfilterRulesAuto represents the packetfilter.rules_auto node and implements sophos.Node
type PacketfilterRulesAuto struct{ Value []string }

// Get gets the packetfilter.rules_auto value from the UTM
func (p *PacketfilterRulesAuto) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.rules_auto", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterRulesAuto
func (p *PacketfilterRulesAuto) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.rules_auto", p.Value, options...)
}

// PacketfilterRulesBack represents the packetfilter.rules_back node and implements sophos.Node
type PacketfilterRulesBack struct{ Value string }

// Get gets the packetfilter.rules_back value from the UTM
func (p *PacketfilterRulesBack) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.rules_back", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterRulesBack
func (p *PacketfilterRulesBack) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.rules_back", p.Value, options...)
}

// PacketfilterRulesFront represents the packetfilter.rules_front node and implements sophos.Node
type PacketfilterRulesFront struct{ Value string }

// Get gets the packetfilter.rules_front value from the UTM
func (p *PacketfilterRulesFront) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.rules_front", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterRulesFront
func (p *PacketfilterRulesFront) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.rules_front", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackGenericTimeout represents the packetfilter.timeouts.ip_conntrack_generic_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackGenericTimeout struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_generic_timeout value from the UTM
func (p *PacketfilterTimeoutsIpConntrackGenericTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_generic_timeout", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackGenericTimeout
func (p *PacketfilterTimeoutsIpConntrackGenericTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_generic_timeout", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackIcmpTimeout represents the packetfilter.timeouts.ip_conntrack_icmp_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackIcmpTimeout struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_icmp_timeout value from the UTM
func (p *PacketfilterTimeoutsIpConntrackIcmpTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_icmp_timeout", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackIcmpTimeout
func (p *PacketfilterTimeoutsIpConntrackIcmpTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_icmp_timeout", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutClose represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_close node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutClose struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_close value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutClose) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_close", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutClose
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutClose) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_close", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutCloseWait) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_close_wait", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_established node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_established value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_established", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutEstablished
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutEstablished) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_established", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutFinWait
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutFinWait) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_fin_wait", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutLastAck
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutLastAck) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_last_ack", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutMaxRetrans) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_max_retrans", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynRecv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_recv", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutSynSent
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutSynSent) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_syn_sent", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait represents the packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait value from the UTM
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait
func (p *PacketfilterTimeoutsIpConntrackTcpTimeoutTimeWait) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_tcp_timeout_time_wait", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackUdpTimeout represents the packetfilter.timeouts.ip_conntrack_udp_timeout node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackUdpTimeout struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_udp_timeout value from the UTM
func (p *PacketfilterTimeoutsIpConntrackUdpTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_udp_timeout", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackUdpTimeout
func (p *PacketfilterTimeoutsIpConntrackUdpTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_udp_timeout", p.Value, options...)
}

// PacketfilterTimeoutsIpConntrackUdpTimeoutStream represents the packetfilter.timeouts.ip_conntrack_udp_timeout_stream node and implements sophos.Node
type PacketfilterTimeoutsIpConntrackUdpTimeoutStream struct{ Value int64 }

// Get gets the packetfilter.timeouts.ip_conntrack_udp_timeout_stream value from the UTM
func (p *PacketfilterTimeoutsIpConntrackUdpTimeoutStream) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_udp_timeout_stream", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePacketfilterTimeoutsIpConntrackUdpTimeoutStream
func (p *PacketfilterTimeoutsIpConntrackUdpTimeoutStream) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/packetfilter.timeouts.ip_conntrack_udp_timeout_stream", p.Value, options...)
}

// PasswdLoginuserClearpass represents the passwd.loginuser.clearpass node and implements sophos.Node
type PasswdLoginuserClearpass struct{ Value string }

// Get gets the passwd.loginuser.clearpass value from the UTM
func (p *PasswdLoginuserClearpass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/passwd.loginuser.clearpass", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePasswdLoginuserClearpass
func (p *PasswdLoginuserClearpass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/passwd.loginuser.clearpass", p.Value, options...)
}

// PasswdLoginuserCryptpass represents the passwd.loginuser.cryptpass node and implements sophos.Node
type PasswdLoginuserCryptpass struct{ Value string }

// Get gets the passwd.loginuser.cryptpass value from the UTM
func (p *PasswdLoginuserCryptpass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/passwd.loginuser.cryptpass", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePasswdLoginuserCryptpass
func (p *PasswdLoginuserCryptpass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/passwd.loginuser.cryptpass", p.Value, options...)
}

// PasswdRootClearpass represents the passwd.root.clearpass node and implements sophos.Node
type PasswdRootClearpass struct{ Value string }

// Get gets the passwd.root.clearpass value from the UTM
func (p *PasswdRootClearpass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/passwd.root.clearpass", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePasswdRootClearpass
func (p *PasswdRootClearpass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/passwd.root.clearpass", p.Value, options...)
}

// PasswdRootCryptpass represents the passwd.root.cryptpass node and implements sophos.Node
type PasswdRootCryptpass struct{ Value string }

// Get gets the passwd.root.cryptpass value from the UTM
func (p *PasswdRootCryptpass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/passwd.root.cryptpass", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePasswdRootCryptpass
func (p *PasswdRootCryptpass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/passwd.root.cryptpass", p.Value, options...)
}

// PdfPaper represents the pdf.paper node and implements sophos.Node
type PdfPaper struct{ Value string }

// Get gets the pdf.paper value from the UTM
func (p *PdfPaper) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pdf.paper", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePdfPaper
func (p *PdfPaper) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pdf.paper", p.Value, options...)
}

// PimSmAutoPfOut represents the pim_sm.auto_pf_out node and implements sophos.Node
type PimSmAutoPfOut struct{ Value string }

// Get gets the pim_sm.auto_pf_out value from the UTM
func (p *PimSmAutoPfOut) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.auto_pf_out", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmAutoPfOut
func (p *PimSmAutoPfOut) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.auto_pf_out", p.Value, options...)
}

// PimSmAutoPfrule represents the pim_sm.auto_pfrule node and implements sophos.Node
type PimSmAutoPfrule struct{ Value bool }

// Get gets the pim_sm.auto_pfrule value from the UTM
func (p *PimSmAutoPfrule) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.auto_pfrule", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmAutoPfrule
func (p *PimSmAutoPfrule) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.auto_pfrule", p.Value, options...)
}

// PimSmDebug represents the pim_sm.debug node and implements sophos.Node
type PimSmDebug struct{ Value bool }

// Get gets the pim_sm.debug value from the UTM
func (p *PimSmDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.debug", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmDebug
func (p *PimSmDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.debug", p.Value, options...)
}

// PimSmEnableSubnetMulticasting represents the pim_sm.enable_subnet_multicasting node and implements sophos.Node
type PimSmEnableSubnetMulticasting struct{ Value bool }

// Get gets the pim_sm.enable_subnet_multicasting value from the UTM
func (p *PimSmEnableSubnetMulticasting) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.enable_subnet_multicasting", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmEnableSubnetMulticasting
func (p *PimSmEnableSubnetMulticasting) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.enable_subnet_multicasting", p.Value, options...)
}

// PimSmInterfaces represents the pim_sm.interfaces node and implements sophos.Node
type PimSmInterfaces struct{ Value []interface{} }

// Get gets the pim_sm.interfaces value from the UTM
func (p *PimSmInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.interfaces", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmInterfaces
func (p *PimSmInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.interfaces", p.Value, options...)
}

// PimSmRpRouters represents the pim_sm.rp_routers node and implements sophos.Node
type PimSmRpRouters struct{ Value []interface{} }

// Get gets the pim_sm.rp_routers value from the UTM
func (p *PimSmRpRouters) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.rp_routers", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmRpRouters
func (p *PimSmRpRouters) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.rp_routers", p.Value, options...)
}

// PimSmSptSwitchBytes represents the pim_sm.spt_switch_bytes node and implements sophos.Node
type PimSmSptSwitchBytes struct{ Value int64 }

// Get gets the pim_sm.spt_switch_bytes value from the UTM
func (p *PimSmSptSwitchBytes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.spt_switch_bytes", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmSptSwitchBytes
func (p *PimSmSptSwitchBytes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.spt_switch_bytes", p.Value, options...)
}

// PimSmSptSwitchStatus represents the pim_sm.spt_switch_status node and implements sophos.Node
type PimSmSptSwitchStatus struct{ Value bool }

// Get gets the pim_sm.spt_switch_status value from the UTM
func (p *PimSmSptSwitchStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.spt_switch_status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmSptSwitchStatus
func (p *PimSmSptSwitchStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.spt_switch_status", p.Value, options...)
}

// PimSmStatus represents the pim_sm.status node and implements sophos.Node
type PimSmStatus struct{ Value bool }

// Get gets the pim_sm.status value from the UTM
func (p *PimSmStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pim_sm.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePimSmStatus
func (p *PimSmStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pim_sm.status", p.Value, options...)
}

// Pop3AllowedClients represents the pop3.allowed_clients node and implements sophos.Node
type Pop3AllowedClients struct{ Value []interface{} }

// Get gets the pop3.allowed_clients value from the UTM
func (p *Pop3AllowedClients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.allowed_clients", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3AllowedClients
func (p *Pop3AllowedClients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.allowed_clients", p.Value, options...)
}

// Pop3AllowedServers represents the pop3.allowed_servers node and implements sophos.Node
type Pop3AllowedServers struct{ Value []string }

// Get gets the pop3.allowed_servers value from the UTM
func (p *Pop3AllowedServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.allowed_servers", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3AllowedServers
func (p *Pop3AllowedServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.allowed_servers", p.Value, options...)
}

// Pop3CffAsMarker represents the pop3.cff_as_marker node and implements sophos.Node
type Pop3CffAsMarker struct{ Value string }

// Get gets the pop3.cff_as_marker value from the UTM
func (p *Pop3CffAsMarker) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.cff_as_marker", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3CffAsMarker
func (p *Pop3CffAsMarker) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.cff_as_marker", p.Value, options...)
}

// Pop3CffAv represents the pop3.cff_av node and implements sophos.Node
type Pop3CffAv struct{ Value bool }

// Get gets the pop3.cff_av value from the UTM
func (p *Pop3CffAv) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.cff_av", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3CffAv
func (p *Pop3CffAv) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.cff_av", p.Value, options...)
}

// Pop3CffAvAction represents the pop3.cff_av_action node and implements sophos.Node
type Pop3CffAvAction struct{ Value string }

// Get gets the pop3.cff_av_action value from the UTM
func (p *Pop3CffAvAction) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.cff_av_action", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3CffAvAction
func (p *Pop3CffAvAction) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.cff_av_action", p.Value, options...)
}

// Pop3CffAvEngines represents the pop3.cff_av_engines node and implements sophos.Node
type Pop3CffAvEngines struct{ Value string }

// Get gets the pop3.cff_av_engines value from the UTM
func (p *Pop3CffAvEngines) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.cff_av_engines", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3CffAvEngines
func (p *Pop3CffAvEngines) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.cff_av_engines", p.Value, options...)
}

// Pop3CffFileExtensions represents the pop3.cff_file_extensions node and implements sophos.Node
type Pop3CffFileExtensions struct{ Value []string }

// Get gets the pop3.cff_file_extensions value from the UTM
func (p *Pop3CffFileExtensions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.cff_file_extensions", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3CffFileExtensions
func (p *Pop3CffFileExtensions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.cff_file_extensions", p.Value, options...)
}

// Pop3DirectlyDeleteQuarantined represents the pop3.directly_delete_quarantined node and implements sophos.Node
type Pop3DirectlyDeleteQuarantined struct{ Value bool }

// Get gets the pop3.directly_delete_quarantined value from the UTM
func (p *Pop3DirectlyDeleteQuarantined) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.directly_delete_quarantined", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3DirectlyDeleteQuarantined
func (p *Pop3DirectlyDeleteQuarantined) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.directly_delete_quarantined", p.Value, options...)
}

// Pop3Exceptions represents the pop3.exceptions node and implements sophos.Node
type Pop3Exceptions struct{ Value []interface{} }

// Get gets the pop3.exceptions value from the UTM
func (p *Pop3Exceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.exceptions", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3Exceptions
func (p *Pop3Exceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.exceptions", p.Value, options...)
}

// Pop3KnownServers represents the pop3.known_servers node and implements sophos.Node
type Pop3KnownServers struct{ Value []interface{} }

// Get gets the pop3.known_servers value from the UTM
func (p *Pop3KnownServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.known_servers", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3KnownServers
func (p *Pop3KnownServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.known_servers", p.Value, options...)
}

// Pop3MaxMessageSize represents the pop3.max_message_size node and implements sophos.Node
type Pop3MaxMessageSize struct{ Value int64 }

// Get gets the pop3.max_message_size value from the UTM
func (p *Pop3MaxMessageSize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.max_message_size", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3MaxMessageSize
func (p *Pop3MaxMessageSize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.max_message_size", p.Value, options...)
}

// Pop3PrefetchingInterval represents the pop3.prefetching.interval node and implements sophos.Node
type Pop3PrefetchingInterval struct{ Value int64 }

// Get gets the pop3.prefetching.interval value from the UTM
func (p *Pop3PrefetchingInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.prefetching.interval", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3PrefetchingInterval
func (p *Pop3PrefetchingInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.prefetching.interval", p.Value, options...)
}

// Pop3PrefetchingOptimizeStorage represents the pop3.prefetching.optimize_storage node and implements sophos.Node
type Pop3PrefetchingOptimizeStorage struct{ Value bool }

// Get gets the pop3.prefetching.optimize_storage value from the UTM
func (p *Pop3PrefetchingOptimizeStorage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.prefetching.optimize_storage", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3PrefetchingOptimizeStorage
func (p *Pop3PrefetchingOptimizeStorage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.prefetching.optimize_storage", p.Value, options...)
}

// Pop3PrefetchingStatus represents the pop3.prefetching.status node and implements sophos.Node
type Pop3PrefetchingStatus struct{ Value bool }

// Get gets the pop3.prefetching.status value from the UTM
func (p *Pop3PrefetchingStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.prefetching.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3PrefetchingStatus
func (p *Pop3PrefetchingStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.prefetching.status", p.Value, options...)
}

// Pop3PrefetchingStorageMinHoldDays represents the pop3.prefetching.storage_min_hold_days node and implements sophos.Node
type Pop3PrefetchingStorageMinHoldDays struct{ Value int64 }

// Get gets the pop3.prefetching.storage_min_hold_days value from the UTM
func (p *Pop3PrefetchingStorageMinHoldDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.prefetching.storage_min_hold_days", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3PrefetchingStorageMinHoldDays
func (p *Pop3PrefetchingStorageMinHoldDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.prefetching.storage_min_hold_days", p.Value, options...)
}

// Pop3QuarantineUnscannable represents the pop3.quarantine_unscannable node and implements sophos.Node
type Pop3QuarantineUnscannable struct{ Value bool }

// Get gets the pop3.quarantine_unscannable value from the UTM
func (p *Pop3QuarantineUnscannable) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.quarantine_unscannable", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3QuarantineUnscannable
func (p *Pop3QuarantineUnscannable) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.quarantine_unscannable", p.Value, options...)
}

// Pop3SandboxMaxFilesizeMb represents the pop3.sandbox_max_filesize_mb node and implements sophos.Node
type Pop3SandboxMaxFilesizeMb struct{ Value int64 }

// Get gets the pop3.sandbox_max_filesize_mb value from the UTM
func (p *Pop3SandboxMaxFilesizeMb) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.sandbox_max_filesize_mb", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3SandboxMaxFilesizeMb
func (p *Pop3SandboxMaxFilesizeMb) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.sandbox_max_filesize_mb", p.Value, options...)
}

// Pop3SandboxScanStatus represents the pop3.sandbox_scan_status node and implements sophos.Node
type Pop3SandboxScanStatus struct{ Value bool }

// Get gets the pop3.sandbox_scan_status value from the UTM
func (p *Pop3SandboxScanStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.sandbox_scan_status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3SandboxScanStatus
func (p *Pop3SandboxScanStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.sandbox_scan_status", p.Value, options...)
}

// Pop3ScanTls represents the pop3.scan_tls node and implements sophos.Node
type Pop3ScanTls struct{ Value bool }

// Get gets the pop3.scan_tls value from the UTM
func (p *Pop3ScanTls) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.scan_tls", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3ScanTls
func (p *Pop3ScanTls) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.scan_tls", p.Value, options...)
}

// Pop3SenderBlacklist represents the pop3.sender_blacklist node and implements sophos.Node
type Pop3SenderBlacklist struct{ Value []interface{} }

// Get gets the pop3.sender_blacklist value from the UTM
func (p *Pop3SenderBlacklist) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.sender_blacklist", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3SenderBlacklist
func (p *Pop3SenderBlacklist) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.sender_blacklist", p.Value, options...)
}

// Pop3Spam represents the pop3.spam node and implements sophos.Node
type Pop3Spam struct{ Value string }

// Get gets the pop3.spam value from the UTM
func (p *Pop3Spam) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.spam", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3Spam
func (p *Pop3Spam) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.spam", p.Value, options...)
}

// Pop3SpamExpressions represents the pop3.spam_expressions node and implements sophos.Node
type Pop3SpamExpressions struct{ Value []interface{} }

// Get gets the pop3.spam_expressions value from the UTM
func (p *Pop3SpamExpressions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.spam_expressions", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3SpamExpressions
func (p *Pop3SpamExpressions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.spam_expressions", p.Value, options...)
}

// Pop3Spamplus represents the pop3.spamplus node and implements sophos.Node
type Pop3Spamplus struct{ Value string }

// Get gets the pop3.spamplus value from the UTM
func (p *Pop3Spamplus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.spamplus", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3Spamplus
func (p *Pop3Spamplus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.spamplus", p.Value, options...)
}

// Pop3Spamstatus represents the pop3.spamstatus node and implements sophos.Node
type Pop3Spamstatus struct{ Value bool }

// Get gets the pop3.spamstatus value from the UTM
func (p *Pop3Spamstatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.spamstatus", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3Spamstatus
func (p *Pop3Spamstatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.spamstatus", p.Value, options...)
}

// Pop3Status represents the pop3.status node and implements sophos.Node
type Pop3Status struct{ Value bool }

// Get gets the pop3.status value from the UTM
func (p *Pop3Status) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3Status
func (p *Pop3Status) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.status", p.Value, options...)
}

// Pop3TlsCert represents the pop3.tls_cert node and implements sophos.Node
type Pop3TlsCert struct{ Value string }

// Get gets the pop3.tls_cert value from the UTM
func (p *Pop3TlsCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.tls_cert", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3TlsCert
func (p *Pop3TlsCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.tls_cert", p.Value, options...)
}

// Pop3TransparentSkip represents the pop3.transparent_skip node and implements sophos.Node
type Pop3TransparentSkip struct{ Value []interface{} }

// Get gets the pop3.transparent_skip value from the UTM
func (p *Pop3TransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.transparent_skip", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3TransparentSkip
func (p *Pop3TransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.transparent_skip", p.Value, options...)
}

// Pop3TransparentSkipAutoPf represents the pop3.transparent_skip_auto_pf node and implements sophos.Node
type Pop3TransparentSkipAutoPf struct{ Value bool }

// Get gets the pop3.transparent_skip_auto_pf value from the UTM
func (p *Pop3TransparentSkipAutoPf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.transparent_skip_auto_pf", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3TransparentSkipAutoPf
func (p *Pop3TransparentSkipAutoPf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.transparent_skip_auto_pf", p.Value, options...)
}

// Pop3UserCharset represents the pop3.user_charset node and implements sophos.Node
type Pop3UserCharset struct{ Value string }

// Get gets the pop3.user_charset value from the UTM
func (p *Pop3UserCharset) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/pop3.user_charset", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePop3UserCharset
func (p *Pop3UserCharset) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/pop3.user_charset", p.Value, options...)
}

// PortalAllowAnyUser represents the portal.allow_any_user node and implements sophos.Node
type PortalAllowAnyUser struct{ Value bool }

// Get gets the portal.allow_any_user value from the UTM
func (p *PortalAllowAnyUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.allow_any_user", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalAllowAnyUser
func (p *PortalAllowAnyUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.allow_any_user", p.Value, options...)
}

// PortalAllowedNetworks represents the portal.allowed_networks node and implements sophos.Node
type PortalAllowedNetworks struct{ Value []string }

// Get gets the portal.allowed_networks value from the UTM
func (p *PortalAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.allowed_networks", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalAllowedNetworks
func (p *PortalAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.allowed_networks", p.Value, options...)
}

// PortalAllowedUsers represents the portal.allowed_users node and implements sophos.Node
type PortalAllowedUsers struct{ Value []interface{} }

// Get gets the portal.allowed_users value from the UTM
func (p *PortalAllowedUsers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.allowed_users", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalAllowedUsers
func (p *PortalAllowedUsers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.allowed_users", p.Value, options...)
}

// PortalCert represents the portal.cert node and implements sophos.Node
type PortalCert struct{ Value string }

// Get gets the portal.cert value from the UTM
func (p *PortalCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.cert", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalCert
func (p *PortalCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.cert", p.Value, options...)
}

// PortalHideItems represents the portal.hide_items node and implements sophos.Node
type PortalHideItems struct{ Value []interface{} }

// Get gets the portal.hide_items value from the UTM
func (p *PortalHideItems) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.hide_items", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalHideItems
func (p *PortalHideItems) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.hide_items", p.Value, options...)
}

// PortalHostname represents the portal.hostname node and implements sophos.Node
type PortalHostname struct{ Value string }

// Get gets the portal.hostname value from the UTM
func (p *PortalHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.hostname", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalHostname
func (p *PortalHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.hostname", p.Value, options...)
}

// PortalInterfaceAddress represents the portal.interface_address node and implements sophos.Node
type PortalInterfaceAddress struct{ Value string }

// Get gets the portal.interface_address value from the UTM
func (p *PortalInterfaceAddress) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.interface_address", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalInterfaceAddress
func (p *PortalInterfaceAddress) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.interface_address", p.Value, options...)
}

// PortalLanguage represents the portal.language node and implements sophos.Node
type PortalLanguage struct{ Value string }

// Get gets the portal.language value from the UTM
func (p *PortalLanguage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.language", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalLanguage
func (p *PortalLanguage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.language", p.Value, options...)
}

// PortalPersistentCookies represents the portal.persistent_cookies node and implements sophos.Node
type PortalPersistentCookies struct{ Value bool }

// Get gets the portal.persistent_cookies value from the UTM
func (p *PortalPersistentCookies) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.persistent_cookies", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalPersistentCookies
func (p *PortalPersistentCookies) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.persistent_cookies", p.Value, options...)
}

// PortalPort represents the portal.port node and implements sophos.Node
type PortalPort struct{ Value int64 }

// Get gets the portal.port value from the UTM
func (p *PortalPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.port", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalPort
func (p *PortalPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.port", p.Value, options...)
}

// PortalStatus represents the portal.status node and implements sophos.Node
type PortalStatus struct{ Value bool }

// Get gets the portal.status value from the UTM
func (p *PortalStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalStatus
func (p *PortalStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.status", p.Value, options...)
}

// PortalWelcomeMsg represents the portal.welcome_msg node and implements sophos.Node
type PortalWelcomeMsg struct{ Value string }

// Get gets the portal.welcome_msg value from the UTM
func (p *PortalWelcomeMsg) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/portal.welcome_msg", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePortalWelcomeMsg
func (p *PortalWelcomeMsg) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/portal.welcome_msg", p.Value, options...)
}

// PsdAction represents the psd.action node and implements sophos.Node
type PsdAction struct{ Value string }

// Get gets the psd.action value from the UTM
func (p *PsdAction) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.action", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdAction
func (p *PsdAction) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.action", p.Value, options...)
}

// PsdDelayThreshold represents the psd.delay_threshold node and implements sophos.Node
type PsdDelayThreshold struct{ Value int64 }

// Get gets the psd.delay_threshold value from the UTM
func (p *PsdDelayThreshold) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.delay_threshold", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdDelayThreshold
func (p *PsdDelayThreshold) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.delay_threshold", p.Value, options...)
}

// PsdHiPortsWeight represents the psd.hi_ports_weight node and implements sophos.Node
type PsdHiPortsWeight struct{ Value int64 }

// Get gets the psd.hi_ports_weight value from the UTM
func (p *PsdHiPortsWeight) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.hi_ports_weight", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdHiPortsWeight
func (p *PsdHiPortsWeight) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.hi_ports_weight", p.Value, options...)
}

// PsdLoPortsWeight represents the psd.lo_ports_weight node and implements sophos.Node
type PsdLoPortsWeight struct{ Value int64 }

// Get gets the psd.lo_ports_weight value from the UTM
func (p *PsdLoPortsWeight) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.lo_ports_weight", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdLoPortsWeight
func (p *PsdLoPortsWeight) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.lo_ports_weight", p.Value, options...)
}

// PsdLogLimiterBurst represents the psd.log_limiter.burst node and implements sophos.Node
type PsdLogLimiterBurst struct{ Value int64 }

// Get gets the psd.log_limiter.burst value from the UTM
func (p *PsdLogLimiterBurst) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.log_limiter.burst", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdLogLimiterBurst
func (p *PsdLogLimiterBurst) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.log_limiter.burst", p.Value, options...)
}

// PsdLogLimiterRate represents the psd.log_limiter.rate node and implements sophos.Node
type PsdLogLimiterRate struct{ Value int64 }

// Get gets the psd.log_limiter.rate value from the UTM
func (p *PsdLogLimiterRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.log_limiter.rate", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdLogLimiterRate
func (p *PsdLogLimiterRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.log_limiter.rate", p.Value, options...)
}

// PsdLogLimiterStatus represents the psd.log_limiter.status node and implements sophos.Node
type PsdLogLimiterStatus struct{ Value bool }

// Get gets the psd.log_limiter.status value from the UTM
func (p *PsdLogLimiterStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.log_limiter.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdLogLimiterStatus
func (p *PsdLogLimiterStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.log_limiter.status", p.Value, options...)
}

// PsdStatus represents the psd.status node and implements sophos.Node
type PsdStatus struct{ Value bool }

// Get gets the psd.status value from the UTM
func (p *PsdStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.status", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdStatus
func (p *PsdStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.status", p.Value, options...)
}

// PsdWeightThreshold represents the psd.weight_threshold node and implements sophos.Node
type PsdWeightThreshold struct{ Value int64 }

// Get gets the psd.weight_threshold value from the UTM
func (p *PsdWeightThreshold) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/psd.weight_threshold", &p.Value, options...)
}

// Update is syntactic sugar for UpdatePsdWeightThreshold
func (p *PsdWeightThreshold) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/psd.weight_threshold", p.Value, options...)
}

// QosAdvancedEcn represents the qos.advanced.ecn node and implements sophos.Node
type QosAdvancedEcn struct{ Value int64 }

// Get gets the qos.advanced.ecn value from the UTM
func (q *QosAdvancedEcn) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/qos.advanced.ecn", &q.Value, options...)
}

// Update is syntactic sugar for UpdateQosAdvancedEcn
func (q *QosAdvancedEcn) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/qos.advanced.ecn", q.Value, options...)
}

// QosAdvancedKeepClassAfterEncap represents the qos.advanced.keep_class_after_encap node and implements sophos.Node
type QosAdvancedKeepClassAfterEncap struct{ Value bool }

// Get gets the qos.advanced.keep_class_after_encap value from the UTM
func (q *QosAdvancedKeepClassAfterEncap) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/qos.advanced.keep_class_after_encap", &q.Value, options...)
}

// Update is syntactic sugar for UpdateQosAdvancedKeepClassAfterEncap
func (q *QosAdvancedKeepClassAfterEncap) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/qos.advanced.keep_class_after_encap", q.Value, options...)
}

// QosInterfaces represents the qos.interfaces node and implements sophos.Node
type QosInterfaces struct{ Value []string }

// Get gets the qos.interfaces value from the UTM
func (q *QosInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/qos.interfaces", &q.Value, options...)
}

// Update is syntactic sugar for UpdateQosInterfaces
func (q *QosInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/qos.interfaces", q.Value, options...)
}

// QuarantineKeepDbLogDays represents the quarantine.keep_db_log_days node and implements sophos.Node
type QuarantineKeepDbLogDays struct{ Value int64 }

// Get gets the quarantine.keep_db_log_days value from the UTM
func (q *QuarantineKeepDbLogDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/quarantine.keep_db_log_days", &q.Value, options...)
}

// Update is syntactic sugar for UpdateQuarantineKeepDbLogDays
func (q *QuarantineKeepDbLogDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/quarantine.keep_db_log_days", q.Value, options...)
}

// QuarantineKeepQuarantineDays represents the quarantine.keep_quarantine_days node and implements sophos.Node
type QuarantineKeepQuarantineDays struct{ Value int64 }

// Get gets the quarantine.keep_quarantine_days value from the UTM
func (q *QuarantineKeepQuarantineDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/quarantine.keep_quarantine_days", &q.Value, options...)
}

// Update is syntactic sugar for UpdateQuarantineKeepQuarantineDays
func (q *QuarantineKeepQuarantineDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/quarantine.keep_quarantine_days", q.Value, options...)
}

// RedActivateProvFw represents the red.activate_prov_fw node and implements sophos.Node
type RedActivateProvFw struct{ Value bool }

// Get gets the red.activate_prov_fw value from the UTM
func (r *RedActivateProvFw) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.activate_prov_fw", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedActivateProvFw
func (r *RedActivateProvFw) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.activate_prov_fw", r.Value, options...)
}

// RedAuthorization represents the red.authorization node and implements sophos.Node
type RedAuthorization struct{ Value bool }

// Get gets the red.authorization value from the UTM
func (r *RedAuthorization) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.authorization", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedAuthorization
func (r *RedAuthorization) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.authorization", r.Value, options...)
}

// RedCaSettingsCity represents the red.ca_settings.city node and implements sophos.Node
type RedCaSettingsCity struct{ Value string }

// Get gets the red.ca_settings.city value from the UTM
func (r *RedCaSettingsCity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.ca_settings.city", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedCaSettingsCity
func (r *RedCaSettingsCity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.ca_settings.city", r.Value, options...)
}

// RedCaSettingsCountry represents the red.ca_settings.country node and implements sophos.Node
type RedCaSettingsCountry struct{ Value string }

// Get gets the red.ca_settings.country value from the UTM
func (r *RedCaSettingsCountry) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.ca_settings.country", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedCaSettingsCountry
func (r *RedCaSettingsCountry) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.ca_settings.country", r.Value, options...)
}

// RedCaSettingsEmail represents the red.ca_settings.email node and implements sophos.Node
type RedCaSettingsEmail struct{ Value string }

// Get gets the red.ca_settings.email value from the UTM
func (r *RedCaSettingsEmail) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.ca_settings.email", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedCaSettingsEmail
func (r *RedCaSettingsEmail) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.ca_settings.email", r.Value, options...)
}

// RedCaSettingsOrganization represents the red.ca_settings.organization node and implements sophos.Node
type RedCaSettingsOrganization struct{ Value string }

// Get gets the red.ca_settings.organization value from the UTM
func (r *RedCaSettingsOrganization) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.ca_settings.organization", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedCaSettingsOrganization
func (r *RedCaSettingsOrganization) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.ca_settings.organization", r.Value, options...)
}

// RedClients represents the red.clients node and implements sophos.Node
type RedClients struct{ Value []interface{} }

// Get gets the red.clients value from the UTM
func (r *RedClients) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.clients", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedClients
func (r *RedClients) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.clients", r.Value, options...)
}

// RedDeauthTimeout represents the red.deauth_timeout node and implements sophos.Node
type RedDeauthTimeout struct{ Value string }

// Get gets the red.deauth_timeout value from the UTM
func (r *RedDeauthTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.deauth_timeout", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedDeauthTimeout
func (r *RedDeauthTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.deauth_timeout", r.Value, options...)
}

// RedOverlayFwEnabled represents the red.overlay_fw_enabled node and implements sophos.Node
type RedOverlayFwEnabled struct{ Value bool }

// Get gets the red.overlay_fw_enabled value from the UTM
func (r *RedOverlayFwEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.overlay_fw_enabled", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedOverlayFwEnabled
func (r *RedOverlayFwEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.overlay_fw_enabled", r.Value, options...)
}

// RedRegistryCert represents the red.registry_cert node and implements sophos.Node
type RedRegistryCert struct{ Value string }

// Get gets the red.registry_cert value from the UTM
func (r *RedRegistryCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.registry_cert", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedRegistryCert
func (r *RedRegistryCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.registry_cert", r.Value, options...)
}

// RedRegistryId represents the red.registry_id node and implements sophos.Node
type RedRegistryId struct{ Value string }

// Get gets the red.registry_id value from the UTM
func (r *RedRegistryId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.registry_id", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedRegistryId
func (r *RedRegistryId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.registry_id", r.Value, options...)
}

// RedRegistryKey represents the red.registry_key node and implements sophos.Node
type RedRegistryKey struct{ Value string }

// Get gets the red.registry_key value from the UTM
func (r *RedRegistryKey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.registry_key", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedRegistryKey
func (r *RedRegistryKey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.registry_key", r.Value, options...)
}

// RedReshowEula represents the red.reshow_eula node and implements sophos.Node
type RedReshowEula struct{ Value bool }

// Get gets the red.reshow_eula value from the UTM
func (r *RedReshowEula) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.reshow_eula", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedReshowEula
func (r *RedReshowEula) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.reshow_eula", r.Value, options...)
}

// RedServerCert represents the red.server_cert node and implements sophos.Node
type RedServerCert struct{ Value string }

// Get gets the red.server_cert value from the UTM
func (r *RedServerCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.server_cert", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedServerCert
func (r *RedServerCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.server_cert", r.Value, options...)
}

// RedServers represents the red.servers node and implements sophos.Node
type RedServers struct{ Value []interface{} }

// Get gets the red.servers value from the UTM
func (r *RedServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.servers", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedServers
func (r *RedServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.servers", r.Value, options...)
}

// RedStatus represents the red.status node and implements sophos.Node
type RedStatus struct{ Value bool }

// Get gets the red.status value from the UTM
func (r *RedStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedStatus
func (r *RedStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.status", r.Value, options...)
}

// RedTls12Only represents the red.tls_1_2_only node and implements sophos.Node
type RedTls12Only struct{ Value bool }

// Get gets the red.tls_1_2_only value from the UTM
func (r *RedTls12Only) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.tls_1_2_only", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedTls12Only
func (r *RedTls12Only) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.tls_1_2_only", r.Value, options...)
}

// RedUseUnifiedFirmware represents the red.use_unified_firmware node and implements sophos.Node
type RedUseUnifiedFirmware struct{ Value bool }

// Get gets the red.use_unified_firmware value from the UTM
func (r *RedUseUnifiedFirmware) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/red.use_unified_firmware", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRedUseUnifiedFirmware
func (r *RedUseUnifiedFirmware) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/red.use_unified_firmware", r.Value, options...)
}

// RemoteAccessAdvancedMsdns1 represents the remote_access.advanced.msdns1 node and implements sophos.Node
type RemoteAccessAdvancedMsdns1 struct{ Value string }

// Get gets the remote_access.advanced.msdns1 value from the UTM
func (r *RemoteAccessAdvancedMsdns1) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.advanced.msdns1", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessAdvancedMsdns1
func (r *RemoteAccessAdvancedMsdns1) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.advanced.msdns1", r.Value, options...)
}

// RemoteAccessAdvancedMsdns2 represents the remote_access.advanced.msdns2 node and implements sophos.Node
type RemoteAccessAdvancedMsdns2 struct{ Value string }

// Get gets the remote_access.advanced.msdns2 value from the UTM
func (r *RemoteAccessAdvancedMsdns2) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.advanced.msdns2", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessAdvancedMsdns2
func (r *RemoteAccessAdvancedMsdns2) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.advanced.msdns2", r.Value, options...)
}

// RemoteAccessAdvancedMsdomain represents the remote_access.advanced.msdomain node and implements sophos.Node
type RemoteAccessAdvancedMsdomain struct{ Value string }

// Get gets the remote_access.advanced.msdomain value from the UTM
func (r *RemoteAccessAdvancedMsdomain) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.advanced.msdomain", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessAdvancedMsdomain
func (r *RemoteAccessAdvancedMsdomain) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.advanced.msdomain", r.Value, options...)
}

// RemoteAccessAdvancedMswins1 represents the remote_access.advanced.mswins1 node and implements sophos.Node
type RemoteAccessAdvancedMswins1 struct{ Value string }

// Get gets the remote_access.advanced.mswins1 value from the UTM
func (r *RemoteAccessAdvancedMswins1) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.advanced.mswins1", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessAdvancedMswins1
func (r *RemoteAccessAdvancedMswins1) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.advanced.mswins1", r.Value, options...)
}

// RemoteAccessAdvancedMswins2 represents the remote_access.advanced.mswins2 node and implements sophos.Node
type RemoteAccessAdvancedMswins2 struct{ Value string }

// Get gets the remote_access.advanced.mswins2 value from the UTM
func (r *RemoteAccessAdvancedMswins2) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.advanced.mswins2", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessAdvancedMswins2
func (r *RemoteAccessAdvancedMswins2) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.advanced.mswins2", r.Value, options...)
}

// RemoteAccessCisco represents the remote_access.cisco node and implements sophos.Node
type RemoteAccessCisco struct{ Value string }

// Get gets the remote_access.cisco value from the UTM
func (r *RemoteAccessCisco) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.cisco", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessCisco
func (r *RemoteAccessCisco) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.cisco", r.Value, options...)
}

// RemoteAccessClientlessVpnDebug represents the remote_access.clientless_vpn.debug node and implements sophos.Node
type RemoteAccessClientlessVpnDebug struct{ Value bool }

// Get gets the remote_access.clientless_vpn.debug value from the UTM
func (r *RemoteAccessClientlessVpnDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.clientless_vpn.debug", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessClientlessVpnDebug
func (r *RemoteAccessClientlessVpnDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.clientless_vpn.debug", r.Value, options...)
}

// RemoteAccessClientlessVpnStatus represents the remote_access.clientless_vpn.status node and implements sophos.Node
type RemoteAccessClientlessVpnStatus struct{ Value bool }

// Get gets the remote_access.clientless_vpn.status value from the UTM
func (r *RemoteAccessClientlessVpnStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.clientless_vpn.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessClientlessVpnStatus
func (r *RemoteAccessClientlessVpnStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.clientless_vpn.status", r.Value, options...)
}

// RemoteAccessL2Tp represents the remote_access.l2tp node and implements sophos.Node
type RemoteAccessL2Tp struct{ Value string }

// Get gets the remote_access.l2tp value from the UTM
func (r *RemoteAccessL2Tp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.l2tp", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessL2Tp
func (r *RemoteAccessL2Tp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.l2tp", r.Value, options...)
}

// RemoteAccessPptpAaa represents the remote_access.pptp.aaa node and implements sophos.Node
type RemoteAccessPptpAaa struct{ Value []string }

// Get gets the remote_access.pptp.aaa value from the UTM
func (r *RemoteAccessPptpAaa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.aaa", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpAaa
func (r *RemoteAccessPptpAaa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.aaa", r.Value, options...)
}

// RemoteAccessPptpAuthentication represents the remote_access.pptp.authentication node and implements sophos.Node
type RemoteAccessPptpAuthentication struct{ Value string }

// Get gets the remote_access.pptp.authentication value from the UTM
func (r *RemoteAccessPptpAuthentication) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.authentication", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpAuthentication
func (r *RemoteAccessPptpAuthentication) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.authentication", r.Value, options...)
}

// RemoteAccessPptpDebug represents the remote_access.pptp.debug node and implements sophos.Node
type RemoteAccessPptpDebug struct{ Value bool }

// Get gets the remote_access.pptp.debug value from the UTM
func (r *RemoteAccessPptpDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.debug", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpDebug
func (r *RemoteAccessPptpDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.debug", r.Value, options...)
}

// RemoteAccessPptpEncryption represents the remote_access.pptp.encryption node and implements sophos.Node
type RemoteAccessPptpEncryption struct{ Value string }

// Get gets the remote_access.pptp.encryption value from the UTM
func (r *RemoteAccessPptpEncryption) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.encryption", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpEncryption
func (r *RemoteAccessPptpEncryption) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.encryption", r.Value, options...)
}

// RemoteAccessPptpIpAssignmentDhcp represents the remote_access.pptp.ip_assignment_dhcp node and implements sophos.Node
type RemoteAccessPptpIpAssignmentDhcp struct{ Value string }

// Get gets the remote_access.pptp.ip_assignment_dhcp value from the UTM
func (r *RemoteAccessPptpIpAssignmentDhcp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.ip_assignment_dhcp", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIpAssignmentDhcp
func (r *RemoteAccessPptpIpAssignmentDhcp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.ip_assignment_dhcp", r.Value, options...)
}

// RemoteAccessPptpIpAssignmentDhcpInterface represents the remote_access.pptp.ip_assignment_dhcp_interface node and implements sophos.Node
type RemoteAccessPptpIpAssignmentDhcpInterface struct{ Value string }

// Get gets the remote_access.pptp.ip_assignment_dhcp_interface value from the UTM
func (r *RemoteAccessPptpIpAssignmentDhcpInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.ip_assignment_dhcp_interface", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIpAssignmentDhcpInterface
func (r *RemoteAccessPptpIpAssignmentDhcpInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.ip_assignment_dhcp_interface", r.Value, options...)
}

// RemoteAccessPptpIpAssignmentMode represents the remote_access.pptp.ip_assignment_mode node and implements sophos.Node
type RemoteAccessPptpIpAssignmentMode struct{ Value string }

// Get gets the remote_access.pptp.ip_assignment_mode value from the UTM
func (r *RemoteAccessPptpIpAssignmentMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.ip_assignment_mode", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIpAssignmentMode
func (r *RemoteAccessPptpIpAssignmentMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.ip_assignment_mode", r.Value, options...)
}

// RemoteAccessPptpIpAssignmentPool represents the remote_access.pptp.ip_assignment_pool node and implements sophos.Node
type RemoteAccessPptpIpAssignmentPool struct{ Value string }

// Get gets the remote_access.pptp.ip_assignment_pool value from the UTM
func (r *RemoteAccessPptpIpAssignmentPool) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.ip_assignment_pool", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIpAssignmentPool
func (r *RemoteAccessPptpIpAssignmentPool) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.ip_assignment_pool", r.Value, options...)
}

// RemoteAccessPptpIphoneConnectionName represents the remote_access.pptp.iphone_connection_name node and implements sophos.Node
type RemoteAccessPptpIphoneConnectionName struct{ Value string }

// Get gets the remote_access.pptp.iphone_connection_name value from the UTM
func (r *RemoteAccessPptpIphoneConnectionName) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.iphone_connection_name", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIphoneConnectionName
func (r *RemoteAccessPptpIphoneConnectionName) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.iphone_connection_name", r.Value, options...)
}

// RemoteAccessPptpIphoneHostname represents the remote_access.pptp.iphone_hostname node and implements sophos.Node
type RemoteAccessPptpIphoneHostname struct{ Value string }

// Get gets the remote_access.pptp.iphone_hostname value from the UTM
func (r *RemoteAccessPptpIphoneHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.iphone_hostname", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIphoneHostname
func (r *RemoteAccessPptpIphoneHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.iphone_hostname", r.Value, options...)
}

// RemoteAccessPptpIphoneStatus represents the remote_access.pptp.iphone_status node and implements sophos.Node
type RemoteAccessPptpIphoneStatus struct{ Value bool }

// Get gets the remote_access.pptp.iphone_status value from the UTM
func (r *RemoteAccessPptpIphoneStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.iphone_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpIphoneStatus
func (r *RemoteAccessPptpIphoneStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.iphone_status", r.Value, options...)
}

// RemoteAccessPptpMtu represents the remote_access.pptp.mtu node and implements sophos.Node
type RemoteAccessPptpMtu struct{ Value int64 }

// Get gets the remote_access.pptp.mtu value from the UTM
func (r *RemoteAccessPptpMtu) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.mtu", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpMtu
func (r *RemoteAccessPptpMtu) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.mtu", r.Value, options...)
}

// RemoteAccessPptpStatus represents the remote_access.pptp.status node and implements sophos.Node
type RemoteAccessPptpStatus struct{ Value bool }

// Get gets the remote_access.pptp.status value from the UTM
func (r *RemoteAccessPptpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_access.pptp.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteAccessPptpStatus
func (r *RemoteAccessPptpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_access.pptp.status", r.Value, options...)
}

// RemoteSyslogBuffer represents the remote_syslog.buffer node and implements sophos.Node
type RemoteSyslogBuffer struct{ Value int64 }

// Get gets the remote_syslog.buffer value from the UTM
func (r *RemoteSyslogBuffer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_syslog.buffer", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteSyslogBuffer
func (r *RemoteSyslogBuffer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_syslog.buffer", r.Value, options...)
}

// RemoteSyslogLogs represents the remote_syslog.logs node and implements sophos.Node
type RemoteSyslogLogs struct{ Value []interface{} }

// Get gets the remote_syslog.logs value from the UTM
func (r *RemoteSyslogLogs) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_syslog.logs", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteSyslogLogs
func (r *RemoteSyslogLogs) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_syslog.logs", r.Value, options...)
}

// RemoteSyslogStatus represents the remote_syslog.status node and implements sophos.Node
type RemoteSyslogStatus struct{ Value bool }

// Get gets the remote_syslog.status value from the UTM
func (r *RemoteSyslogStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_syslog.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteSyslogStatus
func (r *RemoteSyslogStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_syslog.status", r.Value, options...)
}

// RemoteSyslogTarget represents the remote_syslog.target node and implements sophos.Node
type RemoteSyslogTarget struct{ Value []interface{} }

// Get gets the remote_syslog.target value from the UTM
func (r *RemoteSyslogTarget) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_syslog.target", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteSyslogTarget
func (r *RemoteSyslogTarget) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_syslog.target", r.Value, options...)
}

// RemoteSyslogTimeReopen represents the remote_syslog.time_reopen node and implements sophos.Node
type RemoteSyslogTimeReopen struct{ Value int64 }

// Get gets the remote_syslog.time_reopen value from the UTM
func (r *RemoteSyslogTimeReopen) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/remote_syslog.time_reopen", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRemoteSyslogTimeReopen
func (r *RemoteSyslogTimeReopen) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/remote_syslog.time_reopen", r.Value, options...)
}

// ReportingAccountingKeepdays represents the reporting.accounting_keepdays node and implements sophos.Node
type ReportingAccountingKeepdays struct{ Value int64 }

// Get gets the reporting.accounting_keepdays value from the UTM
func (r *ReportingAccountingKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.accounting_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAccountingKeepdays
func (r *ReportingAccountingKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.accounting_keepdays", r.Value, options...)
}

// ReportingAccountingStatus represents the reporting.accounting_status node and implements sophos.Node
type ReportingAccountingStatus struct{ Value bool }

// Get gets the reporting.accounting_status value from the UTM
func (r *ReportingAccountingStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.accounting_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAccountingStatus
func (r *ReportingAccountingStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.accounting_status", r.Value, options...)
}

// ReportingAnonymizing represents the reporting.anonymizing node and implements sophos.Node
type ReportingAnonymizing struct{ Value bool }

// Get gets the reporting.anonymizing value from the UTM
func (r *ReportingAnonymizing) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.anonymizing", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAnonymizing
func (r *ReportingAnonymizing) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.anonymizing", r.Value, options...)
}

// ReportingAppctrlKeepdays represents the reporting.appctrl_keepdays node and implements sophos.Node
type ReportingAppctrlKeepdays struct{ Value int64 }

// Get gets the reporting.appctrl_keepdays value from the UTM
func (r *ReportingAppctrlKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.appctrl_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAppctrlKeepdays
func (r *ReportingAppctrlKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.appctrl_keepdays", r.Value, options...)
}

// ReportingAppctrlStatus represents the reporting.appctrl_status node and implements sophos.Node
type ReportingAppctrlStatus struct{ Value bool }

// Get gets the reporting.appctrl_status value from the UTM
func (r *ReportingAppctrlStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.appctrl_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAppctrlStatus
func (r *ReportingAppctrlStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.appctrl_status", r.Value, options...)
}

// ReportingAtpKeepdays represents the reporting.atp_keepdays node and implements sophos.Node
type ReportingAtpKeepdays struct{ Value int64 }

// Get gets the reporting.atp_keepdays value from the UTM
func (r *ReportingAtpKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.atp_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAtpKeepdays
func (r *ReportingAtpKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.atp_keepdays", r.Value, options...)
}

// ReportingAtpReset represents the reporting.atp_reset node and implements sophos.Node
type ReportingAtpReset struct{ Value map[string]interface{} }

// Get gets the reporting.atp_reset value from the UTM
func (r *ReportingAtpReset) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.atp_reset", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAtpReset
func (r *ReportingAtpReset) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.atp_reset", r.Value, options...)
}

// ReportingAtpStatus represents the reporting.atp_status node and implements sophos.Node
type ReportingAtpStatus struct{ Value bool }

// Get gets the reporting.atp_status value from the UTM
func (r *ReportingAtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.atp_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAtpStatus
func (r *ReportingAtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.atp_status", r.Value, options...)
}

// ReportingAuthenticationKeepdays represents the reporting.authentication_keepdays node and implements sophos.Node
type ReportingAuthenticationKeepdays struct{ Value int64 }

// Get gets the reporting.authentication_keepdays value from the UTM
func (r *ReportingAuthenticationKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.authentication_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAuthenticationKeepdays
func (r *ReportingAuthenticationKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.authentication_keepdays", r.Value, options...)
}

// ReportingAuthenticationStatus represents the reporting.authentication_status node and implements sophos.Node
type ReportingAuthenticationStatus struct{ Value bool }

// Get gets the reporting.authentication_status value from the UTM
func (r *ReportingAuthenticationStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.authentication_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingAuthenticationStatus
func (r *ReportingAuthenticationStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.authentication_status", r.Value, options...)
}

// ReportingCsvSeparator represents the reporting.csv_separator node and implements sophos.Node
type ReportingCsvSeparator struct{ Value string }

// Get gets the reporting.csv_separator value from the UTM
func (r *ReportingCsvSeparator) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.csv_separator", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingCsvSeparator
func (r *ReportingCsvSeparator) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.csv_separator", r.Value, options...)
}

// ReportingEmailsecurityImport represents the reporting.emailsecurity_import node and implements sophos.Node
type ReportingEmailsecurityImport struct{ Value []interface{} }

// Get gets the reporting.emailsecurity_import value from the UTM
func (r *ReportingEmailsecurityImport) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.emailsecurity_import", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingEmailsecurityImport
func (r *ReportingEmailsecurityImport) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.emailsecurity_import", r.Value, options...)
}

// ReportingEmailsecurityKeepdays represents the reporting.emailsecurity_keepdays node and implements sophos.Node
type ReportingEmailsecurityKeepdays struct{ Value int64 }

// Get gets the reporting.emailsecurity_keepdays value from the UTM
func (r *ReportingEmailsecurityKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.emailsecurity_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingEmailsecurityKeepdays
func (r *ReportingEmailsecurityKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.emailsecurity_keepdays", r.Value, options...)
}

// ReportingEmailsecurityStatus represents the reporting.emailsecurity_status node and implements sophos.Node
type ReportingEmailsecurityStatus struct{ Value bool }

// Get gets the reporting.emailsecurity_status value from the UTM
func (r *ReportingEmailsecurityStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.emailsecurity_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingEmailsecurityStatus
func (r *ReportingEmailsecurityStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.emailsecurity_status", r.Value, options...)
}

// ReportingEnableVpnAccounting represents the reporting.enable_vpn_accounting node and implements sophos.Node
type ReportingEnableVpnAccounting struct{ Value bool }

// Get gets the reporting.enable_vpn_accounting value from the UTM
func (r *ReportingEnableVpnAccounting) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.enable_vpn_accounting", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingEnableVpnAccounting
func (r *ReportingEnableVpnAccounting) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.enable_vpn_accounting", r.Value, options...)
}

// ReportingHideAccountingips represents the reporting.hide_accountingips node and implements sophos.Node
type ReportingHideAccountingips struct{ Value []interface{} }

// Get gets the reporting.hide_accountingips value from the UTM
func (r *ReportingHideAccountingips) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.hide_accountingips", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingHideAccountingips
func (r *ReportingHideAccountingips) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.hide_accountingips", r.Value, options...)
}

// ReportingHideMailaddresses represents the reporting.hide_mailaddresses node and implements sophos.Node
type ReportingHideMailaddresses struct{ Value []interface{} }

// Get gets the reporting.hide_mailaddresses value from the UTM
func (r *ReportingHideMailaddresses) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.hide_mailaddresses", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingHideMailaddresses
func (r *ReportingHideMailaddresses) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.hide_mailaddresses", r.Value, options...)
}

// ReportingHideMaildomains represents the reporting.hide_maildomains node and implements sophos.Node
type ReportingHideMaildomains struct{ Value []interface{} }

// Get gets the reporting.hide_maildomains value from the UTM
func (r *ReportingHideMaildomains) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.hide_maildomains", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingHideMaildomains
func (r *ReportingHideMaildomains) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.hide_maildomains", r.Value, options...)
}

// ReportingHideNetsecips represents the reporting.hide_netsecips node and implements sophos.Node
type ReportingHideNetsecips struct{ Value []interface{} }

// Get gets the reporting.hide_netsecips value from the UTM
func (r *ReportingHideNetsecips) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.hide_netsecips", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingHideNetsecips
func (r *ReportingHideNetsecips) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.hide_netsecips", r.Value, options...)
}

// ReportingHideWebdomains represents the reporting.hide_webdomains node and implements sophos.Node
type ReportingHideWebdomains struct{ Value []interface{} }

// Get gets the reporting.hide_webdomains value from the UTM
func (r *ReportingHideWebdomains) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.hide_webdomains", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingHideWebdomains
func (r *ReportingHideWebdomains) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.hide_webdomains", r.Value, options...)
}

// ReportingIpsImport represents the reporting.ips_import node and implements sophos.Node
type ReportingIpsImport struct{ Value []interface{} }

// Get gets the reporting.ips_import value from the UTM
func (r *ReportingIpsImport) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.ips_import", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingIpsImport
func (r *ReportingIpsImport) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.ips_import", r.Value, options...)
}

// ReportingIpsKeepdays represents the reporting.ips_keepdays node and implements sophos.Node
type ReportingIpsKeepdays struct{ Value int64 }

// Get gets the reporting.ips_keepdays value from the UTM
func (r *ReportingIpsKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.ips_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingIpsKeepdays
func (r *ReportingIpsKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.ips_keepdays", r.Value, options...)
}

// ReportingIpsStatus represents the reporting.ips_status node and implements sophos.Node
type ReportingIpsStatus struct{ Value bool }

// Get gets the reporting.ips_status value from the UTM
func (r *ReportingIpsStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.ips_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingIpsStatus
func (r *ReportingIpsStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.ips_status", r.Value, options...)
}

// ReportingPacketfilterImport represents the reporting.packetfilter_import node and implements sophos.Node
type ReportingPacketfilterImport struct{ Value []interface{} }

// Get gets the reporting.packetfilter_import value from the UTM
func (r *ReportingPacketfilterImport) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.packetfilter_import", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingPacketfilterImport
func (r *ReportingPacketfilterImport) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.packetfilter_import", r.Value, options...)
}

// ReportingPacketfilterKeepdays represents the reporting.packetfilter_keepdays node and implements sophos.Node
type ReportingPacketfilterKeepdays struct{ Value int64 }

// Get gets the reporting.packetfilter_keepdays value from the UTM
func (r *ReportingPacketfilterKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.packetfilter_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingPacketfilterKeepdays
func (r *ReportingPacketfilterKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.packetfilter_keepdays", r.Value, options...)
}

// ReportingPacketfilterStatus represents the reporting.packetfilter_status node and implements sophos.Node
type ReportingPacketfilterStatus struct{ Value bool }

// Get gets the reporting.packetfilter_status value from the UTM
func (r *ReportingPacketfilterStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.packetfilter_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingPacketfilterStatus
func (r *ReportingPacketfilterStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.packetfilter_status", r.Value, options...)
}

// ReportingPassword1 represents the reporting.password1 node and implements sophos.Node
type ReportingPassword1 struct{ Value string }

// Get gets the reporting.password1 value from the UTM
func (r *ReportingPassword1) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.password1", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingPassword1
func (r *ReportingPassword1) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.password1", r.Value, options...)
}

// ReportingPassword2 represents the reporting.password2 node and implements sophos.Node
type ReportingPassword2 struct{ Value string }

// Get gets the reporting.password2 value from the UTM
func (r *ReportingPassword2) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.password2", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingPassword2
func (r *ReportingPassword2) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.password2", r.Value, options...)
}

// ReportingSandboxKeepdays represents the reporting.sandbox_keepdays node and implements sophos.Node
type ReportingSandboxKeepdays struct{ Value int64 }

// Get gets the reporting.sandbox_keepdays value from the UTM
func (r *ReportingSandboxKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.sandbox_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingSandboxKeepdays
func (r *ReportingSandboxKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.sandbox_keepdays", r.Value, options...)
}

// ReportingUserlogFromLogs represents the reporting.userlog_from_logs node and implements sophos.Node
type ReportingUserlogFromLogs struct{ Value bool }

// Get gets the reporting.userlog_from_logs value from the UTM
func (r *ReportingUserlogFromLogs) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.userlog_from_logs", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingUserlogFromLogs
func (r *ReportingUserlogFromLogs) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.userlog_from_logs", r.Value, options...)
}

// ReportingVpnKeepdays represents the reporting.vpn_keepdays node and implements sophos.Node
type ReportingVpnKeepdays struct{ Value int64 }

// Get gets the reporting.vpn_keepdays value from the UTM
func (r *ReportingVpnKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.vpn_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingVpnKeepdays
func (r *ReportingVpnKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.vpn_keepdays", r.Value, options...)
}

// ReportingVpnStatus represents the reporting.vpn_status node and implements sophos.Node
type ReportingVpnStatus struct{ Value bool }

// Get gets the reporting.vpn_status value from the UTM
func (r *ReportingVpnStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.vpn_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingVpnStatus
func (r *ReportingVpnStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.vpn_status", r.Value, options...)
}

// ReportingWafKeepdays represents the reporting.waf_keepdays node and implements sophos.Node
type ReportingWafKeepdays struct{ Value int64 }

// Get gets the reporting.waf_keepdays value from the UTM
func (r *ReportingWafKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.waf_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWafKeepdays
func (r *ReportingWafKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.waf_keepdays", r.Value, options...)
}

// ReportingWafStatus represents the reporting.waf_status node and implements sophos.Node
type ReportingWafStatus struct{ Value bool }

// Get gets the reporting.waf_status value from the UTM
func (r *ReportingWafStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.waf_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWafStatus
func (r *ReportingWafStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.waf_status", r.Value, options...)
}

// ReportingWebsecurityDetail represents the reporting.websecurity_detail node and implements sophos.Node
type ReportingWebsecurityDetail struct{ Value map[string]interface{} }

// Get gets the reporting.websecurity_detail value from the UTM
func (r *ReportingWebsecurityDetail) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.websecurity_detail", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWebsecurityDetail
func (r *ReportingWebsecurityDetail) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.websecurity_detail", r.Value, options...)
}

// ReportingWebsecurityImport represents the reporting.websecurity_import node and implements sophos.Node
type ReportingWebsecurityImport struct{ Value []interface{} }

// Get gets the reporting.websecurity_import value from the UTM
func (r *ReportingWebsecurityImport) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.websecurity_import", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWebsecurityImport
func (r *ReportingWebsecurityImport) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.websecurity_import", r.Value, options...)
}

// ReportingWebsecurityKeepdays represents the reporting.websecurity_keepdays node and implements sophos.Node
type ReportingWebsecurityKeepdays struct{ Value int64 }

// Get gets the reporting.websecurity_keepdays value from the UTM
func (r *ReportingWebsecurityKeepdays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.websecurity_keepdays", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWebsecurityKeepdays
func (r *ReportingWebsecurityKeepdays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.websecurity_keepdays", r.Value, options...)
}

// ReportingWebsecurityStatus represents the reporting.websecurity_status node and implements sophos.Node
type ReportingWebsecurityStatus struct{ Value bool }

// Get gets the reporting.websecurity_status value from the UTM
func (r *ReportingWebsecurityStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reporting.websecurity_status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReportingWebsecurityStatus
func (r *ReportingWebsecurityStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reporting.websecurity_status", r.Value, options...)
}

// ReverseProxyAuaRefreshEnabled represents the reverse_proxy.aua_refresh_enabled node and implements sophos.Node
type ReverseProxyAuaRefreshEnabled struct{ Value bool }

// Get gets the reverse_proxy.aua_refresh_enabled value from the UTM
func (r *ReverseProxyAuaRefreshEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.aua_refresh_enabled", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyAuaRefreshEnabled
func (r *ReverseProxyAuaRefreshEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.aua_refresh_enabled", r.Value, options...)
}

// ReverseProxyAuaRefreshInterval represents the reverse_proxy.aua_refresh_interval node and implements sophos.Node
type ReverseProxyAuaRefreshInterval struct{ Value int64 }

// Get gets the reverse_proxy.aua_refresh_interval value from the UTM
func (r *ReverseProxyAuaRefreshInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.aua_refresh_interval", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyAuaRefreshInterval
func (r *ReverseProxyAuaRefreshInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.aua_refresh_interval", r.Value, options...)
}

// ReverseProxyBlacklistDnsrblZones represents the reverse_proxy.blacklist.dnsrbl_zones node and implements sophos.Node
type ReverseProxyBlacklistDnsrblZones struct{ Value []string }

// Get gets the reverse_proxy.blacklist.dnsrbl_zones value from the UTM
func (r *ReverseProxyBlacklistDnsrblZones) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.blacklist.dnsrbl_zones", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyBlacklistDnsrblZones
func (r *ReverseProxyBlacklistDnsrblZones) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.blacklist.dnsrbl_zones", r.Value, options...)
}

// ReverseProxyBlacklistGeoipCodes represents the reverse_proxy.blacklist.geoip_codes node and implements sophos.Node
type ReverseProxyBlacklistGeoipCodes struct{ Value []string }

// Get gets the reverse_proxy.blacklist.geoip_codes value from the UTM
func (r *ReverseProxyBlacklistGeoipCodes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.blacklist.geoip_codes", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyBlacklistGeoipCodes
func (r *ReverseProxyBlacklistGeoipCodes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.blacklist.geoip_codes", r.Value, options...)
}

// ReverseProxyBlacklistSxlBlocksets represents the reverse_proxy.blacklist.sxl_blocksets node and implements sophos.Node
type ReverseProxyBlacklistSxlBlocksets struct{ Value []string }

// Get gets the reverse_proxy.blacklist.sxl_blocksets value from the UTM
func (r *ReverseProxyBlacklistSxlBlocksets) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.blacklist.sxl_blocksets", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyBlacklistSxlBlocksets
func (r *ReverseProxyBlacklistSxlBlocksets) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.blacklist.sxl_blocksets", r.Value, options...)
}

// ReverseProxyBlacklistSxlZone represents the reverse_proxy.blacklist.sxl_zone node and implements sophos.Node
type ReverseProxyBlacklistSxlZone struct{ Value string }

// Get gets the reverse_proxy.blacklist.sxl_zone value from the UTM
func (r *ReverseProxyBlacklistSxlZone) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.blacklist.sxl_zone", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyBlacklistSxlZone
func (r *ReverseProxyBlacklistSxlZone) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.blacklist.sxl_zone", r.Value, options...)
}

// ReverseProxyCookiesignkey represents the reverse_proxy.cookiesignkey node and implements sophos.Node
type ReverseProxyCookiesignkey struct{ Value string }

// Get gets the reverse_proxy.cookiesignkey value from the UTM
func (r *ReverseProxyCookiesignkey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.cookiesignkey", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyCookiesignkey
func (r *ReverseProxyCookiesignkey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.cookiesignkey", r.Value, options...)
}

// ReverseProxyCssdHostname represents the reverse_proxy.cssd_hostname node and implements sophos.Node
type ReverseProxyCssdHostname struct{ Value string }

// Get gets the reverse_proxy.cssd_hostname value from the UTM
func (r *ReverseProxyCssdHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.cssd_hostname", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyCssdHostname
func (r *ReverseProxyCssdHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.cssd_hostname", r.Value, options...)
}

// ReverseProxyCssdPort represents the reverse_proxy.cssd_port node and implements sophos.Node
type ReverseProxyCssdPort struct{ Value map[string]interface{} }

// Get gets the reverse_proxy.cssd_port value from the UTM
func (r *ReverseProxyCssdPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.cssd_port", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyCssdPort
func (r *ReverseProxyCssdPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.cssd_port", r.Value, options...)
}

// ReverseProxyCustomThreatFiltersEnabled represents the reverse_proxy.custom_threat_filters_enabled node and implements sophos.Node
type ReverseProxyCustomThreatFiltersEnabled struct{ Value bool }

// Get gets the reverse_proxy.custom_threat_filters_enabled value from the UTM
func (r *ReverseProxyCustomThreatFiltersEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.custom_threat_filters_enabled", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyCustomThreatFiltersEnabled
func (r *ReverseProxyCustomThreatFiltersEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.custom_threat_filters_enabled", r.Value, options...)
}

// ReverseProxyFormhardeningSecret represents the reverse_proxy.formhardening_secret node and implements sophos.Node
type ReverseProxyFormhardeningSecret struct{ Value string }

// Get gets the reverse_proxy.formhardening_secret value from the UTM
func (r *ReverseProxyFormhardeningSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.formhardening_secret", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyFormhardeningSecret
func (r *ReverseProxyFormhardeningSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.formhardening_secret", r.Value, options...)
}

// ReverseProxyKeepalive represents the reverse_proxy.keepalive node and implements sophos.Node
type ReverseProxyKeepalive struct{ Value bool }

// Get gets the reverse_proxy.keepalive value from the UTM
func (r *ReverseProxyKeepalive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.keepalive", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyKeepalive
func (r *ReverseProxyKeepalive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.keepalive", r.Value, options...)
}

// ReverseProxyManualmode represents the reverse_proxy.manualmode node and implements sophos.Node
type ReverseProxyManualmode struct{ Value bool }

// Get gets the reverse_proxy.manualmode value from the UTM
func (r *ReverseProxyManualmode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.manualmode", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyManualmode
func (r *ReverseProxyManualmode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.manualmode", r.Value, options...)
}

// ReverseProxyMaxConnectionsPerChild represents the reverse_proxy.max_connections_per_child node and implements sophos.Node
type ReverseProxyMaxConnectionsPerChild struct{ Value map[string]interface{} }

// Get gets the reverse_proxy.max_connections_per_child value from the UTM
func (r *ReverseProxyMaxConnectionsPerChild) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_connections_per_child", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxConnectionsPerChild
func (r *ReverseProxyMaxConnectionsPerChild) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_connections_per_child", r.Value, options...)
}

// ReverseProxyMaxPreforkProcesses represents the reverse_proxy.max_prefork_processes node and implements sophos.Node
type ReverseProxyMaxPreforkProcesses struct{ Value int64 }

// Get gets the reverse_proxy.max_prefork_processes value from the UTM
func (r *ReverseProxyMaxPreforkProcesses) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_prefork_processes", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxPreforkProcesses
func (r *ReverseProxyMaxPreforkProcesses) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_prefork_processes", r.Value, options...)
}

// ReverseProxyMaxProcesses represents the reverse_proxy.max_processes node and implements sophos.Node
type ReverseProxyMaxProcesses struct{ Value int64 }

// Get gets the reverse_proxy.max_processes value from the UTM
func (r *ReverseProxyMaxProcesses) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_processes", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxProcesses
func (r *ReverseProxyMaxProcesses) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_processes", r.Value, options...)
}

// ReverseProxyMaxSessionFiles represents the reverse_proxy.max_session_files node and implements sophos.Node
type ReverseProxyMaxSessionFiles struct{ Value int64 }

// Get gets the reverse_proxy.max_session_files value from the UTM
func (r *ReverseProxyMaxSessionFiles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_session_files", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxSessionFiles
func (r *ReverseProxyMaxSessionFiles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_session_files", r.Value, options...)
}

// ReverseProxyMaxSpareProcesses represents the reverse_proxy.max_spare_processes node and implements sophos.Node
type ReverseProxyMaxSpareProcesses struct{ Value int64 }

// Get gets the reverse_proxy.max_spare_processes value from the UTM
func (r *ReverseProxyMaxSpareProcesses) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_spare_processes", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxSpareProcesses
func (r *ReverseProxyMaxSpareProcesses) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_spare_processes", r.Value, options...)
}

// ReverseProxyMaxSpareThreads represents the reverse_proxy.max_spare_threads node and implements sophos.Node
type ReverseProxyMaxSpareThreads struct{ Value int64 }

// Get gets the reverse_proxy.max_spare_threads value from the UTM
func (r *ReverseProxyMaxSpareThreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_spare_threads", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxSpareThreads
func (r *ReverseProxyMaxSpareThreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_spare_threads", r.Value, options...)
}

// ReverseProxyMaxThreadsPerProcess represents the reverse_proxy.max_threads_per_process node and implements sophos.Node
type ReverseProxyMaxThreadsPerProcess struct{ Value int64 }

// Get gets the reverse_proxy.max_threads_per_process value from the UTM
func (r *ReverseProxyMaxThreadsPerProcess) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.max_threads_per_process", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMaxThreadsPerProcess
func (r *ReverseProxyMaxThreadsPerProcess) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.max_threads_per_process", r.Value, options...)
}

// ReverseProxyMinSpareProcesses represents the reverse_proxy.min_spare_processes node and implements sophos.Node
type ReverseProxyMinSpareProcesses struct{ Value int64 }

// Get gets the reverse_proxy.min_spare_processes value from the UTM
func (r *ReverseProxyMinSpareProcesses) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.min_spare_processes", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMinSpareProcesses
func (r *ReverseProxyMinSpareProcesses) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.min_spare_processes", r.Value, options...)
}

// ReverseProxyMinSpareThreads represents the reverse_proxy.min_spare_threads node and implements sophos.Node
type ReverseProxyMinSpareThreads struct{ Value int64 }

// Get gets the reverse_proxy.min_spare_threads value from the UTM
func (r *ReverseProxyMinSpareThreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.min_spare_threads", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMinSpareThreads
func (r *ReverseProxyMinSpareThreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.min_spare_threads", r.Value, options...)
}

// ReverseProxyMinTls represents the reverse_proxy.min_tls node and implements sophos.Node
type ReverseProxyMinTls struct{ Value string }

// Get gets the reverse_proxy.min_tls value from the UTM
func (r *ReverseProxyMinTls) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.min_tls", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMinTls
func (r *ReverseProxyMinTls) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.min_tls", r.Value, options...)
}

// ReverseProxyModsecurityBeta represents the reverse_proxy.modsecurity_beta node and implements sophos.Node
type ReverseProxyModsecurityBeta struct{ Value bool }

// Get gets the reverse_proxy.modsecurity_beta value from the UTM
func (r *ReverseProxyModsecurityBeta) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.modsecurity_beta", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyModsecurityBeta
func (r *ReverseProxyModsecurityBeta) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.modsecurity_beta", r.Value, options...)
}

// ReverseProxyMpmMode represents the reverse_proxy.mpm_mode node and implements sophos.Node
type ReverseProxyMpmMode struct{ Value string }

// Get gets the reverse_proxy.mpm_mode value from the UTM
func (r *ReverseProxyMpmMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.mpm_mode", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyMpmMode
func (r *ReverseProxyMpmMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.mpm_mode", r.Value, options...)
}

// ReverseProxyPatternversion represents the reverse_proxy.patternversion node and implements sophos.Node
type ReverseProxyPatternversion struct{ Value string }

// Get gets the reverse_proxy.patternversion value from the UTM
func (r *ReverseProxyPatternversion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.patternversion", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyPatternversion
func (r *ReverseProxyPatternversion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.patternversion", r.Value, options...)
}

// ReverseProxyPort represents the reverse_proxy.port node and implements sophos.Node
type ReverseProxyPort struct{ Value int64 }

// Get gets the reverse_proxy.port value from the UTM
func (r *ReverseProxyPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.port", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyPort
func (r *ReverseProxyPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.port", r.Value, options...)
}

// ReverseProxyProxypassreverseForFrontend represents the reverse_proxy.proxypassreverse_for_frontend node and implements sophos.Node
type ReverseProxyProxypassreverseForFrontend struct{ Value bool }

// Get gets the reverse_proxy.proxypassreverse_for_frontend value from the UTM
func (r *ReverseProxyProxypassreverseForFrontend) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.proxypassreverse_for_frontend", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyProxypassreverseForFrontend
func (r *ReverseProxyProxypassreverseForFrontend) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.proxypassreverse_for_frontend", r.Value, options...)
}

// ReverseProxyProxyprotocol represents the reverse_proxy.proxyprotocol node and implements sophos.Node
type ReverseProxyProxyprotocol struct{ Value bool }

// Get gets the reverse_proxy.proxyprotocol value from the UTM
func (r *ReverseProxyProxyprotocol) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.proxyprotocol", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyProxyprotocol
func (r *ReverseProxyProxyprotocol) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.proxyprotocol", r.Value, options...)
}

// ReverseProxyReloadMethod represents the reverse_proxy.reload_method node and implements sophos.Node
type ReverseProxyReloadMethod struct{ Value string }

// Get gets the reverse_proxy.reload_method value from the UTM
func (r *ReverseProxyReloadMethod) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.reload_method", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyReloadMethod
func (r *ReverseProxyReloadMethod) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.reload_method", r.Value, options...)
}

// ReverseProxyRequestLineLimit represents the reverse_proxy.request_line_limit node and implements sophos.Node
type ReverseProxyRequestLineLimit struct{ Value map[string]interface{} }

// Get gets the reverse_proxy.request_line_limit value from the UTM
func (r *ReverseProxyRequestLineLimit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.request_line_limit", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyRequestLineLimit
func (r *ReverseProxyRequestLineLimit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.request_line_limit", r.Value, options...)
}

// ReverseProxySlowhttpExceptions represents the reverse_proxy.slowhttp_exceptions node and implements sophos.Node
type ReverseProxySlowhttpExceptions struct{ Value []interface{} }

// Get gets the reverse_proxy.slowhttp_exceptions value from the UTM
func (r *ReverseProxySlowhttpExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.slowhttp_exceptions", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxySlowhttpExceptions
func (r *ReverseProxySlowhttpExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.slowhttp_exceptions", r.Value, options...)
}

// ReverseProxySlowhttpRequestHeaderTimeoutBase represents the reverse_proxy.slowhttp_request_header_timeout_base node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutBase struct{ Value int64 }

// Get gets the reverse_proxy.slowhttp_request_header_timeout_base value from the UTM
func (r *ReverseProxySlowhttpRequestHeaderTimeoutBase) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_base", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxySlowhttpRequestHeaderTimeoutBase
func (r *ReverseProxySlowhttpRequestHeaderTimeoutBase) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_base", r.Value, options...)
}

// ReverseProxySlowhttpRequestHeaderTimeoutEnabled represents the reverse_proxy.slowhttp_request_header_timeout_enabled node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutEnabled struct{ Value bool }

// Get gets the reverse_proxy.slowhttp_request_header_timeout_enabled value from the UTM
func (r *ReverseProxySlowhttpRequestHeaderTimeoutEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_enabled", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxySlowhttpRequestHeaderTimeoutEnabled
func (r *ReverseProxySlowhttpRequestHeaderTimeoutEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_enabled", r.Value, options...)
}

// ReverseProxySlowhttpRequestHeaderTimeoutMax represents the reverse_proxy.slowhttp_request_header_timeout_max node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutMax struct{ Value int64 }

// Get gets the reverse_proxy.slowhttp_request_header_timeout_max value from the UTM
func (r *ReverseProxySlowhttpRequestHeaderTimeoutMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_max", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxySlowhttpRequestHeaderTimeoutMax
func (r *ReverseProxySlowhttpRequestHeaderTimeoutMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_max", r.Value, options...)
}

// ReverseProxySlowhttpRequestHeaderTimeoutRate represents the reverse_proxy.slowhttp_request_header_timeout_rate node and implements sophos.Node
type ReverseProxySlowhttpRequestHeaderTimeoutRate struct{ Value int64 }

// Get gets the reverse_proxy.slowhttp_request_header_timeout_rate value from the UTM
func (r *ReverseProxySlowhttpRequestHeaderTimeoutRate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_rate", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxySlowhttpRequestHeaderTimeoutRate
func (r *ReverseProxySlowhttpRequestHeaderTimeoutRate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.slowhttp_request_header_timeout_rate", r.Value, options...)
}

// ReverseProxyStatus represents the reverse_proxy.status node and implements sophos.Node
type ReverseProxyStatus struct{ Value bool }

// Get gets the reverse_proxy.status value from the UTM
func (r *ReverseProxyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyStatus
func (r *ReverseProxyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.status", r.Value, options...)
}

// ReverseProxyTraceEnabled represents the reverse_proxy.trace_enabled node and implements sophos.Node
type ReverseProxyTraceEnabled struct{ Value bool }

// Get gets the reverse_proxy.trace_enabled value from the UTM
func (r *ReverseProxyTraceEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.trace_enabled", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyTraceEnabled
func (r *ReverseProxyTraceEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.trace_enabled", r.Value, options...)
}

// ReverseProxyUrlhardeningsignkey represents the reverse_proxy.urlhardeningsignkey node and implements sophos.Node
type ReverseProxyUrlhardeningsignkey struct{ Value string }

// Get gets the reverse_proxy.urlhardeningsignkey value from the UTM
func (r *ReverseProxyUrlhardeningsignkey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.urlhardeningsignkey", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyUrlhardeningsignkey
func (r *ReverseProxyUrlhardeningsignkey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.urlhardeningsignkey", r.Value, options...)
}

// ReverseProxyWhatkilledus represents the reverse_proxy.whatkilledus node and implements sophos.Node
type ReverseProxyWhatkilledus struct{ Value bool }

// Get gets the reverse_proxy.whatkilledus value from the UTM
func (r *ReverseProxyWhatkilledus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/reverse_proxy.whatkilledus", &r.Value, options...)
}

// Update is syntactic sugar for UpdateReverseProxyWhatkilledus
func (r *ReverseProxyWhatkilledus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/reverse_proxy.whatkilledus", r.Value, options...)
}

// RoutesPolicy represents the routes.policy node and implements sophos.Node
type RoutesPolicy struct{ Value []interface{} }

// Get gets the routes.policy value from the UTM
func (r *RoutesPolicy) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routes.policy", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutesPolicy
func (r *RoutesPolicy) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routes.policy", r.Value, options...)
}

// RoutesStatic represents the routes.static node and implements sophos.Node
type RoutesStatic struct{ Value []interface{} }

// Get gets the routes.static value from the UTM
func (r *RoutesStatic) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routes.static", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutesStatic
func (r *RoutesStatic) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routes.static", r.Value, options...)
}

// RoutingBgpMaximumPaths represents the routing.bgp.maximum_paths node and implements sophos.Node
type RoutingBgpMaximumPaths struct{ Value map[string]interface{} }

// Get gets the routing.bgp.maximum_paths value from the UTM
func (r *RoutingBgpMaximumPaths) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.maximum_paths", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpMaximumPaths
func (r *RoutingBgpMaximumPaths) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.maximum_paths", r.Value, options...)
}

// RoutingBgpMaximumPathsIbgp represents the routing.bgp.maximum_paths_ibgp node and implements sophos.Node
type RoutingBgpMaximumPathsIbgp struct{ Value map[string]interface{} }

// Get gets the routing.bgp.maximum_paths_ibgp value from the UTM
func (r *RoutingBgpMaximumPathsIbgp) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.maximum_paths_ibgp", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpMaximumPathsIbgp
func (r *RoutingBgpMaximumPathsIbgp) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.maximum_paths_ibgp", r.Value, options...)
}

// RoutingBgpMultipleAs represents the routing.bgp.multiple_as node and implements sophos.Node
type RoutingBgpMultipleAs struct{ Value bool }

// Get gets the routing.bgp.multiple_as value from the UTM
func (r *RoutingBgpMultipleAs) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.multiple_as", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpMultipleAs
func (r *RoutingBgpMultipleAs) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.multiple_as", r.Value, options...)
}

// RoutingBgpStatus represents the routing.bgp.status node and implements sophos.Node
type RoutingBgpStatus struct{ Value bool }

// Get gets the routing.bgp.status value from the UTM
func (r *RoutingBgpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpStatus
func (r *RoutingBgpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.status", r.Value, options...)
}

// RoutingBgpStrictMatch represents the routing.bgp.strict_match node and implements sophos.Node
type RoutingBgpStrictMatch struct{ Value bool }

// Get gets the routing.bgp.strict_match value from the UTM
func (r *RoutingBgpStrictMatch) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.strict_match", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpStrictMatch
func (r *RoutingBgpStrictMatch) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.strict_match", r.Value, options...)
}

// RoutingBgpSystems represents the routing.bgp.systems node and implements sophos.Node
type RoutingBgpSystems struct{ Value []interface{} }

// Get gets the routing.bgp.systems value from the UTM
func (r *RoutingBgpSystems) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.bgp.systems", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingBgpSystems
func (r *RoutingBgpSystems) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.bgp.systems", r.Value, options...)
}

// RoutingOspfAbrType represents the routing.ospf.abr_type node and implements sophos.Node
type RoutingOspfAbrType struct{ Value string }

// Get gets the routing.ospf.abr_type value from the UTM
func (r *RoutingOspfAbrType) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.abr_type", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfAbrType
func (r *RoutingOspfAbrType) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.abr_type", r.Value, options...)
}

// RoutingOspfAreas represents the routing.ospf.areas node and implements sophos.Node
type RoutingOspfAreas struct{ Value []interface{} }

// Get gets the routing.ospf.areas value from the UTM
func (r *RoutingOspfAreas) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.areas", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfAreas
func (r *RoutingOspfAreas) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.areas", r.Value, options...)
}

// RoutingOspfDefaultInformation represents the routing.ospf.default_information node and implements sophos.Node
type RoutingOspfDefaultInformation struct{ Value string }

// Get gets the routing.ospf.default_information value from the UTM
func (r *RoutingOspfDefaultInformation) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.default_information", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfDefaultInformation
func (r *RoutingOspfDefaultInformation) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.default_information", r.Value, options...)
}

// RoutingOspfDefaultRouteMetric represents the routing.ospf.default_route_metric node and implements sophos.Node
type RoutingOspfDefaultRouteMetric struct{ Value int64 }

// Get gets the routing.ospf.default_route_metric value from the UTM
func (r *RoutingOspfDefaultRouteMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.default_route_metric", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfDefaultRouteMetric
func (r *RoutingOspfDefaultRouteMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.default_route_metric", r.Value, options...)
}

// RoutingOspfRedistributeBgpMetric represents the routing.ospf.redistribute.bgp.metric node and implements sophos.Node
type RoutingOspfRedistributeBgpMetric struct{ Value int64 }

// Get gets the routing.ospf.redistribute.bgp.metric value from the UTM
func (r *RoutingOspfRedistributeBgpMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.bgp.metric", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeBgpMetric
func (r *RoutingOspfRedistributeBgpMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.bgp.metric", r.Value, options...)
}

// RoutingOspfRedistributeBgpStatus represents the routing.ospf.redistribute.bgp.status node and implements sophos.Node
type RoutingOspfRedistributeBgpStatus struct{ Value bool }

// Get gets the routing.ospf.redistribute.bgp.status value from the UTM
func (r *RoutingOspfRedistributeBgpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.bgp.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeBgpStatus
func (r *RoutingOspfRedistributeBgpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.bgp.status", r.Value, options...)
}

// RoutingOspfRedistributeConnectedMetric represents the routing.ospf.redistribute.connected.metric node and implements sophos.Node
type RoutingOspfRedistributeConnectedMetric struct{ Value int64 }

// Get gets the routing.ospf.redistribute.connected.metric value from the UTM
func (r *RoutingOspfRedistributeConnectedMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.connected.metric", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeConnectedMetric
func (r *RoutingOspfRedistributeConnectedMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.connected.metric", r.Value, options...)
}

// RoutingOspfRedistributeConnectedStatus represents the routing.ospf.redistribute.connected.status node and implements sophos.Node
type RoutingOspfRedistributeConnectedStatus struct{ Value bool }

// Get gets the routing.ospf.redistribute.connected.status value from the UTM
func (r *RoutingOspfRedistributeConnectedStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.connected.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeConnectedStatus
func (r *RoutingOspfRedistributeConnectedStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.connected.status", r.Value, options...)
}

// RoutingOspfRedistributeIpsecStatus represents the routing.ospf.redistribute.ipsec.status node and implements sophos.Node
type RoutingOspfRedistributeIpsecStatus struct{ Value bool }

// Get gets the routing.ospf.redistribute.ipsec.status value from the UTM
func (r *RoutingOspfRedistributeIpsecStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.ipsec.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeIpsecStatus
func (r *RoutingOspfRedistributeIpsecStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.ipsec.status", r.Value, options...)
}

// RoutingOspfRedistributeSslVpnStatus represents the routing.ospf.redistribute.ssl_vpn.status node and implements sophos.Node
type RoutingOspfRedistributeSslVpnStatus struct{ Value bool }

// Get gets the routing.ospf.redistribute.ssl_vpn.status value from the UTM
func (r *RoutingOspfRedistributeSslVpnStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.ssl_vpn.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeSslVpnStatus
func (r *RoutingOspfRedistributeSslVpnStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.ssl_vpn.status", r.Value, options...)
}

// RoutingOspfRedistributeStaticMetric represents the routing.ospf.redistribute.static.metric node and implements sophos.Node
type RoutingOspfRedistributeStaticMetric struct{ Value int64 }

// Get gets the routing.ospf.redistribute.static.metric value from the UTM
func (r *RoutingOspfRedistributeStaticMetric) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.static.metric", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeStaticMetric
func (r *RoutingOspfRedistributeStaticMetric) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.static.metric", r.Value, options...)
}

// RoutingOspfRedistributeStaticStatus represents the routing.ospf.redistribute.static.status node and implements sophos.Node
type RoutingOspfRedistributeStaticStatus struct{ Value bool }

// Get gets the routing.ospf.redistribute.static.status value from the UTM
func (r *RoutingOspfRedistributeStaticStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.redistribute.static.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRedistributeStaticStatus
func (r *RoutingOspfRedistributeStaticStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.redistribute.static.status", r.Value, options...)
}

// RoutingOspfReferenceBandwidth represents the routing.ospf.reference_bandwidth node and implements sophos.Node
type RoutingOspfReferenceBandwidth struct{ Value map[string]interface{} }

// Get gets the routing.ospf.reference_bandwidth value from the UTM
func (r *RoutingOspfReferenceBandwidth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.reference_bandwidth", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfReferenceBandwidth
func (r *RoutingOspfReferenceBandwidth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.reference_bandwidth", r.Value, options...)
}

// RoutingOspfRouterId represents the routing.ospf.router_id node and implements sophos.Node
type RoutingOspfRouterId struct{ Value string }

// Get gets the routing.ospf.router_id value from the UTM
func (r *RoutingOspfRouterId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.router_id", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfRouterId
func (r *RoutingOspfRouterId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.router_id", r.Value, options...)
}

// RoutingOspfStatus represents the routing.ospf.status node and implements sophos.Node
type RoutingOspfStatus struct{ Value bool }

// Get gets the routing.ospf.status value from the UTM
func (r *RoutingOspfStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.ospf.status", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingOspfStatus
func (r *RoutingOspfStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.ospf.status", r.Value, options...)
}

// RoutingQuaggaAllowedNetworks represents the routing.quagga.allowed_networks node and implements sophos.Node
type RoutingQuaggaAllowedNetworks struct{ Value []interface{} }

// Get gets the routing.quagga.allowed_networks value from the UTM
func (r *RoutingQuaggaAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.quagga.allowed_networks", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingQuaggaAllowedNetworks
func (r *RoutingQuaggaAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.quagga.allowed_networks", r.Value, options...)
}

// RoutingQuaggaEnablePassword represents the routing.quagga.enable_password node and implements sophos.Node
type RoutingQuaggaEnablePassword struct{ Value string }

// Get gets the routing.quagga.enable_password value from the UTM
func (r *RoutingQuaggaEnablePassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.quagga.enable_password", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingQuaggaEnablePassword
func (r *RoutingQuaggaEnablePassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.quagga.enable_password", r.Value, options...)
}

// RoutingQuaggaLinkDetect represents the routing.quagga.link_detect node and implements sophos.Node
type RoutingQuaggaLinkDetect struct{ Value bool }

// Get gets the routing.quagga.link_detect value from the UTM
func (r *RoutingQuaggaLinkDetect) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.quagga.link_detect", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingQuaggaLinkDetect
func (r *RoutingQuaggaLinkDetect) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.quagga.link_detect", r.Value, options...)
}

// RoutingQuaggaPassword represents the routing.quagga.password node and implements sophos.Node
type RoutingQuaggaPassword struct{ Value string }

// Get gets the routing.quagga.password value from the UTM
func (r *RoutingQuaggaPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/routing.quagga.password", &r.Value, options...)
}

// Update is syntactic sugar for UpdateRoutingQuaggaPassword
func (r *RoutingQuaggaPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/routing.quagga.password", r.Value, options...)
}

// SandboxReportdDebug represents the sandbox_reportd.debug node and implements sophos.Node
type SandboxReportdDebug struct{ Value string }

// Get gets the sandbox_reportd.debug value from the UTM
func (s *SandboxReportdDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandbox_reportd.debug", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxReportdDebug
func (s *SandboxReportdDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandbox_reportd.debug", s.Value, options...)
}

// SandboxReportdPollInterval represents the sandbox_reportd.poll_interval node and implements sophos.Node
type SandboxReportdPollInterval struct{ Value int64 }

// Get gets the sandbox_reportd.poll_interval value from the UTM
func (s *SandboxReportdPollInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandbox_reportd.poll_interval", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxReportdPollInterval
func (s *SandboxReportdPollInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandbox_reportd.poll_interval", s.Value, options...)
}

// SandboxReportdRequestTimeout represents the sandbox_reportd.request_timeout node and implements sophos.Node
type SandboxReportdRequestTimeout struct{ Value int64 }

// Get gets the sandbox_reportd.request_timeout value from the UTM
func (s *SandboxReportdRequestTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandbox_reportd.request_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxReportdRequestTimeout
func (s *SandboxReportdRequestTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandbox_reportd.request_timeout", s.Value, options...)
}

// SandboxReportdRetryTimes represents the sandbox_reportd.retry_times node and implements sophos.Node
type SandboxReportdRetryTimes struct{ Value int64 }

// Get gets the sandbox_reportd.retry_times value from the UTM
func (s *SandboxReportdRetryTimes) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandbox_reportd.retry_times", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxReportdRetryTimes
func (s *SandboxReportdRetryTimes) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandbox_reportd.retry_times", s.Value, options...)
}

// SandboxdBypassSandboxLimit represents the sandboxd.bypass_sandbox_limit node and implements sophos.Node
type SandboxdBypassSandboxLimit struct{ Value int64 }

// Get gets the sandboxd.bypass_sandbox_limit value from the UTM
func (s *SandboxdBypassSandboxLimit) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.bypass_sandbox_limit", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdBypassSandboxLimit
func (s *SandboxdBypassSandboxLimit) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.bypass_sandbox_limit", s.Value, options...)
}

// SandboxdCacheExpire represents the sandboxd.cache_expire node and implements sophos.Node
type SandboxdCacheExpire struct{ Value int64 }

// Get gets the sandboxd.cache_expire value from the UTM
func (s *SandboxdCacheExpire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.cache_expire", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdCacheExpire
func (s *SandboxdCacheExpire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.cache_expire", s.Value, options...)
}

// SandboxdCertstore represents the sandboxd.certstore node and implements sophos.Node
type SandboxdCertstore struct{ Value string }

// Get gets the sandboxd.certstore value from the UTM
func (s *SandboxdCertstore) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.certstore", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdCertstore
func (s *SandboxdCertstore) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.certstore", s.Value, options...)
}

// SandboxdClientTimeout represents the sandboxd.client_timeout node and implements sophos.Node
type SandboxdClientTimeout struct{ Value int64 }

// Get gets the sandboxd.client_timeout value from the UTM
func (s *SandboxdClientTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.client_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdClientTimeout
func (s *SandboxdClientTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.client_timeout", s.Value, options...)
}

// SandboxdCloudPollInterval represents the sandboxd.cloud_poll_interval node and implements sophos.Node
type SandboxdCloudPollInterval struct{ Value int64 }

// Get gets the sandboxd.cloud_poll_interval value from the UTM
func (s *SandboxdCloudPollInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.cloud_poll_interval", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdCloudPollInterval
func (s *SandboxdCloudPollInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.cloud_poll_interval", s.Value, options...)
}

// SandboxdCloudPollRequestMaximum represents the sandboxd.cloud_poll_request_maximum node and implements sophos.Node
type SandboxdCloudPollRequestMaximum struct{ Value int64 }

// Get gets the sandboxd.cloud_poll_request_maximum value from the UTM
func (s *SandboxdCloudPollRequestMaximum) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.cloud_poll_request_maximum", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdCloudPollRequestMaximum
func (s *SandboxdCloudPollRequestMaximum) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.cloud_poll_request_maximum", s.Value, options...)
}

// SandboxdCloudPollTimeout represents the sandboxd.cloud_poll_timeout node and implements sophos.Node
type SandboxdCloudPollTimeout struct{ Value int64 }

// Get gets the sandboxd.cloud_poll_timeout value from the UTM
func (s *SandboxdCloudPollTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.cloud_poll_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdCloudPollTimeout
func (s *SandboxdCloudPollTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.cloud_poll_timeout", s.Value, options...)
}

// SandboxdConnectTimeout represents the sandboxd.connect_timeout node and implements sophos.Node
type SandboxdConnectTimeout struct{ Value int64 }

// Get gets the sandboxd.connect_timeout value from the UTM
func (s *SandboxdConnectTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.connect_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdConnectTimeout
func (s *SandboxdConnectTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.connect_timeout", s.Value, options...)
}

// SandboxdDebug represents the sandboxd.debug node and implements sophos.Node
type SandboxdDebug struct{ Value map[string]interface{} }

// Get gets the sandboxd.debug value from the UTM
func (s *SandboxdDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.debug", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdDebug
func (s *SandboxdDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.debug", s.Value, options...)
}

// SandboxdDhparams2048 represents the sandboxd.dhparams_2048 node and implements sophos.Node
type SandboxdDhparams2048 struct{ Value string }

// Get gets the sandboxd.dhparams_2048 value from the UTM
func (s *SandboxdDhparams2048) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.dhparams_2048", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdDhparams2048
func (s *SandboxdDhparams2048) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.dhparams_2048", s.Value, options...)
}

// SandboxdEdgeServerCertValidation represents the sandboxd.edge_server_cert_validation node and implements sophos.Node
type SandboxdEdgeServerCertValidation struct{ Value bool }

// Get gets the sandboxd.edge_server_cert_validation value from the UTM
func (s *SandboxdEdgeServerCertValidation) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.edge_server_cert_validation", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdEdgeServerCertValidation
func (s *SandboxdEdgeServerCertValidation) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.edge_server_cert_validation", s.Value, options...)
}

// SandboxdEdgeServerHost represents the sandboxd.edge_server_host node and implements sophos.Node
type SandboxdEdgeServerHost struct{ Value string }

// Get gets the sandboxd.edge_server_host value from the UTM
func (s *SandboxdEdgeServerHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.edge_server_host", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdEdgeServerHost
func (s *SandboxdEdgeServerHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.edge_server_host", s.Value, options...)
}

// SandboxdEdgeServerPort represents the sandboxd.edge_server_port node and implements sophos.Node
type SandboxdEdgeServerPort struct{ Value int64 }

// Get gets the sandboxd.edge_server_port value from the UTM
func (s *SandboxdEdgeServerPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.edge_server_port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdEdgeServerPort
func (s *SandboxdEdgeServerPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.edge_server_port", s.Value, options...)
}

// SandboxdFiletypeSkiplist represents the sandboxd.filetype_skiplist node and implements sophos.Node
type SandboxdFiletypeSkiplist struct{ Value []interface{} }

// Get gets the sandboxd.filetype_skiplist value from the UTM
func (s *SandboxdFiletypeSkiplist) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.filetype_skiplist", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdFiletypeSkiplist
func (s *SandboxdFiletypeSkiplist) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.filetype_skiplist", s.Value, options...)
}

// SandboxdNumOfEventThreads represents the sandboxd.num_of_event_threads node and implements sophos.Node
type SandboxdNumOfEventThreads struct{ Value int64 }

// Get gets the sandboxd.num_of_event_threads value from the UTM
func (s *SandboxdNumOfEventThreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.num_of_event_threads", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdNumOfEventThreads
func (s *SandboxdNumOfEventThreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.num_of_event_threads", s.Value, options...)
}

// SandboxdNumOfWorkerThreads represents the sandboxd.num_of_worker_threads node and implements sophos.Node
type SandboxdNumOfWorkerThreads struct{ Value int64 }

// Get gets the sandboxd.num_of_worker_threads value from the UTM
func (s *SandboxdNumOfWorkerThreads) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.num_of_worker_threads", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdNumOfWorkerThreads
func (s *SandboxdNumOfWorkerThreads) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.num_of_worker_threads", s.Value, options...)
}

// SandboxdResponseTimeout represents the sandboxd.response_timeout node and implements sophos.Node
type SandboxdResponseTimeout struct{ Value int64 }

// Get gets the sandboxd.response_timeout value from the UTM
func (s *SandboxdResponseTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.response_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdResponseTimeout
func (s *SandboxdResponseTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.response_timeout", s.Value, options...)
}

// SandboxdRetryIntervals represents the sandboxd.retry_intervals node and implements sophos.Node
type SandboxdRetryIntervals struct{ Value string }

// Get gets the sandboxd.retry_intervals value from the UTM
func (s *SandboxdRetryIntervals) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.retry_intervals", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdRetryIntervals
func (s *SandboxdRetryIntervals) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.retry_intervals", s.Value, options...)
}

// SandboxdSandboxEnabled represents the sandboxd.sandbox_enabled node and implements sophos.Node
type SandboxdSandboxEnabled struct{ Value bool }

// Get gets the sandboxd.sandbox_enabled value from the UTM
func (s *SandboxdSandboxEnabled) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.sandbox_enabled", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSandboxEnabled
func (s *SandboxdSandboxEnabled) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.sandbox_enabled", s.Value, options...)
}

// SandboxdSandboxdScoreThreshold represents the sandboxd.sandboxd_score_threshold node and implements sophos.Node
type SandboxdSandboxdScoreThreshold struct{ Value int64 }

// Get gets the sandboxd.sandboxd_score_threshold value from the UTM
func (s *SandboxdSandboxdScoreThreshold) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.sandboxd_score_threshold", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSandboxdScoreThreshold
func (s *SandboxdSandboxdScoreThreshold) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.sandboxd_score_threshold", s.Value, options...)
}

// SandboxdSbxVersion represents the sandboxd.sbx_version node and implements sophos.Node
type SandboxdSbxVersion struct{ Value int64 }

// Get gets the sandboxd.sbx_version value from the UTM
func (s *SandboxdSbxVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.sbx_version", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSbxVersion
func (s *SandboxdSbxVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.sbx_version", s.Value, options...)
}

// SandboxdSqliteBusyTimeout represents the sandboxd.sqlite_busy_timeout node and implements sophos.Node
type SandboxdSqliteBusyTimeout struct{ Value int64 }

// Get gets the sandboxd.sqlite_busy_timeout value from the UTM
func (s *SandboxdSqliteBusyTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.sqlite_busy_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSqliteBusyTimeout
func (s *SandboxdSqliteBusyTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.sqlite_busy_timeout", s.Value, options...)
}

// SandboxdSslCertFile represents the sandboxd.ssl_cert_file node and implements sophos.Node
type SandboxdSslCertFile struct{ Value string }

// Get gets the sandboxd.ssl_cert_file value from the UTM
func (s *SandboxdSslCertFile) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.ssl_cert_file", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSslCertFile
func (s *SandboxdSslCertFile) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.ssl_cert_file", s.Value, options...)
}

// SandboxdSslKeyFile represents the sandboxd.ssl_key_file node and implements sophos.Node
type SandboxdSslKeyFile struct{ Value string }

// Get gets the sandboxd.ssl_key_file value from the UTM
func (s *SandboxdSslKeyFile) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.ssl_key_file", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSslKeyFile
func (s *SandboxdSslKeyFile) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.ssl_key_file", s.Value, options...)
}

// SandboxdSslciphers represents the sandboxd.sslciphers node and implements sophos.Node
type SandboxdSslciphers struct{ Value string }

// Get gets the sandboxd.sslciphers value from the UTM
func (s *SandboxdSslciphers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sandboxd.sslciphers", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSandboxdSslciphers
func (s *SandboxdSslciphers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sandboxd.sslciphers", s.Value, options...)
}

// SettingsAdminEmail represents the settings.admin_email node and implements sophos.Node
type SettingsAdminEmail struct{ Value string }

// Get gets the settings.admin_email value from the UTM
func (s *SettingsAdminEmail) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.admin_email", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsAdminEmail
func (s *SettingsAdminEmail) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.admin_email", s.Value, options...)
}

// SettingsBasicSetup represents the settings.basic_setup node and implements sophos.Node
type SettingsBasicSetup struct{ Value bool }

// Get gets the settings.basic_setup value from the UTM
func (s *SettingsBasicSetup) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.basic_setup", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsBasicSetup
func (s *SettingsBasicSetup) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.basic_setup", s.Value, options...)
}

// SettingsCcMode represents the settings.cc_mode node and implements sophos.Node
type SettingsCcMode struct{ Value bool }

// Get gets the settings.cc_mode value from the UTM
func (s *SettingsCcMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.cc_mode", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsCcMode
func (s *SettingsCcMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.cc_mode", s.Value, options...)
}

// SettingsCity represents the settings.city node and implements sophos.Node
type SettingsCity struct{ Value string }

// Get gets the settings.city value from the UTM
func (s *SettingsCity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.city", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsCity
func (s *SettingsCity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.city", s.Value, options...)
}

// SettingsCountry represents the settings.country node and implements sophos.Node
type SettingsCountry struct{ Value string }

// Get gets the settings.country value from the UTM
func (s *SettingsCountry) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.country", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsCountry
func (s *SettingsCountry) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.country", s.Value, options...)
}

// SettingsExtraSwap represents the settings.extra_swap node and implements sophos.Node
type SettingsExtraSwap struct{ Value map[string]interface{} }

// Get gets the settings.extra_swap value from the UTM
func (s *SettingsExtraSwap) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.extra_swap", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsExtraSwap
func (s *SettingsExtraSwap) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.extra_swap", s.Value, options...)
}

// SettingsHostname represents the settings.hostname node and implements sophos.Node
type SettingsHostname struct{ Value string }

// Get gets the settings.hostname value from the UTM
func (s *SettingsHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsHostname
func (s *SettingsHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.hostname", s.Value, options...)
}

// SettingsIcsaMode represents the settings.icsa_mode node and implements sophos.Node
type SettingsIcsaMode struct{ Value bool }

// Get gets the settings.icsa_mode value from the UTM
func (s *SettingsIcsaMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.icsa_mode", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsIcsaMode
func (s *SettingsIcsaMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.icsa_mode", s.Value, options...)
}

// SettingsOrganization represents the settings.organization node and implements sophos.Node
type SettingsOrganization struct{ Value string }

// Get gets the settings.organization value from the UTM
func (s *SettingsOrganization) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.organization", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsOrganization
func (s *SettingsOrganization) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.organization", s.Value, options...)
}

// SettingsPasswordComplexityMinDigits represents the settings.password_complexity.min_digits node and implements sophos.Node
type SettingsPasswordComplexityMinDigits struct{ Value int64 }

// Get gets the settings.password_complexity.min_digits value from the UTM
func (s *SettingsPasswordComplexityMinDigits) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.min_digits", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityMinDigits
func (s *SettingsPasswordComplexityMinDigits) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.min_digits", s.Value, options...)
}

// SettingsPasswordComplexityMinLength represents the settings.password_complexity.min_length node and implements sophos.Node
type SettingsPasswordComplexityMinLength struct{ Value int64 }

// Get gets the settings.password_complexity.min_length value from the UTM
func (s *SettingsPasswordComplexityMinLength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.min_length", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityMinLength
func (s *SettingsPasswordComplexityMinLength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.min_length", s.Value, options...)
}

// SettingsPasswordComplexityMinLowerChars represents the settings.password_complexity.min_lower_chars node and implements sophos.Node
type SettingsPasswordComplexityMinLowerChars struct{ Value int64 }

// Get gets the settings.password_complexity.min_lower_chars value from the UTM
func (s *SettingsPasswordComplexityMinLowerChars) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.min_lower_chars", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityMinLowerChars
func (s *SettingsPasswordComplexityMinLowerChars) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.min_lower_chars", s.Value, options...)
}

// SettingsPasswordComplexityMinSpecialChars represents the settings.password_complexity.min_special_chars node and implements sophos.Node
type SettingsPasswordComplexityMinSpecialChars struct{ Value int64 }

// Get gets the settings.password_complexity.min_special_chars value from the UTM
func (s *SettingsPasswordComplexityMinSpecialChars) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.min_special_chars", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityMinSpecialChars
func (s *SettingsPasswordComplexityMinSpecialChars) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.min_special_chars", s.Value, options...)
}

// SettingsPasswordComplexityMinUpperChars represents the settings.password_complexity.min_upper_chars node and implements sophos.Node
type SettingsPasswordComplexityMinUpperChars struct{ Value int64 }

// Get gets the settings.password_complexity.min_upper_chars value from the UTM
func (s *SettingsPasswordComplexityMinUpperChars) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.min_upper_chars", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityMinUpperChars
func (s *SettingsPasswordComplexityMinUpperChars) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.min_upper_chars", s.Value, options...)
}

// SettingsPasswordComplexityStatus represents the settings.password_complexity.status node and implements sophos.Node
type SettingsPasswordComplexityStatus struct{ Value bool }

// Get gets the settings.password_complexity.status value from the UTM
func (s *SettingsPasswordComplexityStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.password_complexity.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPasswordComplexityStatus
func (s *SettingsPasswordComplexityStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.password_complexity.status", s.Value, options...)
}

// SettingsPopularity represents the settings.popularity node and implements sophos.Node
type SettingsPopularity struct{ Value string }

// Get gets the settings.popularity value from the UTM
func (s *SettingsPopularity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.popularity", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsPopularity
func (s *SettingsPopularity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.popularity", s.Value, options...)
}

// SettingsRasUpdate represents the settings.ras_update node and implements sophos.Node
type SettingsRasUpdate struct{ Value string }

// Get gets the settings.ras_update value from the UTM
func (s *SettingsRasUpdate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.ras_update", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsRasUpdate
func (s *SettingsRasUpdate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.ras_update", s.Value, options...)
}

// SettingsSystemId represents the settings.system_id node and implements sophos.Node
type SettingsSystemId struct{ Value string }

// Get gets the settings.system_id value from the UTM
func (s *SettingsSystemId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.system_id", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsSystemId
func (s *SettingsSystemId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.system_id", s.Value, options...)
}

// SettingsTimezone represents the settings.timezone node and implements sophos.Node
type SettingsTimezone struct{ Value string }

// Get gets the settings.timezone value from the UTM
func (s *SettingsTimezone) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/settings.timezone", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSettingsTimezone
func (s *SettingsTimezone) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/settings.timezone", s.Value, options...)
}

// SipAllowedNetworks represents the sip.allowed_networks node and implements sophos.Node
type SipAllowedNetworks struct{ Value []interface{} }

// Get gets the sip.allowed_networks value from the UTM
func (s *SipAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sip.allowed_networks", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSipAllowedNetworks
func (s *SipAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sip.allowed_networks", s.Value, options...)
}

// SipExpectMode represents the sip.expect_mode node and implements sophos.Node
type SipExpectMode struct{ Value string }

// Get gets the sip.expect_mode value from the UTM
func (s *SipExpectMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sip.expect_mode", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSipExpectMode
func (s *SipExpectMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sip.expect_mode", s.Value, options...)
}

// SipLogRelated represents the sip.log_related node and implements sophos.Node
type SipLogRelated struct{ Value bool }

// Get gets the sip.log_related value from the UTM
func (s *SipLogRelated) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sip.log_related", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSipLogRelated
func (s *SipLogRelated) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sip.log_related", s.Value, options...)
}

// SipServers represents the sip.servers node and implements sophos.Node
type SipServers struct{ Value []interface{} }

// Get gets the sip.servers value from the UTM
func (s *SipServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sip.servers", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSipServers
func (s *SipServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sip.servers", s.Value, options...)
}

// SipStatus represents the sip.status node and implements sophos.Node
type SipStatus struct{ Value bool }

// Get gets the sip.status value from the UTM
func (s *SipStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sip.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSipStatus
func (s *SipStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sip.status", s.Value, options...)
}

// SmsClientHostname represents the sms_client.hostname node and implements sophos.Node
type SmsClientHostname struct{ Value string }

// Get gets the sms_client.hostname value from the UTM
func (s *SmsClientHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientHostname
func (s *SmsClientHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.hostname", s.Value, options...)
}

// SmsClientName represents the sms_client.name node and implements sophos.Node
type SmsClientName struct{ Value string }

// Get gets the sms_client.name value from the UTM
func (s *SmsClientName) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.name", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientName
func (s *SmsClientName) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.name", s.Value, options...)
}

// SmsClientPassword represents the sms_client.password node and implements sophos.Node
type SmsClientPassword struct{ Value string }

// Get gets the sms_client.password value from the UTM
func (s *SmsClientPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.password", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientPassword
func (s *SmsClientPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.password", s.Value, options...)
}

// SmsClientPort represents the sms_client.port node and implements sophos.Node
type SmsClientPort struct{ Value map[string]interface{} }

// Get gets the sms_client.port value from the UTM
func (s *SmsClientPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientPort
func (s *SmsClientPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.port", s.Value, options...)
}

// SmsClientStatus represents the sms_client.status node and implements sophos.Node
type SmsClientStatus struct{ Value bool }

// Get gets the sms_client.status value from the UTM
func (s *SmsClientStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientStatus
func (s *SmsClientStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.status", s.Value, options...)
}

// SmsClientUsername represents the sms_client.username node and implements sophos.Node
type SmsClientUsername struct{ Value string }

// Get gets the sms_client.username value from the UTM
func (s *SmsClientUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/sms_client.username", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmsClientUsername
func (s *SmsClientUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/sms_client.username", s.Value, options...)
}

// SmtpAdLookupContacts represents the smtp.ad_lookup_contacts node and implements sophos.Node
type SmtpAdLookupContacts struct{ Value bool }

// Get gets the smtp.ad_lookup_contacts value from the UTM
func (s *SmtpAdLookupContacts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.ad_lookup_contacts", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpAdLookupContacts
func (s *SmtpAdLookupContacts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.ad_lookup_contacts", s.Value, options...)
}

// SmtpAuthAaa represents the smtp.auth_aaa node and implements sophos.Node
type SmtpAuthAaa struct{ Value []interface{} }

// Get gets the smtp.auth_aaa value from the UTM
func (s *SmtpAuthAaa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.auth_aaa", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpAuthAaa
func (s *SmtpAuthAaa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.auth_aaa", s.Value, options...)
}

// SmtpAuthStatus represents the smtp.auth_status node and implements sophos.Node
type SmtpAuthStatus struct{ Value bool }

// Get gets the smtp.auth_status value from the UTM
func (s *SmtpAuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.auth_status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpAuthStatus
func (s *SmtpAuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.auth_status", s.Value, options...)
}

// SmtpAvFooter represents the smtp.av_footer node and implements sophos.Node
type SmtpAvFooter struct{ Value string }

// Get gets the smtp.av_footer value from the UTM
func (s *SmtpAvFooter) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.av_footer", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpAvFooter
func (s *SmtpAvFooter) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.av_footer", s.Value, options...)
}

// SmtpAvFooterStatus represents the smtp.av_footer_status node and implements sophos.Node
type SmtpAvFooterStatus struct{ Value bool }

// Get gets the smtp.av_footer_status value from the UTM
func (s *SmtpAvFooterStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.av_footer_status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpAvFooterStatus
func (s *SmtpAvFooterStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.av_footer_status", s.Value, options...)
}

// SmtpBatvSecret represents the smtp.batv_secret node and implements sophos.Node
type SmtpBatvSecret struct{ Value string }

// Get gets the smtp.batv_secret value from the UTM
func (s *SmtpBatvSecret) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.batv_secret", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpBatvSecret
func (s *SmtpBatvSecret) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.batv_secret", s.Value, options...)
}

// SmtpBlockerService represents the smtp.blocker_service node and implements sophos.Node
type SmtpBlockerService struct{ Value string }

// Get gets the smtp.blocker_service value from the UTM
func (s *SmtpBlockerService) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.blocker_service", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpBlockerService
func (s *SmtpBlockerService) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.blocker_service", s.Value, options...)
}

// SmtpCffAsMarker represents the smtp.cff_as_marker node and implements sophos.Node
type SmtpCffAsMarker struct{ Value string }

// Get gets the smtp.cff_as_marker value from the UTM
func (s *SmtpCffAsMarker) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.cff_as_marker", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpCffAsMarker
func (s *SmtpCffAsMarker) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.cff_as_marker", s.Value, options...)
}

// SmtpDkimDomains represents the smtp.dkim_domains node and implements sophos.Node
type SmtpDkimDomains struct{ Value []interface{} }

// Get gets the smtp.dkim_domains value from the UTM
func (s *SmtpDkimDomains) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.dkim_domains", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpDkimDomains
func (s *SmtpDkimDomains) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.dkim_domains", s.Value, options...)
}

// SmtpDkimPrivateKey represents the smtp.dkim_private_key node and implements sophos.Node
type SmtpDkimPrivateKey struct{ Value string }

// Get gets the smtp.dkim_private_key value from the UTM
func (s *SmtpDkimPrivateKey) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.dkim_private_key", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpDkimPrivateKey
func (s *SmtpDkimPrivateKey) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.dkim_private_key", s.Value, options...)
}

// SmtpDkimSelector represents the smtp.dkim_selector node and implements sophos.Node
type SmtpDkimSelector struct{ Value string }

// Get gets the smtp.dkim_selector value from the UTM
func (s *SmtpDkimSelector) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.dkim_selector", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpDkimSelector
func (s *SmtpDkimSelector) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.dkim_selector", s.Value, options...)
}

// SmtpEnableOldExpressionFilter represents the smtp.enable_old_expression_filter node and implements sophos.Node
type SmtpEnableOldExpressionFilter struct{ Value bool }

// Get gets the smtp.enable_old_expression_filter value from the UTM
func (s *SmtpEnableOldExpressionFilter) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.enable_old_expression_filter", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpEnableOldExpressionFilter
func (s *SmtpEnableOldExpressionFilter) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.enable_old_expression_filter", s.Value, options...)
}

// SmtpEncryptionUtility represents the smtp.encryption_utility node and implements sophos.Node
type SmtpEncryptionUtility struct{ Value string }

// Get gets the smtp.encryption_utility value from the UTM
func (s *SmtpEncryptionUtility) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.encryption_utility", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpEncryptionUtility
func (s *SmtpEncryptionUtility) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.encryption_utility", s.Value, options...)
}

// SmtpExceptions represents the smtp.exceptions node and implements sophos.Node
type SmtpExceptions struct{ Value []interface{} }

// Get gets the smtp.exceptions value from the UTM
func (s *SmtpExceptions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.exceptions", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpExceptions
func (s *SmtpExceptions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.exceptions", s.Value, options...)
}

// SmtpFootersMode represents the smtp.footers_mode node and implements sophos.Node
type SmtpFootersMode struct{ Value string }

// Get gets the smtp.footers_mode value from the UTM
func (s *SmtpFootersMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.footers_mode", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpFootersMode
func (s *SmtpFootersMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.footers_mode", s.Value, options...)
}

// SmtpGlobalAsReject represents the smtp.global_as_reject node and implements sophos.Node
type SmtpGlobalAsReject struct{ Value string }

// Get gets the smtp.global_as_reject value from the UTM
func (s *SmtpGlobalAsReject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.global_as_reject", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpGlobalAsReject
func (s *SmtpGlobalAsReject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.global_as_reject", s.Value, options...)
}

// SmtpGlobalAvReject represents the smtp.global_av_reject node and implements sophos.Node
type SmtpGlobalAvReject struct{ Value bool }

// Get gets the smtp.global_av_reject value from the UTM
func (s *SmtpGlobalAvReject) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.global_av_reject", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpGlobalAvReject
func (s *SmtpGlobalAvReject) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.global_av_reject", s.Value, options...)
}

// SmtpGlobalProfile represents the smtp.global_profile node and implements sophos.Node
type SmtpGlobalProfile struct{ Value string }

// Get gets the smtp.global_profile value from the UTM
func (s *SmtpGlobalProfile) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.global_profile", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpGlobalProfile
func (s *SmtpGlobalProfile) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.global_profile", s.Value, options...)
}

// SmtpHostBlacklist represents the smtp.host_blacklist node and implements sophos.Node
type SmtpHostBlacklist struct{ Value []interface{} }

// Get gets the smtp.host_blacklist value from the UTM
func (s *SmtpHostBlacklist) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.host_blacklist", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpHostBlacklist
func (s *SmtpHostBlacklist) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.host_blacklist", s.Value, options...)
}

// SmtpHostname represents the smtp.hostname node and implements sophos.Node
type SmtpHostname struct{ Value string }

// Get gets the smtp.hostname value from the UTM
func (s *SmtpHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpHostname
func (s *SmtpHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.hostname", s.Value, options...)
}

// SmtpMaxMessageSize represents the smtp.max_message_size node and implements sophos.Node
type SmtpMaxMessageSize struct{ Value int64 }

// Get gets the smtp.max_message_size value from the UTM
func (s *SmtpMaxMessageSize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.max_message_size", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpMaxMessageSize
func (s *SmtpMaxMessageSize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.max_message_size", s.Value, options...)
}

// SmtpMode represents the smtp.mode node and implements sophos.Node
type SmtpMode struct{ Value string }

// Get gets the smtp.mode value from the UTM
func (s *SmtpMode) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.mode", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpMode
func (s *SmtpMode) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.mode", s.Value, options...)
}

// SmtpParentProxyAuthPass represents the smtp.parent_proxy_auth_pass node and implements sophos.Node
type SmtpParentProxyAuthPass struct{ Value string }

// Get gets the smtp.parent_proxy_auth_pass value from the UTM
func (s *SmtpParentProxyAuthPass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_auth_pass", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyAuthPass
func (s *SmtpParentProxyAuthPass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_auth_pass", s.Value, options...)
}

// SmtpParentProxyAuthStatus represents the smtp.parent_proxy_auth_status node and implements sophos.Node
type SmtpParentProxyAuthStatus struct{ Value bool }

// Get gets the smtp.parent_proxy_auth_status value from the UTM
func (s *SmtpParentProxyAuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_auth_status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyAuthStatus
func (s *SmtpParentProxyAuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_auth_status", s.Value, options...)
}

// SmtpParentProxyAuthUser represents the smtp.parent_proxy_auth_user node and implements sophos.Node
type SmtpParentProxyAuthUser struct{ Value string }

// Get gets the smtp.parent_proxy_auth_user value from the UTM
func (s *SmtpParentProxyAuthUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_auth_user", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyAuthUser
func (s *SmtpParentProxyAuthUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_auth_user", s.Value, options...)
}

// SmtpParentProxyHost represents the smtp.parent_proxy_host node and implements sophos.Node
type SmtpParentProxyHost struct{ Value string }

// Get gets the smtp.parent_proxy_host value from the UTM
func (s *SmtpParentProxyHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_host", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyHost
func (s *SmtpParentProxyHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_host", s.Value, options...)
}

// SmtpParentProxyPort represents the smtp.parent_proxy_port node and implements sophos.Node
type SmtpParentProxyPort struct{ Value int64 }

// Get gets the smtp.parent_proxy_port value from the UTM
func (s *SmtpParentProxyPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyPort
func (s *SmtpParentProxyPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_port", s.Value, options...)
}

// SmtpParentProxyStatus represents the smtp.parent_proxy_status node and implements sophos.Node
type SmtpParentProxyStatus struct{ Value bool }

// Get gets the smtp.parent_proxy_status value from the UTM
func (s *SmtpParentProxyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.parent_proxy_status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpParentProxyStatus
func (s *SmtpParentProxyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.parent_proxy_status", s.Value, options...)
}

// SmtpPostmaster represents the smtp.postmaster node and implements sophos.Node
type SmtpPostmaster struct{ Value string }

// Get gets the smtp.postmaster value from the UTM
func (s *SmtpPostmaster) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.postmaster", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpPostmaster
func (s *SmtpPostmaster) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.postmaster", s.Value, options...)
}

// SmtpProfiles represents the smtp.profiles node and implements sophos.Node
type SmtpProfiles struct{ Value []interface{} }

// Get gets the smtp.profiles value from the UTM
func (s *SmtpProfiles) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.profiles", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpProfiles
func (s *SmtpProfiles) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.profiles", s.Value, options...)
}

// SmtpRecipientsMax represents the smtp.recipients_max node and implements sophos.Node
type SmtpRecipientsMax struct{ Value int64 }

// Get gets the smtp.recipients_max value from the UTM
func (s *SmtpRecipientsMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.recipients_max", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpRecipientsMax
func (s *SmtpRecipientsMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.recipients_max", s.Value, options...)
}

// SmtpRelays represents the smtp.relays node and implements sophos.Node
type SmtpRelays struct{ Value []interface{} }

// Get gets the smtp.relays value from the UTM
func (s *SmtpRelays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.relays", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpRelays
func (s *SmtpRelays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.relays", s.Value, options...)
}

// SmtpSasiToken represents the smtp.sasi_token node and implements sophos.Node
type SmtpSasiToken struct{ Value string }

// Get gets the smtp.sasi_token value from the UTM
func (s *SmtpSasiToken) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.sasi_token", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSasiToken
func (s *SmtpSasiToken) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.sasi_token", s.Value, options...)
}

// SmtpScanOutgoingEmails represents the smtp.scan_outgoing_emails node and implements sophos.Node
type SmtpScanOutgoingEmails struct{ Value bool }

// Get gets the smtp.scan_outgoing_emails value from the UTM
func (s *SmtpScanOutgoingEmails) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.scan_outgoing_emails", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpScanOutgoingEmails
func (s *SmtpScanOutgoingEmails) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.scan_outgoing_emails", s.Value, options...)
}

// SmtpScannerPoolMaxPool represents the smtp.scanner_pool.max_pool node and implements sophos.Node
type SmtpScannerPoolMaxPool struct{ Value int64 }

// Get gets the smtp.scanner_pool.max_pool value from the UTM
func (s *SmtpScannerPoolMaxPool) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.scanner_pool.max_pool", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpScannerPoolMaxPool
func (s *SmtpScannerPoolMaxPool) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.scanner_pool.max_pool", s.Value, options...)
}

// SmtpScannerPoolThresholds represents the smtp.scanner_pool.thresholds node and implements sophos.Node
type SmtpScannerPoolThresholds struct{ Value []int64 }

// Get gets the smtp.scanner_pool.thresholds value from the UTM
func (s *SmtpScannerPoolThresholds) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.scanner_pool.thresholds", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpScannerPoolThresholds
func (s *SmtpScannerPoolThresholds) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.scanner_pool.thresholds", s.Value, options...)
}

// SmtpScannerTimeout represents the smtp.scanner_timeout node and implements sophos.Node
type SmtpScannerTimeout struct{ Value int64 }

// Get gets the smtp.scanner_timeout value from the UTM
func (s *SmtpScannerTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.scanner_timeout", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpScannerTimeout
func (s *SmtpScannerTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.scanner_timeout", s.Value, options...)
}

// SmtpSmarthostAuth represents the smtp.smarthost_auth node and implements sophos.Node
type SmtpSmarthostAuth struct{ Value bool }

// Get gets the smtp.smarthost_auth value from the UTM
func (s *SmtpSmarthostAuth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_auth", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostAuth
func (s *SmtpSmarthostAuth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_auth", s.Value, options...)
}

// SmtpSmarthostHostname represents the smtp.smarthost_hostname node and implements sophos.Node
type SmtpSmarthostHostname struct{ Value string }

// Get gets the smtp.smarthost_hostname value from the UTM
func (s *SmtpSmarthostHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostHostname
func (s *SmtpSmarthostHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_hostname", s.Value, options...)
}

// SmtpSmarthostPass represents the smtp.smarthost_pass node and implements sophos.Node
type SmtpSmarthostPass struct{ Value string }

// Get gets the smtp.smarthost_pass value from the UTM
func (s *SmtpSmarthostPass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_pass", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostPass
func (s *SmtpSmarthostPass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_pass", s.Value, options...)
}

// SmtpSmarthostPort represents the smtp.smarthost_port node and implements sophos.Node
type SmtpSmarthostPort struct{ Value int64 }

// Get gets the smtp.smarthost_port value from the UTM
func (s *SmtpSmarthostPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostPort
func (s *SmtpSmarthostPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_port", s.Value, options...)
}

// SmtpSmarthostStatus represents the smtp.smarthost_status node and implements sophos.Node
type SmtpSmarthostStatus struct{ Value bool }

// Get gets the smtp.smarthost_status value from the UTM
func (s *SmtpSmarthostStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostStatus
func (s *SmtpSmarthostStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_status", s.Value, options...)
}

// SmtpSmarthostUser represents the smtp.smarthost_user node and implements sophos.Node
type SmtpSmarthostUser struct{ Value string }

// Get gets the smtp.smarthost_user value from the UTM
func (s *SmtpSmarthostUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smarthost_user", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmarthostUser
func (s *SmtpSmarthostUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smarthost_user", s.Value, options...)
}

// SmtpSmtpAcceptMax represents the smtp.smtp_accept_max node and implements sophos.Node
type SmtpSmtpAcceptMax struct{ Value int64 }

// Get gets the smtp.smtp_accept_max value from the UTM
func (s *SmtpSmtpAcceptMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smtp_accept_max", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmtpAcceptMax
func (s *SmtpSmtpAcceptMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smtp_accept_max", s.Value, options...)
}

// SmtpSmtpAcceptPerConnectionMax represents the smtp.smtp_accept_per_connection_max node and implements sophos.Node
type SmtpSmtpAcceptPerConnectionMax struct{ Value int64 }

// Get gets the smtp.smtp_accept_per_connection_max value from the UTM
func (s *SmtpSmtpAcceptPerConnectionMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smtp_accept_per_connection_max", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmtpAcceptPerConnectionMax
func (s *SmtpSmtpAcceptPerConnectionMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smtp_accept_per_connection_max", s.Value, options...)
}

// SmtpSmtpAcceptPerHostMax represents the smtp.smtp_accept_per_host_max node and implements sophos.Node
type SmtpSmtpAcceptPerHostMax struct{ Value int64 }

// Get gets the smtp.smtp_accept_per_host_max value from the UTM
func (s *SmtpSmtpAcceptPerHostMax) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smtp_accept_per_host_max", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmtpAcceptPerHostMax
func (s *SmtpSmtpAcceptPerHostMax) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smtp_accept_per_host_max", s.Value, options...)
}

// SmtpSmtpAllowedInterfaces represents the smtp.smtp_allowed_interfaces node and implements sophos.Node
type SmtpSmtpAllowedInterfaces struct{ Value []interface{} }

// Get gets the smtp.smtp_allowed_interfaces value from the UTM
func (s *SmtpSmtpAllowedInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smtp_allowed_interfaces", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmtpAllowedInterfaces
func (s *SmtpSmtpAllowedInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smtp_allowed_interfaces", s.Value, options...)
}

// SmtpSmtpListenOnItf represents the smtp.smtp_listen_on_itf node and implements sophos.Node
type SmtpSmtpListenOnItf struct{ Value string }

// Get gets the smtp.smtp_listen_on_itf value from the UTM
func (s *SmtpSmtpListenOnItf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.smtp_listen_on_itf", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpSmtpListenOnItf
func (s *SmtpSmtpListenOnItf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.smtp_listen_on_itf", s.Value, options...)
}

// SmtpStatus represents the smtp.status node and implements sophos.Node
type SmtpStatus struct{ Value bool }

// Get gets the smtp.status value from the UTM
func (s *SmtpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpStatus
func (s *SmtpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.status", s.Value, options...)
}

// SmtpTlsAvoid represents the smtp.tls_avoid node and implements sophos.Node
type SmtpTlsAvoid struct{ Value []interface{} }

// Get gets the smtp.tls_avoid value from the UTM
func (s *SmtpTlsAvoid) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.tls_avoid", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTlsAvoid
func (s *SmtpTlsAvoid) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.tls_avoid", s.Value, options...)
}

// SmtpTlsCert represents the smtp.tls_cert node and implements sophos.Node
type SmtpTlsCert struct{ Value string }

// Get gets the smtp.tls_cert value from the UTM
func (s *SmtpTlsCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.tls_cert", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTlsCert
func (s *SmtpTlsCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.tls_cert", s.Value, options...)
}

// SmtpTlsRequire represents the smtp.tls_require node and implements sophos.Node
type SmtpTlsRequire struct{ Value []interface{} }

// Get gets the smtp.tls_require value from the UTM
func (s *SmtpTlsRequire) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.tls_require", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTlsRequire
func (s *SmtpTlsRequire) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.tls_require", s.Value, options...)
}

// SmtpTlsRequireSenderDomains represents the smtp.tls_require_sender_domains node and implements sophos.Node
type SmtpTlsRequireSenderDomains struct{ Value []interface{} }

// Get gets the smtp.tls_require_sender_domains value from the UTM
func (s *SmtpTlsRequireSenderDomains) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.tls_require_sender_domains", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTlsRequireSenderDomains
func (s *SmtpTlsRequireSenderDomains) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.tls_require_sender_domains", s.Value, options...)
}

// SmtpTlsVersion represents the smtp.tls_version node and implements sophos.Node
type SmtpTlsVersion struct{ Value string }

// Get gets the smtp.tls_version value from the UTM
func (s *SmtpTlsVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.tls_version", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTlsVersion
func (s *SmtpTlsVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.tls_version", s.Value, options...)
}

// SmtpTransparent represents the smtp.transparent node and implements sophos.Node
type SmtpTransparent struct{ Value bool }

// Get gets the smtp.transparent value from the UTM
func (s *SmtpTransparent) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.transparent", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTransparent
func (s *SmtpTransparent) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.transparent", s.Value, options...)
}

// SmtpTransparentSkip represents the smtp.transparent_skip node and implements sophos.Node
type SmtpTransparentSkip struct{ Value []interface{} }

// Get gets the smtp.transparent_skip value from the UTM
func (s *SmtpTransparentSkip) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.transparent_skip", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTransparentSkip
func (s *SmtpTransparentSkip) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.transparent_skip", s.Value, options...)
}

// SmtpTransparentSkipAutoPf represents the smtp.transparent_skip_auto_pf node and implements sophos.Node
type SmtpTransparentSkipAutoPf struct{ Value bool }

// Get gets the smtp.transparent_skip_auto_pf value from the UTM
func (s *SmtpTransparentSkipAutoPf) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.transparent_skip_auto_pf", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTransparentSkipAutoPf
func (s *SmtpTransparentSkipAutoPf) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.transparent_skip_auto_pf", s.Value, options...)
}

// SmtpTransparentSmtps represents the smtp.transparent_smtps node and implements sophos.Node
type SmtpTransparentSmtps struct{ Value bool }

// Get gets the smtp.transparent_smtps value from the UTM
func (s *SmtpTransparentSmtps) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.transparent_smtps", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTransparentSmtps
func (s *SmtpTransparentSmtps) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.transparent_smtps", s.Value, options...)
}

// SmtpTransparentStartTls represents the smtp.transparent_start_tls node and implements sophos.Node
type SmtpTransparentStartTls struct{ Value bool }

// Get gets the smtp.transparent_start_tls value from the UTM
func (s *SmtpTransparentStartTls) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.transparent_start_tls", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpTransparentStartTls
func (s *SmtpTransparentStartTls) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.transparent_start_tls", s.Value, options...)
}

// SmtpUpstreamHosts represents the smtp.upstream_hosts node and implements sophos.Node
type SmtpUpstreamHosts struct{ Value []interface{} }

// Get gets the smtp.upstream_hosts value from the UTM
func (s *SmtpUpstreamHosts) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.upstream_hosts", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpUpstreamHosts
func (s *SmtpUpstreamHosts) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.upstream_hosts", s.Value, options...)
}

// SmtpUpstreamHostsOnly represents the smtp.upstream_hosts_only node and implements sophos.Node
type SmtpUpstreamHostsOnly struct{ Value bool }

// Get gets the smtp.upstream_hosts_only value from the UTM
func (s *SmtpUpstreamHostsOnly) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.upstream_hosts_only", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpUpstreamHostsOnly
func (s *SmtpUpstreamHostsOnly) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.upstream_hosts_only", s.Value, options...)
}

// SmtpUseClientMime represents the smtp.use_client_mime node and implements sophos.Node
type SmtpUseClientMime struct{ Value string }

// Get gets the smtp.use_client_mime value from the UTM
func (s *SmtpUseClientMime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/smtp.use_client_mime", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSmtpUseClientMime
func (s *SmtpUseClientMime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/smtp.use_client_mime", s.Value, options...)
}

// SnmpAllowedNetworks represents the snmp.allowed_networks node and implements sophos.Node
type SnmpAllowedNetworks struct{ Value []interface{} }

// Get gets the snmp.allowed_networks value from the UTM
func (s *SnmpAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.allowed_networks", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpAllowedNetworks
func (s *SnmpAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.allowed_networks", s.Value, options...)
}

// SnmpAuthPassword represents the snmp.auth_password node and implements sophos.Node
type SnmpAuthPassword struct{ Value string }

// Get gets the snmp.auth_password value from the UTM
func (s *SnmpAuthPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.auth_password", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpAuthPassword
func (s *SnmpAuthPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.auth_password", s.Value, options...)
}

// SnmpAuthType represents the snmp.auth_type node and implements sophos.Node
type SnmpAuthType struct{ Value string }

// Get gets the snmp.auth_type value from the UTM
func (s *SnmpAuthType) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.auth_type", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpAuthType
func (s *SnmpAuthType) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.auth_type", s.Value, options...)
}

// SnmpCommunity represents the snmp.community node and implements sophos.Node
type SnmpCommunity struct{ Value string }

// Get gets the snmp.community value from the UTM
func (s *SnmpCommunity) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.community", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpCommunity
func (s *SnmpCommunity) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.community", s.Value, options...)
}

// SnmpDeviceAdmin represents the snmp.device_admin node and implements sophos.Node
type SnmpDeviceAdmin struct{ Value string }

// Get gets the snmp.device_admin value from the UTM
func (s *SnmpDeviceAdmin) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.device_admin", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpDeviceAdmin
func (s *SnmpDeviceAdmin) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.device_admin", s.Value, options...)
}

// SnmpDeviceLocation represents the snmp.device_location node and implements sophos.Node
type SnmpDeviceLocation struct{ Value string }

// Get gets the snmp.device_location value from the UTM
func (s *SnmpDeviceLocation) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.device_location", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpDeviceLocation
func (s *SnmpDeviceLocation) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.device_location", s.Value, options...)
}

// SnmpDeviceName represents the snmp.device_name node and implements sophos.Node
type SnmpDeviceName struct{ Value string }

// Get gets the snmp.device_name value from the UTM
func (s *SnmpDeviceName) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.device_name", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpDeviceName
func (s *SnmpDeviceName) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.device_name", s.Value, options...)
}

// SnmpEncryptPassword represents the snmp.encrypt_password node and implements sophos.Node
type SnmpEncryptPassword struct{ Value string }

// Get gets the snmp.encrypt_password value from the UTM
func (s *SnmpEncryptPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.encrypt_password", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpEncryptPassword
func (s *SnmpEncryptPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.encrypt_password", s.Value, options...)
}

// SnmpEncryptType represents the snmp.encrypt_type node and implements sophos.Node
type SnmpEncryptType struct{ Value string }

// Get gets the snmp.encrypt_type value from the UTM
func (s *SnmpEncryptType) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.encrypt_type", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpEncryptType
func (s *SnmpEncryptType) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.encrypt_type", s.Value, options...)
}

// SnmpStatus represents the snmp.status node and implements sophos.Node
type SnmpStatus struct{ Value bool }

// Get gets the snmp.status value from the UTM
func (s *SnmpStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpStatus
func (s *SnmpStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.status", s.Value, options...)
}

// SnmpTraps represents the snmp.traps node and implements sophos.Node
type SnmpTraps struct{ Value []interface{} }

// Get gets the snmp.traps value from the UTM
func (s *SnmpTraps) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.traps", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpTraps
func (s *SnmpTraps) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.traps", s.Value, options...)
}

// SnmpTrapsUseOldOids represents the snmp.traps_use_old_oids node and implements sophos.Node
type SnmpTrapsUseOldOids struct{ Value bool }

// Get gets the snmp.traps_use_old_oids value from the UTM
func (s *SnmpTrapsUseOldOids) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.traps_use_old_oids", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpTrapsUseOldOids
func (s *SnmpTrapsUseOldOids) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.traps_use_old_oids", s.Value, options...)
}

// SnmpUsername represents the snmp.username node and implements sophos.Node
type SnmpUsername struct{ Value string }

// Get gets the snmp.username value from the UTM
func (s *SnmpUsername) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.username", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpUsername
func (s *SnmpUsername) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.username", s.Value, options...)
}

// SnmpVersion represents the snmp.version node and implements sophos.Node
type SnmpVersion struct{ Value string }

// Get gets the snmp.version value from the UTM
func (s *SnmpVersion) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/snmp.version", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSnmpVersion
func (s *SnmpVersion) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/snmp.version", s.Value, options...)
}

// SocksAaa represents the socks.aaa node and implements sophos.Node
type SocksAaa struct{ Value []interface{} }

// Get gets the socks.aaa value from the UTM
func (s *SocksAaa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/socks.aaa", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSocksAaa
func (s *SocksAaa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/socks.aaa", s.Value, options...)
}

// SocksAllowedNetworks represents the socks.allowed_networks node and implements sophos.Node
type SocksAllowedNetworks struct{ Value []interface{} }

// Get gets the socks.allowed_networks value from the UTM
func (s *SocksAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/socks.allowed_networks", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSocksAllowedNetworks
func (s *SocksAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/socks.allowed_networks", s.Value, options...)
}

// SocksAuthentication represents the socks.authentication node and implements sophos.Node
type SocksAuthentication struct{ Value bool }

// Get gets the socks.authentication value from the UTM
func (s *SocksAuthentication) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/socks.authentication", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSocksAuthentication
func (s *SocksAuthentication) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/socks.authentication", s.Value, options...)
}

// SocksStatus represents the socks.status node and implements sophos.Node
type SocksStatus struct{ Value bool }

// Get gets the socks.status value from the UTM
func (s *SocksStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/socks.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSocksStatus
func (s *SocksStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/socks.status", s.Value, options...)
}

// SpxGlobalErrorNotificationTarget represents the spx.global.error_notification_target node and implements sophos.Node
type SpxGlobalErrorNotificationTarget struct{ Value string }

// Get gets the spx.global.error_notification_target value from the UTM
func (s *SpxGlobalErrorNotificationTarget) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.error_notification_target", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalErrorNotificationTarget
func (s *SpxGlobalErrorNotificationTarget) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.error_notification_target", s.Value, options...)
}

// SpxGlobalExpirySettingsAllowSecureReplyDays represents the spx.global.expiry_settings.allow_secure_reply_days node and implements sophos.Node
type SpxGlobalExpirySettingsAllowSecureReplyDays struct{ Value int64 }

// Get gets the spx.global.expiry_settings.allow_secure_reply_days value from the UTM
func (s *SpxGlobalExpirySettingsAllowSecureReplyDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.expiry_settings.allow_secure_reply_days", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalExpirySettingsAllowSecureReplyDays
func (s *SpxGlobalExpirySettingsAllowSecureReplyDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.expiry_settings.allow_secure_reply_days", s.Value, options...)
}

// SpxGlobalExpirySettingsKeepDelayedMailDays represents the spx.global.expiry_settings.keep_delayed_mail_days node and implements sophos.Node
type SpxGlobalExpirySettingsKeepDelayedMailDays struct{ Value int64 }

// Get gets the spx.global.expiry_settings.keep_delayed_mail_days value from the UTM
func (s *SpxGlobalExpirySettingsKeepDelayedMailDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.expiry_settings.keep_delayed_mail_days", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalExpirySettingsKeepDelayedMailDays
func (s *SpxGlobalExpirySettingsKeepDelayedMailDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.expiry_settings.keep_delayed_mail_days", s.Value, options...)
}

// SpxGlobalExpirySettingsKeepUnusedPwdDays represents the spx.global.expiry_settings.keep_unused_pwd_days node and implements sophos.Node
type SpxGlobalExpirySettingsKeepUnusedPwdDays struct{ Value int64 }

// Get gets the spx.global.expiry_settings.keep_unused_pwd_days value from the UTM
func (s *SpxGlobalExpirySettingsKeepUnusedPwdDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.expiry_settings.keep_unused_pwd_days", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalExpirySettingsKeepUnusedPwdDays
func (s *SpxGlobalExpirySettingsKeepUnusedPwdDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.expiry_settings.keep_unused_pwd_days", s.Value, options...)
}

// SpxGlobalExpirySettingsRegistrationReminderDays represents the spx.global.expiry_settings.registration_reminder_days node and implements sophos.Node
type SpxGlobalExpirySettingsRegistrationReminderDays struct{ Value int64 }

// Get gets the spx.global.expiry_settings.registration_reminder_days value from the UTM
func (s *SpxGlobalExpirySettingsRegistrationReminderDays) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.expiry_settings.registration_reminder_days", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalExpirySettingsRegistrationReminderDays
func (s *SpxGlobalExpirySettingsRegistrationReminderDays) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.expiry_settings.registration_reminder_days", s.Value, options...)
}

// SpxGlobalPasswordStrengthMinLength represents the spx.global.password_strength.min_length node and implements sophos.Node
type SpxGlobalPasswordStrengthMinLength struct{ Value int64 }

// Get gets the spx.global.password_strength.min_length value from the UTM
func (s *SpxGlobalPasswordStrengthMinLength) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.password_strength.min_length", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPasswordStrengthMinLength
func (s *SpxGlobalPasswordStrengthMinLength) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.password_strength.min_length", s.Value, options...)
}

// SpxGlobalPasswordStrengthRequireSpecChars represents the spx.global.password_strength.require_spec_chars node and implements sophos.Node
type SpxGlobalPasswordStrengthRequireSpecChars struct{ Value bool }

// Get gets the spx.global.password_strength.require_spec_chars value from the UTM
func (s *SpxGlobalPasswordStrengthRequireSpecChars) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.password_strength.require_spec_chars", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPasswordStrengthRequireSpecChars
func (s *SpxGlobalPasswordStrengthRequireSpecChars) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.password_strength.require_spec_chars", s.Value, options...)
}

// SpxGlobalPortalSettingsAllowedNetworks represents the spx.global.portal_settings.allowed_networks node and implements sophos.Node
type SpxGlobalPortalSettingsAllowedNetworks struct{ Value []interface{} }

// Get gets the spx.global.portal_settings.allowed_networks value from the UTM
func (s *SpxGlobalPortalSettingsAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.portal_settings.allowed_networks", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPortalSettingsAllowedNetworks
func (s *SpxGlobalPortalSettingsAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.portal_settings.allowed_networks", s.Value, options...)
}

// SpxGlobalPortalSettingsHostname represents the spx.global.portal_settings.hostname node and implements sophos.Node
type SpxGlobalPortalSettingsHostname struct{ Value string }

// Get gets the spx.global.portal_settings.hostname value from the UTM
func (s *SpxGlobalPortalSettingsHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.portal_settings.hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPortalSettingsHostname
func (s *SpxGlobalPortalSettingsHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.portal_settings.hostname", s.Value, options...)
}

// SpxGlobalPortalSettingsInterfaceAddress represents the spx.global.portal_settings.interface_address node and implements sophos.Node
type SpxGlobalPortalSettingsInterfaceAddress struct{ Value string }

// Get gets the spx.global.portal_settings.interface_address value from the UTM
func (s *SpxGlobalPortalSettingsInterfaceAddress) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.portal_settings.interface_address", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPortalSettingsInterfaceAddress
func (s *SpxGlobalPortalSettingsInterfaceAddress) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.portal_settings.interface_address", s.Value, options...)
}

// SpxGlobalPortalSettingsPort represents the spx.global.portal_settings.port node and implements sophos.Node
type SpxGlobalPortalSettingsPort struct{ Value int64 }

// Get gets the spx.global.portal_settings.port value from the UTM
func (s *SpxGlobalPortalSettingsPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.portal_settings.port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPortalSettingsPort
func (s *SpxGlobalPortalSettingsPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.portal_settings.port", s.Value, options...)
}

// SpxGlobalPoweredByLogo represents the spx.global.powered_by_logo node and implements sophos.Node
type SpxGlobalPoweredByLogo struct{ Value string }

// Get gets the spx.global.powered_by_logo value from the UTM
func (s *SpxGlobalPoweredByLogo) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.powered_by_logo", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalPoweredByLogo
func (s *SpxGlobalPoweredByLogo) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.powered_by_logo", s.Value, options...)
}

// SpxGlobalSpxPriority represents the spx.global.spx_priority node and implements sophos.Node
type SpxGlobalSpxPriority struct{ Value bool }

// Get gets the spx.global.spx_priority value from the UTM
func (s *SpxGlobalSpxPriority) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.spx_priority", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalSpxPriority
func (s *SpxGlobalSpxPriority) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.spx_priority", s.Value, options...)
}

// SpxGlobalStatus represents the spx.global.status node and implements sophos.Node
type SpxGlobalStatus struct{ Value bool }

// Get gets the spx.global.status value from the UTM
func (s *SpxGlobalStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.global.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxGlobalStatus
func (s *SpxGlobalStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.global.status", s.Value, options...)
}

// SpxSpxAuthPassword represents the spx.spx_auth.password node and implements sophos.Node
type SpxSpxAuthPassword struct{ Value string }

// Get gets the spx.spx_auth.password value from the UTM
func (s *SpxSpxAuthPassword) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.spx_auth.password", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxSpxAuthPassword
func (s *SpxSpxAuthPassword) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.spx_auth.password", s.Value, options...)
}

// SpxSpxAuthPort represents the spx.spx_auth.port node and implements sophos.Node
type SpxSpxAuthPort struct{ Value int64 }

// Get gets the spx.spx_auth.port value from the UTM
func (s *SpxSpxAuthPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.spx_auth.port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxSpxAuthPort
func (s *SpxSpxAuthPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.spx_auth.port", s.Value, options...)
}

// SpxSpxAuthServer represents the spx.spx_auth.server node and implements sophos.Node
type SpxSpxAuthServer struct{ Value string }

// Get gets the spx.spx_auth.server value from the UTM
func (s *SpxSpxAuthServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.spx_auth.server", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxSpxAuthServer
func (s *SpxSpxAuthServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.spx_auth.server", s.Value, options...)
}

// SpxSpxAuthUrl represents the spx.spx_auth.url node and implements sophos.Node
type SpxSpxAuthUrl struct{ Value string }

// Get gets the spx.spx_auth.url value from the UTM
func (s *SpxSpxAuthUrl) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.spx_auth.url", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxSpxAuthUrl
func (s *SpxSpxAuthUrl) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.spx_auth.url", s.Value, options...)
}

// SpxTemplates represents the spx.templates node and implements sophos.Node
type SpxTemplates struct{ Value []string }

// Get gets the spx.templates value from the UTM
func (s *SpxTemplates) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/spx.templates", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSpxTemplates
func (s *SpxTemplates) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/spx.templates", s.Value, options...)
}

// SshAllowedNetworks represents the ssh.allowed_networks node and implements sophos.Node
type SshAllowedNetworks struct{ Value []string }

// Get gets the ssh.allowed_networks value from the UTM
func (s *SshAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.allowed_networks", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshAllowedNetworks
func (s *SshAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.allowed_networks", s.Value, options...)
}

// SshLoginKeys represents the ssh.login_keys node and implements sophos.Node
type SshLoginKeys struct{ Value []string }

// Get gets the ssh.login_keys value from the UTM
func (s *SshLoginKeys) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.login_keys", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshLoginKeys
func (s *SshLoginKeys) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.login_keys", s.Value, options...)
}

// SshPasswordAuth represents the ssh.password_auth node and implements sophos.Node
type SshPasswordAuth struct{ Value bool }

// Get gets the ssh.password_auth value from the UTM
func (s *SshPasswordAuth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.password_auth", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshPasswordAuth
func (s *SshPasswordAuth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.password_auth", s.Value, options...)
}

// SshPort represents the ssh.port node and implements sophos.Node
type SshPort struct{ Value int64 }

// Get gets the ssh.port value from the UTM
func (s *SshPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshPort
func (s *SshPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.port", s.Value, options...)
}

// SshPubkeyAuth represents the ssh.pubkey_auth node and implements sophos.Node
type SshPubkeyAuth struct{ Value bool }

// Get gets the ssh.pubkey_auth value from the UTM
func (s *SshPubkeyAuth) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.pubkey_auth", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshPubkeyAuth
func (s *SshPubkeyAuth) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.pubkey_auth", s.Value, options...)
}

// SshRootKeys represents the ssh.root_keys node and implements sophos.Node
type SshRootKeys struct{ Value []string }

// Get gets the ssh.root_keys value from the UTM
func (s *SshRootKeys) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.root_keys", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshRootKeys
func (s *SshRootKeys) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.root_keys", s.Value, options...)
}

// SshRootLogin represents the ssh.root_login node and implements sophos.Node
type SshRootLogin struct{ Value string }

// Get gets the ssh.root_login value from the UTM
func (s *SshRootLogin) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.root_login", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshRootLogin
func (s *SshRootLogin) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.root_login", s.Value, options...)
}

// SshStatus represents the ssh.status node and implements sophos.Node
type SshStatus struct{ Value bool }

// Get gets the ssh.status value from the UTM
func (s *SshStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssh.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSshStatus
func (s *SshStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssh.status", s.Value, options...)
}

// SslVpnAuthenticationAlgorithm represents the ssl_vpn.authentication_algorithm node and implements sophos.Node
type SslVpnAuthenticationAlgorithm struct{ Value string }

// Get gets the ssl_vpn.authentication_algorithm value from the UTM
func (s *SslVpnAuthenticationAlgorithm) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.authentication_algorithm", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnAuthenticationAlgorithm
func (s *SslVpnAuthenticationAlgorithm) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.authentication_algorithm", s.Value, options...)
}

// SslVpnCertificate represents the ssl_vpn.certificate node and implements sophos.Node
type SslVpnCertificate struct{ Value string }

// Get gets the ssl_vpn.certificate value from the UTM
func (s *SslVpnCertificate) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.certificate", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnCertificate
func (s *SslVpnCertificate) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.certificate", s.Value, options...)
}

// SslVpnCompression represents the ssl_vpn.compression node and implements sophos.Node
type SslVpnCompression struct{ Value bool }

// Get gets the ssl_vpn.compression value from the UTM
func (s *SslVpnCompression) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.compression", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnCompression
func (s *SslVpnCompression) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.compression", s.Value, options...)
}

// SslVpnDatachannelKeyLifetime represents the ssl_vpn.datachannel_key_lifetime node and implements sophos.Node
type SslVpnDatachannelKeyLifetime struct{ Value int64 }

// Get gets the ssl_vpn.datachannel_key_lifetime value from the UTM
func (s *SslVpnDatachannelKeyLifetime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.datachannel_key_lifetime", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnDatachannelKeyLifetime
func (s *SslVpnDatachannelKeyLifetime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.datachannel_key_lifetime", s.Value, options...)
}

// SslVpnDebug represents the ssl_vpn.debug node and implements sophos.Node
type SslVpnDebug struct{ Value bool }

// Get gets the ssl_vpn.debug value from the UTM
func (s *SslVpnDebug) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.debug", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnDebug
func (s *SslVpnDebug) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.debug", s.Value, options...)
}

// SslVpnDhKeySize represents the ssl_vpn.dh_key_size node and implements sophos.Node
type SslVpnDhKeySize struct{ Value string }

// Get gets the ssl_vpn.dh_key_size value from the UTM
func (s *SslVpnDhKeySize) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.dh_key_size", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnDhKeySize
func (s *SslVpnDhKeySize) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.dh_key_size", s.Value, options...)
}

// SslVpnDuplicateCn represents the ssl_vpn.duplicate_cn node and implements sophos.Node
type SslVpnDuplicateCn struct{ Value bool }

// Get gets the ssl_vpn.duplicate_cn value from the UTM
func (s *SslVpnDuplicateCn) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.duplicate_cn", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnDuplicateCn
func (s *SslVpnDuplicateCn) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.duplicate_cn", s.Value, options...)
}

// SslVpnEncryptionAlgorithm represents the ssl_vpn.encryption_algorithm node and implements sophos.Node
type SslVpnEncryptionAlgorithm struct{ Value string }

// Get gets the ssl_vpn.encryption_algorithm value from the UTM
func (s *SslVpnEncryptionAlgorithm) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.encryption_algorithm", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnEncryptionAlgorithm
func (s *SslVpnEncryptionAlgorithm) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.encryption_algorithm", s.Value, options...)
}

// SslVpnFallbackDisable represents the ssl_vpn.fallback_disable node and implements sophos.Node
type SslVpnFallbackDisable struct{ Value bool }

// Get gets the ssl_vpn.fallback_disable value from the UTM
func (s *SslVpnFallbackDisable) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.fallback_disable", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnFallbackDisable
func (s *SslVpnFallbackDisable) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.fallback_disable", s.Value, options...)
}

// SslVpnHostname represents the ssl_vpn.hostname node and implements sophos.Node
type SslVpnHostname struct{ Value string }

// Get gets the ssl_vpn.hostname value from the UTM
func (s *SslVpnHostname) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.hostname", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnHostname
func (s *SslVpnHostname) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.hostname", s.Value, options...)
}

// SslVpnInterface represents the ssl_vpn.interface node and implements sophos.Node
type SslVpnInterface struct{ Value string }

// Get gets the ssl_vpn.interface value from the UTM
func (s *SslVpnInterface) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.interface", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnInterface
func (s *SslVpnInterface) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.interface", s.Value, options...)
}

// SslVpnInterfaceAddress represents the ssl_vpn.interface_address node and implements sophos.Node
type SslVpnInterfaceAddress struct{ Value string }

// Get gets the ssl_vpn.interface_address value from the UTM
func (s *SslVpnInterfaceAddress) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.interface_address", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnInterfaceAddress
func (s *SslVpnInterfaceAddress) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.interface_address", s.Value, options...)
}

// SslVpnIpAssignmentPool represents the ssl_vpn.ip_assignment_pool node and implements sophos.Node
type SslVpnIpAssignmentPool struct{ Value string }

// Get gets the ssl_vpn.ip_assignment_pool value from the UTM
func (s *SslVpnIpAssignmentPool) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.ip_assignment_pool", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnIpAssignmentPool
func (s *SslVpnIpAssignmentPool) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.ip_assignment_pool", s.Value, options...)
}

// SslVpnPort represents the ssl_vpn.port node and implements sophos.Node
type SslVpnPort struct{ Value int64 }

// Get gets the ssl_vpn.port value from the UTM
func (s *SslVpnPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.port", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnPort
func (s *SslVpnPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.port", s.Value, options...)
}

// SslVpnProtocol represents the ssl_vpn.protocol node and implements sophos.Node
type SslVpnProtocol struct{ Value string }

// Get gets the ssl_vpn.protocol value from the UTM
func (s *SslVpnProtocol) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.protocol", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnProtocol
func (s *SslVpnProtocol) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.protocol", s.Value, options...)
}

// SslVpnUserAuthOptional represents the ssl_vpn.user_auth_optional node and implements sophos.Node
type SslVpnUserAuthOptional struct{ Value bool }

// Get gets the ssl_vpn.user_auth_optional value from the UTM
func (s *SslVpnUserAuthOptional) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/ssl_vpn.user_auth_optional", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSslVpnUserAuthOptional
func (s *SslVpnUserAuthOptional) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/ssl_vpn.user_auth_optional", s.Value, options...)
}

// SupportAccessAccessId represents the support_access.access_id node and implements sophos.Node
type SupportAccessAccessId struct{ Value string }

// Get gets the support_access.access_id value from the UTM
func (s *SupportAccessAccessId) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.access_id", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessAccessId
func (s *SupportAccessAccessId) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.access_id", s.Value, options...)
}

// SupportAccessApuServer represents the support_access.apu_server node and implements sophos.Node
type SupportAccessApuServer struct{ Value string }

// Get gets the support_access.apu_server value from the UTM
func (s *SupportAccessApuServer) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.apu_server", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessApuServer
func (s *SupportAccessApuServer) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.apu_server", s.Value, options...)
}

// SupportAccessLifetimeDuration represents the support_access.lifetime_duration node and implements sophos.Node
type SupportAccessLifetimeDuration struct{ Value string }

// Get gets the support_access.lifetime_duration value from the UTM
func (s *SupportAccessLifetimeDuration) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.lifetime_duration", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessLifetimeDuration
func (s *SupportAccessLifetimeDuration) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.lifetime_duration", s.Value, options...)
}

// SupportAccessLifetimeEnd represents the support_access.lifetime_end node and implements sophos.Node
type SupportAccessLifetimeEnd struct{ Value map[string]interface{} }

// Get gets the support_access.lifetime_end value from the UTM
func (s *SupportAccessLifetimeEnd) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.lifetime_end", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessLifetimeEnd
func (s *SupportAccessLifetimeEnd) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.lifetime_end", s.Value, options...)
}

// SupportAccessSshKeys represents the support_access.ssh_keys node and implements sophos.Node
type SupportAccessSshKeys struct{ Value []interface{} }

// Get gets the support_access.ssh_keys value from the UTM
func (s *SupportAccessSshKeys) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.ssh_keys", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessSshKeys
func (s *SupportAccessSshKeys) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.ssh_keys", s.Value, options...)
}

// SupportAccessStatus represents the support_access.status node and implements sophos.Node
type SupportAccessStatus struct{ Value bool }

// Get gets the support_access.status value from the UTM
func (s *SupportAccessStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/support_access.status", &s.Value, options...)
}

// Update is syntactic sugar for UpdateSupportAccessStatus
func (s *SupportAccessStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/support_access.status", s.Value, options...)
}

// U2DcacheAllowedNetworks represents the u2dcache.allowed_networks node and implements sophos.Node
type U2DcacheAllowedNetworks struct{ Value []interface{} }

// Get gets the u2dcache.allowed_networks value from the UTM
func (u *U2DcacheAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/u2dcache.allowed_networks", &u.Value, options...)
}

// Update is syntactic sugar for UpdateU2DcacheAllowedNetworks
func (u *U2DcacheAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/u2dcache.allowed_networks", u.Value, options...)
}

// U2DcachePort represents the u2dcache.port node and implements sophos.Node
type U2DcachePort struct{ Value int64 }

// Get gets the u2dcache.port value from the UTM
func (u *U2DcachePort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/u2dcache.port", &u.Value, options...)
}

// Update is syntactic sugar for UpdateU2DcachePort
func (u *U2DcachePort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/u2dcache.port", u.Value, options...)
}

// U2DcacheStatus represents the u2dcache.status node and implements sophos.Node
type U2DcacheStatus struct{ Value bool }

// Get gets the u2dcache.status value from the UTM
func (u *U2DcacheStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/u2dcache.status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateU2DcacheStatus
func (u *U2DcacheStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/u2dcache.status", u.Value, options...)
}

// Up2DateCacheHost represents the up2date.cache_host node and implements sophos.Node
type Up2DateCacheHost struct{ Value string }

// Get gets the up2date.cache_host value from the UTM
func (u *Up2DateCacheHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.cache_host", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateCacheHost
func (u *Up2DateCacheHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.cache_host", u.Value, options...)
}

// Up2DateCachePort represents the up2date.cache_port node and implements sophos.Node
type Up2DateCachePort struct{ Value int64 }

// Get gets the up2date.cache_port value from the UTM
func (u *Up2DateCachePort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.cache_port", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateCachePort
func (u *Up2DateCachePort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.cache_port", u.Value, options...)
}

// Up2DateCacheStatus represents the up2date.cache_status node and implements sophos.Node
type Up2DateCacheStatus struct{ Value bool }

// Get gets the up2date.cache_status value from the UTM
func (u *Up2DateCacheStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.cache_status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateCacheStatus
func (u *Up2DateCacheStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.cache_status", u.Value, options...)
}

// Up2DateCacheUseAcc represents the up2date.cache_use_acc node and implements sophos.Node
type Up2DateCacheUseAcc struct{ Value bool }

// Get gets the up2date.cache_use_acc value from the UTM
func (u *Up2DateCacheUseAcc) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.cache_use_acc", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateCacheUseAcc
func (u *Up2DateCacheUseAcc) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.cache_use_acc", u.Value, options...)
}

// Up2DateForceInsecureUp2Date represents the up2date.force_insecure_up2date node and implements sophos.Node
type Up2DateForceInsecureUp2Date struct{ Value bool }

// Get gets the up2date.force_insecure_up2date value from the UTM
func (u *Up2DateForceInsecureUp2Date) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.force_insecure_up2date", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateForceInsecureUp2Date
func (u *Up2DateForceInsecureUp2Date) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.force_insecure_up2date", u.Value, options...)
}

// Up2DateParentProxyAuthPass represents the up2date.parent_proxy_auth_pass node and implements sophos.Node
type Up2DateParentProxyAuthPass struct{ Value string }

// Get gets the up2date.parent_proxy_auth_pass value from the UTM
func (u *Up2DateParentProxyAuthPass) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_auth_pass", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyAuthPass
func (u *Up2DateParentProxyAuthPass) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_auth_pass", u.Value, options...)
}

// Up2DateParentProxyAuthStatus represents the up2date.parent_proxy_auth_status node and implements sophos.Node
type Up2DateParentProxyAuthStatus struct{ Value bool }

// Get gets the up2date.parent_proxy_auth_status value from the UTM
func (u *Up2DateParentProxyAuthStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_auth_status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyAuthStatus
func (u *Up2DateParentProxyAuthStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_auth_status", u.Value, options...)
}

// Up2DateParentProxyAuthUser represents the up2date.parent_proxy_auth_user node and implements sophos.Node
type Up2DateParentProxyAuthUser struct{ Value string }

// Get gets the up2date.parent_proxy_auth_user value from the UTM
func (u *Up2DateParentProxyAuthUser) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_auth_user", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyAuthUser
func (u *Up2DateParentProxyAuthUser) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_auth_user", u.Value, options...)
}

// Up2DateParentProxyHost represents the up2date.parent_proxy_host node and implements sophos.Node
type Up2DateParentProxyHost struct{ Value string }

// Get gets the up2date.parent_proxy_host value from the UTM
func (u *Up2DateParentProxyHost) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_host", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyHost
func (u *Up2DateParentProxyHost) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_host", u.Value, options...)
}

// Up2DateParentProxyPort represents the up2date.parent_proxy_port node and implements sophos.Node
type Up2DateParentProxyPort struct{ Value int64 }

// Get gets the up2date.parent_proxy_port value from the UTM
func (u *Up2DateParentProxyPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_port", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyPort
func (u *Up2DateParentProxyPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_port", u.Value, options...)
}

// Up2DateParentProxyStatus represents the up2date.parent_proxy_status node and implements sophos.Node
type Up2DateParentProxyStatus struct{ Value bool }

// Get gets the up2date.parent_proxy_status value from the UTM
func (u *Up2DateParentProxyStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.parent_proxy_status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateParentProxyStatus
func (u *Up2DateParentProxyStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.parent_proxy_status", u.Value, options...)
}

// Up2DatePatternDownloadInterval represents the up2date.pattern_download_interval node and implements sophos.Node
type Up2DatePatternDownloadInterval struct{ Value int64 }

// Get gets the up2date.pattern_download_interval value from the UTM
func (u *Up2DatePatternDownloadInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.pattern_download_interval", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DatePatternDownloadInterval
func (u *Up2DatePatternDownloadInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.pattern_download_interval", u.Value, options...)
}

// Up2DatePatternDownloadStatus represents the up2date.pattern_download_status node and implements sophos.Node
type Up2DatePatternDownloadStatus struct{ Value bool }

// Get gets the up2date.pattern_download_status value from the UTM
func (u *Up2DatePatternDownloadStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.pattern_download_status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DatePatternDownloadStatus
func (u *Up2DatePatternDownloadStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.pattern_download_status", u.Value, options...)
}

// Up2DateScheduledUp2Date represents the up2date.scheduled_up2date node and implements sophos.Node
type Up2DateScheduledUp2Date struct{ Value []interface{} }

// Get gets the up2date.scheduled_up2date value from the UTM
func (u *Up2DateScheduledUp2Date) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.scheduled_up2date", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateScheduledUp2Date
func (u *Up2DateScheduledUp2Date) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.scheduled_up2date", u.Value, options...)
}

// Up2DateServers represents the up2date.servers node and implements sophos.Node
type Up2DateServers struct{ Value []string }

// Get gets the up2date.servers value from the UTM
func (u *Up2DateServers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.servers", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateServers
func (u *Up2DateServers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.servers", u.Value, options...)
}

// Up2DateStatus represents the up2date.status node and implements sophos.Node
type Up2DateStatus struct{ Value bool }

// Get gets the up2date.status value from the UTM
func (u *Up2DateStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateStatus
func (u *Up2DateStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.status", u.Value, options...)
}

// Up2DateSystemAutoinstallTime represents the up2date.system_autoinstall_time node and implements sophos.Node
type Up2DateSystemAutoinstallTime struct{ Value string }

// Get gets the up2date.system_autoinstall_time value from the UTM
func (u *Up2DateSystemAutoinstallTime) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.system_autoinstall_time", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateSystemAutoinstallTime
func (u *Up2DateSystemAutoinstallTime) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.system_autoinstall_time", u.Value, options...)
}

// Up2DateSystemDownloadInterval represents the up2date.system_download_interval node and implements sophos.Node
type Up2DateSystemDownloadInterval struct{ Value int64 }

// Get gets the up2date.system_download_interval value from the UTM
func (u *Up2DateSystemDownloadInterval) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.system_download_interval", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateSystemDownloadInterval
func (u *Up2DateSystemDownloadInterval) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.system_download_interval", u.Value, options...)
}

// Up2DateSystemDownloadStatus represents the up2date.system_download_status node and implements sophos.Node
type Up2DateSystemDownloadStatus struct{ Value bool }

// Get gets the up2date.system_download_status value from the UTM
func (u *Up2DateSystemDownloadStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/up2date.system_download_status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUp2DateSystemDownloadStatus
func (u *Up2DateSystemDownloadStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/up2date.system_download_status", u.Value, options...)
}

// UplinkActions represents the uplink.actions node and implements sophos.Node
type UplinkActions struct{ Value []interface{} }

// Get gets the uplink.actions value from the UTM
func (u *UplinkActions) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.actions", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkActions
func (u *UplinkActions) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.actions", u.Value, options...)
}

// UplinkActive represents the uplink.active node and implements sophos.Node
type UplinkActive struct{ Value string }

// Get gets the uplink.active value from the UTM
func (u *UplinkActive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.active", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkActive
func (u *UplinkActive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.active", u.Value, options...)
}

// UplinkCondition represents the uplink.condition node and implements sophos.Node
type UplinkCondition struct{ Value string }

// Get gets the uplink.condition value from the UTM
func (u *UplinkCondition) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.condition", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkCondition
func (u *UplinkCondition) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.condition", u.Value, options...)
}

// UplinkEnableMultipathStickyRuleFlagWorkaround represents the uplink.enable_multipath_sticky_rule_flag_workaround node and implements sophos.Node
type UplinkEnableMultipathStickyRuleFlagWorkaround struct{ Value bool }

// Get gets the uplink.enable_multipath_sticky_rule_flag_workaround value from the UTM
func (u *UplinkEnableMultipathStickyRuleFlagWorkaround) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.enable_multipath_sticky_rule_flag_workaround", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkEnableMultipathStickyRuleFlagWorkaround
func (u *UplinkEnableMultipathStickyRuleFlagWorkaround) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.enable_multipath_sticky_rule_flag_workaround", u.Value, options...)
}

// UplinkInterfaces represents the uplink.interfaces node and implements sophos.Node
type UplinkInterfaces struct{ Value string }

// Get gets the uplink.interfaces value from the UTM
func (u *UplinkInterfaces) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.interfaces", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkInterfaces
func (u *UplinkInterfaces) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.interfaces", u.Value, options...)
}

// UplinkMonitoring represents the uplink.monitoring node and implements sophos.Node
type UplinkMonitoring struct{ Value bool }

// Get gets the uplink.monitoring value from the UTM
func (u *UplinkMonitoring) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.monitoring", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkMonitoring
func (u *UplinkMonitoring) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.monitoring", u.Value, options...)
}

// UplinkPassive represents the uplink.passive node and implements sophos.Node
type UplinkPassive struct{ Value string }

// Get gets the uplink.passive value from the UTM
func (u *UplinkPassive) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.passive", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkPassive
func (u *UplinkPassive) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.passive", u.Value, options...)
}

// UplinkPrimary represents the uplink.primary node and implements sophos.Node
type UplinkPrimary struct{ Value string }

// Get gets the uplink.primary value from the UTM
func (u *UplinkPrimary) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.primary", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkPrimary
func (u *UplinkPrimary) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.primary", u.Value, options...)
}

// UplinkRules represents the uplink.rules node and implements sophos.Node
type UplinkRules struct{ Value []string }

// Get gets the uplink.rules value from the UTM
func (u *UplinkRules) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.rules", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkRules
func (u *UplinkRules) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.rules", u.Value, options...)
}

// UplinkScheduler represents the uplink.scheduler node and implements sophos.Node
type UplinkScheduler struct{ Value string }

// Get gets the uplink.scheduler value from the UTM
func (u *UplinkScheduler) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.scheduler", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkScheduler
func (u *UplinkScheduler) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.scheduler", u.Value, options...)
}

// UplinkStatus represents the uplink.status node and implements sophos.Node
type UplinkStatus struct{ Value bool }

// Get gets the uplink.status value from the UTM
func (u *UplinkStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/uplink.status", &u.Value, options...)
}

// Update is syntactic sugar for UpdateUplinkStatus
func (u *UplinkStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/uplink.status", u.Value, options...)
}

// WebadminAllowedNetworks represents the webadmin.allowed_networks node and implements sophos.Node
type WebadminAllowedNetworks struct{ Value []string }

// Get gets the webadmin.allowed_networks value from the UTM
func (w *WebadminAllowedNetworks) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.allowed_networks", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminAllowedNetworks
func (w *WebadminAllowedNetworks) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.allowed_networks", w.Value, options...)
}

// WebadminCa represents the webadmin.ca node and implements sophos.Node
type WebadminCa struct{ Value string }

// Get gets the webadmin.ca value from the UTM
func (w *WebadminCa) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.ca", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminCa
func (w *WebadminCa) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.ca", w.Value, options...)
}

// WebadminCert represents the webadmin.cert node and implements sophos.Node
type WebadminCert struct{ Value string }

// Get gets the webadmin.cert value from the UTM
func (w *WebadminCert) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.cert", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminCert
func (w *WebadminCert) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.cert", w.Value, options...)
}

// WebadminDashboardRefresh represents the webadmin.dashboard_refresh node and implements sophos.Node
type WebadminDashboardRefresh struct{ Value string }

// Get gets the webadmin.dashboard_refresh value from the UTM
func (w *WebadminDashboardRefresh) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.dashboard_refresh", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminDashboardRefresh
func (w *WebadminDashboardRefresh) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.dashboard_refresh", w.Value, options...)
}

// WebadminLanguage represents the webadmin.language node and implements sophos.Node
type WebadminLanguage struct{ Value string }

// Get gets the webadmin.language value from the UTM
func (w *WebadminLanguage) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.language", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminLanguage
func (w *WebadminLanguage) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.language", w.Value, options...)
}

// WebadminLogAdminConnect represents the webadmin.log_admin_connect node and implements sophos.Node
type WebadminLogAdminConnect struct{ Value bool }

// Get gets the webadmin.log_admin_connect value from the UTM
func (w *WebadminLogAdminConnect) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.log_admin_connect", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminLogAdminConnect
func (w *WebadminLogAdminConnect) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.log_admin_connect", w.Value, options...)
}

// WebadminOfferWizard represents the webadmin.offer_wizard node and implements sophos.Node
type WebadminOfferWizard struct{ Value bool }

// Get gets the webadmin.offer_wizard value from the UTM
func (w *WebadminOfferWizard) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.offer_wizard", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminOfferWizard
func (w *WebadminOfferWizard) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.offer_wizard", w.Value, options...)
}

// WebadminPort represents the webadmin.port node and implements sophos.Node
type WebadminPort struct{ Value int64 }

// Get gets the webadmin.port value from the UTM
func (w *WebadminPort) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.port", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminPort
func (w *WebadminPort) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.port", w.Value, options...)
}

// WebadminRestApi represents the webadmin.rest_api node and implements sophos.Node
type WebadminRestApi struct{ Value bool }

// Get gets the webadmin.rest_api value from the UTM
func (w *WebadminRestApi) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.rest_api", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminRestApi
func (w *WebadminRestApi) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.rest_api", w.Value, options...)
}

// WebadminTermsOfUseStatus represents the webadmin.terms_of_use.status node and implements sophos.Node
type WebadminTermsOfUseStatus struct{ Value bool }

// Get gets the webadmin.terms_of_use.status value from the UTM
func (w *WebadminTermsOfUseStatus) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.terms_of_use.status", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTermsOfUseStatus
func (w *WebadminTermsOfUseStatus) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.terms_of_use.status", w.Value, options...)
}

// WebadminTermsOfUseText represents the webadmin.terms_of_use.text node and implements sophos.Node
type WebadminTermsOfUseText struct{ Value string }

// Get gets the webadmin.terms_of_use.text value from the UTM
func (w *WebadminTermsOfUseText) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.terms_of_use.text", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTermsOfUseText
func (w *WebadminTermsOfUseText) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.terms_of_use.text", w.Value, options...)
}

// WebadminTimeout represents the webadmin.timeout node and implements sophos.Node
type WebadminTimeout struct{ Value int64 }

// Get gets the webadmin.timeout value from the UTM
func (w *WebadminTimeout) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.timeout", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTimeout
func (w *WebadminTimeout) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.timeout", w.Value, options...)
}

// WebadminTimeoutOnDashboard represents the webadmin.timeout_on_dashboard node and implements sophos.Node
type WebadminTimeoutOnDashboard struct{ Value bool }

// Get gets the webadmin.timeout_on_dashboard value from the UTM
func (w *WebadminTimeoutOnDashboard) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.timeout_on_dashboard", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTimeoutOnDashboard
func (w *WebadminTimeoutOnDashboard) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.timeout_on_dashboard", w.Value, options...)
}

// WebadminTlsCiphers represents the webadmin.tls_ciphers node and implements sophos.Node
type WebadminTlsCiphers struct{ Value string }

// Get gets the webadmin.tls_ciphers value from the UTM
func (w *WebadminTlsCiphers) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.tls_ciphers", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTlsCiphers
func (w *WebadminTlsCiphers) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.tls_ciphers", w.Value, options...)
}

// WebadminTlsProtocols represents the webadmin.tls_protocols node and implements sophos.Node
type WebadminTlsProtocols struct{ Value string }

// Get gets the webadmin.tls_protocols value from the UTM
func (w *WebadminTlsProtocols) Get(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return get(client, "/api/nodes/webadmin.tls_protocols", &w.Value, options...)
}

// Update is syntactic sugar for UpdateWebadminTlsProtocols
func (w *WebadminTlsProtocols) Update(client sophos.ClientInterface, options ...sophos.Option) (err error) {
	return put(client, "/api/nodes/webadmin.tls_protocols", w.Value, options...)
}
