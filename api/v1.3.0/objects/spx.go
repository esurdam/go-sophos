package objects

// THIS FILE IS AUTO GENERATED BY bin/gen.go! DO NOT EDIT!

import (
	"fmt"

	"github.com/esurdam/go-sophos"
)

// Spx is a generated struct representing the Sophos Spx Endpoint
// GET /api/nodes/spx
type Spx struct {
	Global struct {
		ErrorNotificationTarget string `json:"error_notification_target"`
		ExpirySettings          struct {
			AllowSecureReplyDays     int64 `json:"allow_secure_reply_days"`
			KeepDelayedMailDays      int64 `json:"keep_delayed_mail_days"`
			KeepUnusedPwdDays        int64 `json:"keep_unused_pwd_days"`
			RegistrationReminderDays int64 `json:"registration_reminder_days"`
		} `json:"expiry_settings"`
		PasswordStrength struct {
			MinLength        int64 `json:"min_length"`
			RequireSpecChars int64 `json:"require_spec_chars"`
		} `json:"password_strength"`
		PortalSettings struct {
			AllowedNetworks  []interface{} `json:"allowed_networks"`
			Hostname         string        `json:"hostname"`
			InterfaceAddress string        `json:"interface_address"`
			Port             int64         `json:"port"`
		} `json:"portal_settings"`
		PoweredByLogo string `json:"powered_by_logo"`
		SpxPriority   int64  `json:"spx_priority"`
		Status        int64  `json:"status"`
	} `json:"global"`
	SpxAuth struct {
		Password string `json:"password"`
		Port     int64  `json:"port"`
		Server   string `json:"server"`
		URL      string `json:"url"`
	} `json:"spx_auth"`
	Templates []string `json:"templates"`
}

var _ sophos.Endpoint = &Spx{}

var defsSpx = map[string]sophos.RestObject{
	"SpxGroup":    &SpxGroup{},
	"SpxTemplate": &SpxTemplate{},
}

// RestObjects implements the sophos.Node interface and returns a map of Spx's Objects
func (Spx) RestObjects() map[string]sophos.RestObject { return defsSpx }

// GetPath implements sophos.RestGetter
func (*Spx) GetPath() string { return "/api/nodes/spx" }

// RefRequired implements sophos.RestGetter
func (*Spx) RefRequired() (string, bool) { return "", false }

var defSpx = &sophos.Definition{Description: "spx", Name: "spx", Link: "/api/definitions/spx"}

// Definition returns the /api/definitions struct of Spx
func (Spx) Definition() sophos.Definition { return *defSpx }

// ApiRoutes returns all known Spx Paths
func (Spx) ApiRoutes() []string {
	return []string{
		"/api/objects/spx/group/",
		"/api/objects/spx/group/{ref}",
		"/api/objects/spx/group/{ref}/usedby",
		"/api/objects/spx/template/",
		"/api/objects/spx/template/{ref}",
		"/api/objects/spx/template/{ref}/usedby",
	}
}

// References returns the Spx's references. These strings serve no purpose other than to demonstrate which
// Reference keys are used for this Endpoint
func (Spx) References() []string {
	return []string{
		"REF_SpxGroup",
		"REF_SpxTemplate",
	}
}

// SpxGroups is an Sophos Endpoint subType and implements sophos.RestObject
type SpxGroups []SpxGroup

// SpxGroup represents a UTM group
type SpxGroup struct {
	Locked     string `json:"_locked"`
	ObjectType string `json:"_type"`
	Reference  string `json:"_ref"`
	Comment    string `json:"comment"`
	Name       string `json:"name"`
}

var _ sophos.RestGetter = &SpxGroup{}

// GetPath implements sophos.RestObject and returns the SpxGroups GET path
// Returns all available spx/group objects
func (*SpxGroups) GetPath() string { return "/api/objects/spx/group/" }

// RefRequired implements sophos.RestObject
func (*SpxGroups) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the SpxGroups GET path
// Returns all available group types
func (s *SpxGroup) GetPath() string { return fmt.Sprintf("/api/objects/spx/group/%s", s.Reference) }

// RefRequired implements sophos.RestObject
func (s *SpxGroup) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the SpxGroup DELETE path
// Creates or updates the complete object group
func (*SpxGroup) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SpxGroup PATCH path
// Changes to parts of the object group types
func (*SpxGroup) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SpxGroup POST path
// Create a new spx/group object
func (*SpxGroup) PostPath() string {
	return "/api/objects/spx/group/"
}

// PutPath implements sophos.RestObject and returns the SpxGroup PUT path
// Creates or updates the complete object group
func (*SpxGroup) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s", ref)
}

// UsedByPath implements sophos.RestObject
// Returns the objects and the nodes that use the object with the given ref
func (*SpxGroup) UsedByPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/group/%s/usedby", ref)
}

// SpxTemplates is an Sophos Endpoint subType and implements sophos.RestObject
type SpxTemplates []SpxTemplate

// SpxTemplate represents a UTM SPX encryption template
type SpxTemplate struct {
	Locked     string `json:"_locked"`
	ObjectType string `json:"_type"`
	Reference  string `json:"_ref"`
	Comment    string `json:"comment"`
	Name       string `json:"name"`
	// OrgName default value is ""
	OrgName string `json:"org_name"`
	// PdfCoverPage can be one of: []string{"none", "default", "custom"}
	// PdfCoverPage default value is "default"
	PdfCoverPage string `json:"pdf_cover_page"`
	// PdfCoverPageExt can be one of: []string{"pdf"}
	// PdfCoverPageExt default value is "pdf"
	PdfCoverPageExt string `json:"pdf_cover_page_ext"`
	// PdfCoverPageFile default value is ""
	PdfCoverPageFile string `json:"pdf_cover_page_file"`
	// PdfEncryption can be one of: []string{"aes128", "aes256"}
	// PdfEncryption default value is "aes128"
	PdfEncryption string `json:"pdf_encryption"`
	// PdfLanguage can be one of: []string{"en", "fr", "it", "ja", "es", "zh_cn", "zh_tw", "de"}
	// PdfLanguage default value is "en"
	PdfLanguage string `json:"pdf_language"`
	// PdfPageSize can be one of: []string{"Letter", "A4", "Legal"}
	// PdfPageSize default value is "Letter"
	PdfPageSize string `json:"pdf_page_size"`
	// PortalAuthRequired default value is false
	PortalAuthRequired bool `json:"portal_auth_required"`
	// PortalFooterImage can be one of: []string{"none", "default", "custom"}
	// PortalFooterImage default value is "default"
	PortalFooterImage string `json:"portal_footer_image"`
	// PortalFooterImageExt can be one of: []string{"jpg", "png", "gif"}
	// PortalFooterImageExt default value is "png"
	PortalFooterImageExt string `json:"portal_footer_image_ext"`
	// PortalFooterImageFile default value is ""
	PortalFooterImageFile string `json:"portal_footer_image_file"`
	// PortalHeaderImage can be one of: []string{"none", "default", "custom"}
	// PortalHeaderImage default value is "default"
	PortalHeaderImage string `json:"portal_header_image"`
	// PortalHeaderImageExt can be one of: []string{"jpg", "png", "gif"}
	// PortalHeaderImageExt default value is "png"
	PortalHeaderImageExt string `json:"portal_header_image_ext"`
	// PortalHeaderImageFile default value is ""
	PortalHeaderImageFile string `json:"portal_header_image_file"`
	// PortalIncludeOriginalBody default value is false
	PortalIncludeOriginalBody bool `json:"portal_include_original_body"`
	// PortalReplyAllButton default value is false
	PortalReplyAllButton bool `json:"portal_reply_all_button"`
	// PortalSecureReplyEnabled default value is false
	PortalSecureReplyEnabled bool `json:"portal_secure_reply_enabled"`
	// PwdChallengeQuestionNumber can be one of: []string{"1", "2", "3"}
	// PwdChallengeQuestionNumber default value is "3"
	PwdChallengeQuestionNumber string `json:"pwd_challenge_question_number"`
	// PwdFunctionChange default value is false
	PwdFunctionChange bool `json:"pwd_function_change"`
	// PwdFunctionRecover default value is false
	PwdFunctionRecover bool `json:"pwd_function_recover"`
	// PwdFunctionReset default value is false
	PwdFunctionReset bool `json:"pwd_function_reset"`
	// PwdNotificationBody default value is "Below is the password used to encrypt your mail to %%ENVELOPE_TO%%:\n\n<table width=\"100%\"><tr><td align=\"center\"><span style=\"padding:5px;border:1px solid #ccc;\"><b>%%GENERATED_PASSWORD%%</b></span></td></tr></table>\n\nYou must communicate this password to %%ENVELOPE_TO%% in a secure manner. They will then be able to use this password to decrypt this, and any SPX-encrypted emails that you send to them in the future."
	PwdNotificationBody string `json:"pwd_notification_body"`
	// PwdNotificationFooterImage can be one of: []string{"none", "default", "custom"}
	// PwdNotificationFooterImage default value is "default"
	PwdNotificationFooterImage string `json:"pwd_notification_footer_image"`
	// PwdNotificationFooterImageExt can be one of: []string{"jpg", "png", "gif"}
	// PwdNotificationFooterImageExt default value is "png"
	PwdNotificationFooterImageExt string `json:"pwd_notification_footer_image_ext"`
	// PwdNotificationFooterImageFile default value is ""
	PwdNotificationFooterImageFile string `json:"pwd_notification_footer_image_file"`
	// PwdNotificationHeaderImage can be one of: []string{"none", "default", "custom"}
	// PwdNotificationHeaderImage default value is "default"
	PwdNotificationHeaderImage string `json:"pwd_notification_header_image"`
	// PwdNotificationHeaderImageExt can be one of: []string{"jpg", "png", "gif"}
	// PwdNotificationHeaderImageExt default value is "png"
	PwdNotificationHeaderImageExt string `json:"pwd_notification_header_image_ext"`
	// PwdNotificationHeaderImageFile default value is ""
	PwdNotificationHeaderImageFile string `json:"pwd_notification_header_image_file"`
	// PwdNotificationSubject default value is "SPX password for %%ENVELOPE_TO%%"
	PwdNotificationSubject string `json:"pwd_notification_subject"`
	// PwdRcptNotificationBody default value is "<b>SPX Registration Request from %%ORGANIZATION_NAME%%</b>\n\n%%HEADER_FROM_SANITIZED%% has sent you an encrypted message. Before you can receive and view this email you will need to register with a password by clicking <A HREF=\"%%REGISTRATION_URL%%\">here</A>.\n\nAfter you have completed the registration, you will be able to view any future encrypted emails using the same password that this sender or other senders from %%ORGANIZATION_NAME%% might send you in the future.\n\n<small><i>Note: if your mail program does not support active links, you can register by copying and pasting the text below into your internet browser:</i>\n\n%%REGISTRATION_URL%%\n\n<hr/>\n<i>This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed. This message contains confidential information and is intended only for the individual named. If you are not the named addressee you should not disseminate, distribute or copy this email. Please notify the sender immediately if you have received this email by mistake and delete this email from your system. If you are not the intended recipient you are notified that disclosing, copying, distributing or taking any action in reliance on the contents of this information is strictly prohibited.</i></small>"
	PwdRcptNotificationBody string `json:"pwd_rcpt_notification_body"`
	// PwdRcptNotificationSubject default value is "SPX Registration Request from %%ORGANIZATION_NAME%%"
	PwdRcptNotificationSubject string `json:"pwd_rcpt_notification_subject"`
	// PwdType can be one of: []string{"generated", "stored", "senderspec", "recipientspec"}
	// PwdType default value is "generated"
	PwdType string `json:"pwd_type"`
	// RcptFooterImage can be one of: []string{"none", "default", "custom"}
	// RcptFooterImage default value is "default"
	RcptFooterImage string `json:"rcpt_footer_image"`
	// RcptFooterImageExt can be one of: []string{"jpg", "png", "gif"}
	// RcptFooterImageExt default value is "png"
	RcptFooterImageExt string `json:"rcpt_footer_image_ext"`
	// RcptFooterImageFile default value is ""
	RcptFooterImageFile string `json:"rcpt_footer_image_file"`
	// RcptHeaderImage can be one of: []string{"none", "default", "custom"}
	// RcptHeaderImage default value is "default"
	RcptHeaderImage string `json:"rcpt_header_image"`
	// RcptHeaderImageExt can be one of: []string{"jpg", "png", "gif"}
	// RcptHeaderImageExt default value is "png"
	RcptHeaderImageExt string `json:"rcpt_header_image_ext"`
	// RcptHeaderImageFile default value is ""
	RcptHeaderImageFile string `json:"rcpt_header_image_file"`
	// RcptInstructions default value is ""
	RcptInstructions string `json:"rcpt_instructions"`
	// RemoveSophosLogo default value is false
	RemoveSophosLogo bool `json:"remove_sophos_logo"`
}

var _ sophos.RestGetter = &SpxTemplate{}

// GetPath implements sophos.RestObject and returns the SpxTemplates GET path
// Returns all available spx/template objects
func (*SpxTemplates) GetPath() string { return "/api/objects/spx/template/" }

// RefRequired implements sophos.RestObject
func (*SpxTemplates) RefRequired() (string, bool) { return "", false }

// GetPath implements sophos.RestObject and returns the SpxTemplates GET path
// Returns all available template types
func (s *SpxTemplate) GetPath() string {
	return fmt.Sprintf("/api/objects/spx/template/%s", s.Reference)
}

// RefRequired implements sophos.RestObject
func (s *SpxTemplate) RefRequired() (string, bool) { return s.Reference, true }

// DeletePath implements sophos.RestObject and returns the SpxTemplate DELETE path
// Creates or updates the complete object template
func (*SpxTemplate) DeletePath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// PatchPath implements sophos.RestObject and returns the SpxTemplate PATCH path
// Changes to parts of the object template types
func (*SpxTemplate) PatchPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// PostPath implements sophos.RestObject and returns the SpxTemplate POST path
// Create a new spx/template object
func (*SpxTemplate) PostPath() string {
	return "/api/objects/spx/template/"
}

// PutPath implements sophos.RestObject and returns the SpxTemplate PUT path
// Creates or updates the complete object template
func (*SpxTemplate) PutPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s", ref)
}

// UsedByPath implements sophos.RestObject
// Returns the objects and the nodes that use the object with the given ref
func (*SpxTemplate) UsedByPath(ref string) string {
	return fmt.Sprintf("/api/objects/spx/template/%s/usedby", ref)
}
